{"version":3,"sources":["components/GlobalSetting/LoadingComponent/LoadingComponent.module.css","assets/imgLoading/loading.gif","assets/img/img.jpg","components/GlobalSetting/LoadingComponent/LoadingComponent.js","HOC/Modal/Modal.js","pages/CyberBugs/LoginCyberBugs/LoginCyberBugs.js","redux/actions/CyberBugsActions.js","redux/constants/Cyberbugs/Cyberbugs.js","templates/HomeTemplate/UserLoginTemplate.js","components/Cyberbugs/MenuCyberbugs.js","components/Cyberbugs/ModalCyberBugs/ModalCyberBugs.js","redux/constants/CreateProjectCons.js","components/Cyberbugs/Forms/FormCreateTask.js","redux/constants/DrawerCons.js","components/Cyberbugs/SidebarCyberbugs.js","templates/HomeTemplate/CyberbugsTemplate.js","pages/CyberBugs/CreateProject/CreateProject.js","components/Cyberbugs/Forms/FormEditProject.js","pages/CyberBugs/ProjectManagement/ProjectManagement.js","HOC/CyberBugs/DrawerCyberBugs.js","components/Cyberbugs/Main/ContentMain.js","components/Cyberbugs/Main/InfoMain.js","components/Cyberbugs/Main/HeaderMain.js","pages/CyberBugs/ProjectDetail/indexCyberBugs.js","pages/CyberBugs/SignUpCyberBugs/SignUpCyberBugs.js","components/Cyberbugs/Forms/FormEditUser.js","pages/CyberBugs/UserManagement/UserManagement.js","App.js","redux/reducers/LoadingReducer.js","redux/reducers/ModalReducer.js","services/CyberbugsService.js","util/history.js","services/BaseService.js","services/UserService.js","util/Notification/notificationCyberbugs.js","redux/sagas/Cyberbugs/UserCyberbugsSaga.js","redux/constants/LoadingConst.js","redux/constants/Cyberbugs/UserCons.js","redux/sagas/Cyberbugs/CategorySaga.js","services/ProjectService.js","redux/sagas/Cyberbugs/PropjectSaga.js","services/TaskService.js","redux/sagas/Cyberbugs/CreateTaskSaga.js","services/CommentService.js","redux/sagas/Cyberbugs/CommentSaga.js","redux/sagas/rootSaga.js","redux/reducers/HistoryReducer.js","redux/reducers/UserCyberBugsReducer.js","redux/reducers/CategoryReducer.js","redux/reducers/ProjectManagementReducer.js","redux/reducers/DrawerReducer.js","redux/reducers/ProjectReducer.js","redux/reducers/CreateTaskReducer.js","redux/reducers/TaskDetailReducer.js","redux/configStore.js","index.js","util/constants/settingSystem.js"],"names":["module","exports","LoadingComponent","useSelector","state","LoadingReducer","isLoading","className","styleLoading","bgLoading","alt","src","require","Modal","Component","ModalReducer","id","tabIndex","role","aria-labelledby","aria-hidden","type","data-dismiss","aria-label","LoginCyberBugsWithFormik","withFormik","mapPropsToValues","email","password","validationSchema","Yup","shape","required","min","max","handleSubmit","props","setSubmitting","dispatch","userLogin","singinCyberbugAction","displayName","errors","handleChange","onSubmit","style","height","window","innerHeight","fontWeight","fontSize","color","onChange","width","minWidth","name","size","placeholder","prefix","MailOutlined","LockOutlined","htmlType","backgroundColor","to","icon","TwitterOutlined","connect","Sider","Layout","Content","UserLoginTemplate","useState","Math","round","innerWidth","setSize","useEffect","onresize","restRoute","render","propsRoute","backgroundImage","backgroundSize","MenuCyberbugs","activeClassName","ModalCyberBugs","taskDetailModal","TaskDetailReducer","arrPriority","CreateTaskReducer","arrStatus","arrTaskType","projectDetail","ProjectReducer","UserLoginCyberBugsReducer","visibleEditor","setVisibleEditor","visibleEditorAddComment","setvisibleEditorAddComment","visibleEditorEditComment","setvisibleEditorEditComment","description","historyContent","setHistoryContent","content","setContent","useDispatch","e","target","value","typeId","map","tp","index","key","taskType","taskName","display","paddingRight","cursor","taskTypeDetail","jsxDescription","ReactHtmlParser","initialValue","init","selector","menubar","plugins","toolbar","onEditorChange","editor","onClick","renderDescription","contentComment","avatar","borderRadius","cmtObj","taskId","lstComment","cmt","marginBottom","commentContent","marginRight","title","onConfirm","idComment","okText","cancelText","contentCommentEdit","renderComment","statusId","actionType","status","statusName","assigness","user","marginLeft","paddingTop","userId","options","members","filter","mem","findIndex","us","label","optionFilterProp","onSelect","userSelected","find","priorityId","item","priority","originalEstimate","timeTrackingSpent","timeTrackingRemaining","Number","percent","aria-valuenow","aria-valuemin","aria-valuemax","justifyContent","renderTimeTracking","Option","Select","children","i","push","toString","createTaskForm","enableReinitialize","arrTaskList","projectId","listUserAsign","values","taskObject","arrAssignees","setFieldValue","submitFunction","userOptions","timeTracking","setTimetracking","idProject","project","projectName","statusItem","mode","defaultValue","marginTop","SidebarCyberbugs","collapsed","setState","toggle","trigger","collapsible","MenuOutlined","PauseOutlined","theme","defaultSelectedKeys","Item","ComponentContentDrawer","PlusOutlined","SearchOutlined","CyberbugsTemplate","restParam","createProjectForm","categoryId","arrCategory","newProject","CategoryReducer","projectCategoryName","editProjectForm","projectEdit","disabled","ProjectManagement","searchRef","useRef","setValue","ProjectManagementReducer","userSearch","columns","dataIndex","sorter","next","pre","text","record","item2","item1","projectName1","trim","toLowerCase","categoryName1","categoryName","creator","creator1","slice","member","placement","textAlign","userProject","length","valueSelect","option","onSearch","current","clearTimeout","setTimeout","keyword","FormOutlined","DeleteOutlined","rowKey","dataSource","DrawerCyberBugs","DrawerReducer","visible","callBackSubmit","onClose","bodyStyle","paddingBottom","footer","ContentMain","lstTask","taskListDetail","lstTaskDeTail","task","data-toggle","data-target","priorityTask","renderCardTaskList","InfoMain","HeaderMain","IndexCyberBugs","match","params","SignUpCyberBugsWithFormik","phone","userSignUp","singupCyberbugAction","UserOutlined","PhoneOutlined","editUserForm","userEdit","phoneNumber","UserManagement","keyWord","arrUser","name1","email1","phoneNumber1","ReloadOutlined","App","exact","path","LoginCyberBugs","SignUpCyberBugs","CreateProject","component","initialState","stateDefault","Axios","default","DOMAIN_CYBERBUG","TOKEN","cyberbugsService","url","method","data","console","log","localStorage","getItem","headers","Authorization","projectUpdate","history","createBrowserHistory","BaseService","put","model","post","get","delete","userService","getUser","assignUserProject","deleteUserFromProject","getUserByProjectId","getListUser","deleteUser","editUser","notifiFunction","message","notification","signinSaga","theoDoiSignin","signupSaga","theoDoiSignup","theoDoiGetUser","addUser","theoDoiAddUser","removeUser","theoDoiRemoveUser","getUserByProjectIdSaga","theoDoiGetUserByProjectIdSaga","getListUserSaga","theoDoiGetListUser","theoDoiEditUser","theoDoideleteUser","action","delay","call","setItem","accessToken","USER_LOGIN","JSON","stringify","Swal","fire","response","takeLatest","lstUserSearch","getCategory","theoDoiLayCategory","projectService","getAllTaskType","getAllPriority","deleteProject","getProjectDetail","getAllStatus","getListTask","theoDoiLayDanhSach","editProject","theoEditProject","theoDoiDeleteProject","theoDoiGetProjectDetail","createProject","theoDoiLayCreateProject","projectList","taskService","createTask","getTaskDetail","updateTask","taskUpdate","getTaskTypeAPI","theoDoiGetAllTaskType","getAllPrioritySaga","theoDoiGetAllPriority","getAllStatusSaga","theoDoiGetAllStatus","createTaskSaga","theoDoiCreateTaskSaga","getTaskDetailSaga","theoDoiGetTaskDetailSaga","handelChangePostApi","theoDoiHandleChangePostApi","select","taskUpdateApi","commentService","getAllComment","insertComment","deleteComment","editComment","getCommentApi","theoDoigetCommentApi","insertCommentApi","theoDoiInsertCommentApi","deleteCommentApi","theoDoiDeleteCommentApi","editCommentApi","theoDoiEditCommentApi","rootSaga","all","Cyberbugs","CategorySaga","ProjectSaga","CreateTaskSaga","CommentSaga","historyState","usLogin","parse","propsValue","alias","idUser","middleWareSaga","createMiddleWareSaga","rootReducer","combineReducers","HistoryReducer","store","createStore","applyMiddleware","reduxThunk","run","ReactDOM","document","getElementById","DOMAIN","STATUS_CODE","SUCCESS","NOT_FOUND","SERVER_ERROR"],"mappings":"qJACAA,EAAOC,QAAU,CAAC,UAAY,sC,0DCD9BD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,mICI5B,SAASC,IAGtB,OAFsBC,aAAY,SAACC,GAAD,OAAWA,EAAMC,kBAA3CC,UAIJ,yBAAKC,UAAWC,IAAaC,WAC3B,yBAAKC,IAAI,UAAUC,IAAKC,EAAQ,QAI7B,GCVI,SAASC,IACtB,IAAIC,EAAYX,aAAY,SAACC,GAAD,OAAWA,EAAMW,aAAaD,aAE1D,OACE,yBACEP,UAAU,aACVS,GAAG,UACHC,UAAW,EACXC,KAAK,SACLC,kBAAgB,eAChBC,cAAY,QAEZ,yBAAKb,UAAU,eAAeW,KAAK,YACjC,yBAAKX,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eAAd,eACA,4BACEc,KAAK,SACLd,UAAU,QACVe,eAAa,QACbC,aAAW,SAEX,0BAAMH,cAAY,QAAlB,UAGJ,yBAAKb,UAAU,cAAcO,GAC7B,yBAAKP,UAAU,gBACb,4BACEc,KAAK,SACLd,UAAU,oBACVe,eAAa,SAHf,SAOA,4BAAQD,KAAK,SAASd,UAAU,mBAAhC,Y,wECkDZ,IAAMiB,EAA2BC,YAAW,CAC1CC,iBAAkB,iBAAO,CACvBC,MAAO,GACPC,SAAU,KAEZC,iBAAkBC,MAAaC,MAAM,CACnCJ,MAAOG,MACJE,SAAS,sBACTL,MAAM,qBACTC,SAAUE,MACPG,IAAI,EAAG,uCACPC,IAAI,GAAI,sCAEbC,aAAc,cAAoD,IAAjDR,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,SAAcQ,EAA2B,EAA3BA,OACpCC,EAD+D,EAApBA,gBAC7B,GACdD,EAAME,SClG0B,SAACX,EAAOC,GAC1C,MAAO,CACLP,KCL2B,kBDM3BkB,UAAW,CACTZ,MAAOA,EACPC,SAAUA,ID6FGY,CAAqBb,EAAOC,KAE7Ca,YAAa,kBAjBkBhB,EAhFjC,SAAwBW,GAAQ,IACtBM,EAAuCN,EAAvCM,OAAQC,EAA+BP,EAA/BO,aAAcR,EAAiBC,EAAjBD,aAE9B,OACE,0BACES,SAAUT,EACV5B,UAAU,YACVsC,MAAO,CAAEC,OAAQC,OAAOC,cAH1B,IAME,yBACEzC,UAAU,+DACVsC,MAAO,CAAEC,OAAQC,OAAOC,cAExB,wBACEzC,UAAU,cACVsC,MAAO,CAAEI,WAAY,IAAKC,SAAU,GAAIC,MAAO,qBAFjD,SAMA,yBAAK5C,UAAU,eACb,kBAAC,IAAD,CACE6C,SAAUT,EACVE,MAAO,CAAEQ,MAAO,OAAQC,SAAU,KAClCC,KAAK,QACLC,KAAK,QACLC,YAAY,QACZC,OAAQ,kBAACC,EAAA,EAAD,SAGZ,yBAAKpD,UAAU,eAAemC,EAAOf,OACrC,yBAAKpB,UAAU,eACb,kBAAC,IAAD,CACE6C,SAAUT,EACVE,MAAO,CAAEQ,MAAO,OAAQC,SAAU,KAClCjC,KAAK,WACLkC,KAAK,WACLC,KAAK,QACLC,YAAY,WACZC,OAAQ,kBAACE,EAAA,EAAD,SAGZ,yBAAKrD,UAAU,eAAemC,EAAOd,UAErC,kBAAC,IAAD,CACEiC,SAAS,SACTL,KAAK,QACLX,MAAO,CACLS,SAAU,IACVQ,gBAAiB,mBACjBX,MAAO,QAET5C,UAAU,QARZ,SAYA,gEAAqC,kBAAC,IAAD,CAASwD,GAAG,WAAZ,SAErC,yBAAKxD,UAAU,sBACb,kBAAC,IAAD,CACEsC,MAAO,CAAEiB,gBAAiB,kBAC1B/B,MAAM,SACNyB,KAAM,SAEN,0BAAMjD,UAAU,mBAAmBsC,MAAO,CAAEM,MAAO,SAAnD,MAIF,kBAAC,IAAD,CACE9B,KAAK,eACLU,MAAM,SACNiC,KAAM,kBAACC,EAAA,EAAD,MACNT,KAAM,gBA4BHU,gBAAU1C,G,0BGxGjB2C,EAAmBC,IAAnBD,MAAOE,EAAYD,IAAZC,QAEFC,EAAoB,SAAClC,GAAW,IAAD,EACLmC,mBAAS,CAC5ClB,MAAOmB,KAAKC,MAAM1B,OAAO2B,YACzB5B,OAAQ0B,KAAKC,MAAM1B,OAAOC,eAHc,0BACjCK,EADiC,EACjCA,MAAOP,EAD0B,EAC1BA,OAAU6B,EADgB,KAM1CC,qBAAU,WACR7B,OAAO8B,SAAW,WAChBF,EAAQ,CACNtB,MAAOmB,KAAKC,MAAM1B,OAAO2B,YACzB5B,OAAQ0B,KAAKC,MAAM1B,OAAOC,kBAG7B,IAbuC,IAepClC,EAA4BsB,EAA5BtB,UAAcgE,EAfsB,YAeR1C,EAfQ,eAiB1C,OACE,kBAAC,IAAD,iBACM0C,EADN,CAEEC,OAAQ,SAACC,GACP,OACE,oCACE,kBAAC,IAAD,KACE,kBAACb,EAAD,CACEd,MAAgB,GAARA,EAAc,IACtBR,MAAO,CACLC,OAAQA,EACRmC,gBAAgB,6BAAD,OAA+BT,KAAKC,MACjDpB,EAAQ,GADK,YAEVP,EAFU,KAGfoC,eAAgB,UAGpB,kBAACb,EAAD,KACE,kBAACvD,EAAckE,WCtChB,SAASG,IACtB,OACE,yBAAK5E,UAAU,QACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACb,yBAAKI,IAAKC,EAAQ,KAA6BF,IAAI,SAErD,yBAAKH,UAAU,gBACb,kCACA,8CAIJ,yBAAKA,UAAU,WACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,eACb,kBAAC,IAAD,CACE6E,gBAAgB,0BAChBrB,GAAG,sBAFL,uBAQF,yBAAKxD,UAAU,gBACb,uBAAGA,UAAU,eACb,kBAAC,IAAD,CACE6E,gBAAgB,0BAChBrB,GAAG,mBAFL,oBAQF,yBAAKxD,UAAU,gBACb,uBAAGA,UAAU,cACb,kBAAC,IAAD,CACE6E,gBAAgB,0BAChBrB,GAAG,kBAFL,iBASJ,yBAAKxD,UAAU,WACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,gBACb,2CAGF,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,iBACb,qDAGF,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,gBACb,wCAGF,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,yBACb,0CAGF,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,cACb,+C,uDCnDK,SAAS8E,IAAkB,IAAD,IAC/BC,EAAoBnF,aAAY,SAACC,GAAD,OAAWA,EAAMmF,qBAAjDD,gBACAE,EAAgBrF,aAAY,SAACC,GAAD,OAAWA,EAAMqF,qBAA7CD,YACAE,EAAcvF,aAAY,SAACC,GAAD,OAAWA,EAAMqF,qBAA3CC,UACAC,EAAgBxF,aAAY,SAACC,GAAD,OAAWA,EAAMqF,qBAA7CE,YACAC,EAAkBzF,aAAY,SAACC,GAAD,OAAWA,EAAMyF,kBAA/CD,cACArD,EAAcpC,aAAY,SAACC,GAAD,OAAWA,EAAM0F,6BAA3CvD,UAN+B,EAOGgC,oBAAS,GAPZ,mBAOhCwB,EAPgC,KAOjBC,EAPiB,OAQuBzB,oBAAS,GARhC,mBAQhC0B,EARgC,KAQPC,EARO,OAWrC3B,oBAAS,GAX4B,mBAUhC4B,EAVgC,KAUNC,EAVM,OAaK7B,mBAC1Ce,EAAgBe,aAdqB,mBAahCC,EAbgC,KAahBC,EAbgB,OAgBThC,mBAASe,EAAgBe,aAhBhB,mBAgBhCG,EAhBgC,KAgBvBC,EAhBuB,KAkBjCnE,EAAWoE,cACjB9B,qBAAU,WACRtC,EAAS,CAAEjB,KCnCoB,wBDoC/BiB,EAAS,CAAEjB,KCtCsB,0BDuCjCiB,EAAS,CAAEjB,KCzCuB,6BD0CjC,CAACiB,IAEJ,IA6OMK,EAAe,SAACgE,GAAO,IAAD,EACFA,EAAEC,OAAlBrD,EADkB,EAClBA,KAAMsD,EADY,EACZA,MACdvE,EAAS,CACPjB,KClR2B,oBDmR3BkC,OACAsD,WAoDJ,OACE,yBACEtG,UAAU,aACVS,GAAG,YACHC,UAAW,EACXC,KAAK,SACLC,kBAAgB,YAChBC,cAAY,QAEZ,yBAAKb,UAAU,2BACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,mBACb,4BACEgD,KAAK,SACLsD,MAAOvB,EAAgBwB,OACvB1D,SAAUT,GAETgD,EAAYoB,KAAI,SAACC,EAAIC,GACpB,OACE,4BAAQC,IAAKD,EAAOJ,MAAOG,EAAGhG,IAC3BgG,EAAGG,cAMZ,8BAAO7B,EAAgB8B,WAEzB,yBAAKvE,MAAO,CAAEwE,QAAS,QAAU9G,UAAU,cACzC,6BACE,uBAAGA,UAAU,0BACb,0BAAMsC,MAAO,CAAEyE,aAAc,KAA7B,kBAEF,6BACE,uBAAG/G,UAAU,eACb,0BAAMsC,MAAO,CAAEyE,aAAc,KAA7B,cAEF,uBACE/G,UAAU,wBACVsC,MAAO,CAAE0E,OAAQ,aAEnB,4BACElG,KAAK,SACLd,UAAU,QACVe,eAAa,QACbC,aAAW,SAEX,0BAAMH,cAAY,QAAlB,WAIN,yBAAKb,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,uBAAGA,UAAU,SAAb,4BAC4B,IACzB+E,EAAgBkC,eAAeL,UAElC,yBAAK5G,UAAU,eACb,2CApWQ,WACxB,IAAMkH,EAAiBC,IAAgBpC,EAAgBe,aACvD,OACE,6BACGN,EACC,6BACE,kBAAC,IAAD,CACExC,KAAK,cACLoE,aAAcrC,EAAgBe,YAC9BuB,KAAM,CACJC,SAAU,sBAEV/E,OAAQ,IACRgF,SAAS,EACTC,QAAS,CACP,iEACA,6CACA,wDAEFC,QACE,2JAEJC,eAAgB,SAACzB,EAAS0B,GACxBzB,EAAWD,MAGf,4BACEjG,UAAU,sBACV4H,QAAS,WACP7F,EAAS,CACPjB,KChEe,oBDiEfkC,KAAM,cACNsD,MAAOL,IAETR,GAAiB,KARrB,QAaA,4BACEzF,UAAU,sBACV4H,QAAS,WACP7F,EAAS,CACPjB,KC7Ee,oBD8EfkC,KAAM,cACNsD,MAAOP,IAETN,GAAiB,KARrB,UAeF,yBACEmC,QAAS,WACP5B,EAAkBjB,EAAgBe,aAClCL,GAAkBD,KAGnB0B,IAySQW,IAEH,yBAAK7H,UAAU,WACb,wBAAIA,UAAU,QAAd,WArSI,WAAO,IAAD,EACtB8H,EAEJ,OACE,6BACE,yBAAK9H,UAAU,0BAA0BsC,MAAO,CAAEwE,QAAS,SACzD,yBAAK9G,UAAU,UACb,yBAAKI,IAAK4B,EAAU+F,OAAQ5H,IAAI,YAElC,yBAAKH,UAAU,iBACZ0F,EACC,2BACEpD,MAAO,CAAE0F,aAAc,IACvBJ,QAAS,WACPjC,GAA4BD,IAE9B5E,KAAK,OACLoC,YAAY,sBAGd,6BACE,kBAAC,IAAD,CACEwE,eAAgB,SAACzB,GACf6B,EAAiB7B,GAEnBjD,KAAK,UACLqE,KAAM,CACJC,SAAU,sBAEV/E,OAAQ,IACRgF,SAAS,EACTC,QAAS,CACP,iEACA,6CACA,wDAEFC,QACE,6JAGN,4BACEzH,UAAU,sBACV4H,QAAS,WACPjC,GAA2B,GAC3B5D,EAAS,CACPjB,KCzIU,mBD0IVmH,OAAQ,CACNC,OAAQnD,EAAgBmD,OACxBJ,eAAgBA,OARxB,eAeA,4BACE9H,UAAU,sBACV4H,QAAS,WACPjC,GAA2B,KAH/B,YAaR,yBAAK3F,UAAU,mBAAf,UACG+E,EAAgBoD,kBADnB,aACG,EAA4B3B,KAAI,SAAC4B,EAAK1B,GACrC,OACE,yBAAKC,IAAKD,EAAO1G,UAAU,qBACzB,yBAAKA,UAAU,kBAAkBsC,MAAO,CAAEwE,QAAS,SACjD,yBAAK9G,UAAU,UACb,yBAAKI,IAAKgI,EAAIL,OAAQ5H,IAAI,SAE3ByF,EACC,6BACE,uBAAGtD,MAAO,CAAE+F,aAAc,IACvBD,EAAIpF,KACL,0BAAMV,MAAO,CAAEM,MAAO,YAAtB,iBAEF,uBAAGN,MAAO,CAAE+F,aAAc,IACvBlB,IAAgBiB,EAAIE,iBAEvB,6BACE,0BACEV,QAAS,WACP/B,GACGD,IAGLtD,MAAO,CACLM,MAAO,UACP2F,YAAa,GACbvB,OAAQ,YATZ,QAcA,kBAAC,IAAD,CACEwB,MAAM,uCACNC,UAAW,WACT1G,EAAS,CACPjB,KChMK,sBDiML4H,UAAWN,EAAI3H,GACfyH,OAAQnD,EAAgBmD,UAG5BS,OAAO,OACPC,WAAW,MAVb,YAiBJ,6BACE,kBAAC,IAAD,CACElB,eAAgB,SAACzB,GACf6B,EAAiB7B,GAEnBmB,aAAcgB,EAAIE,eAClBjB,KAAM,CACJC,SAAU,sBAEV/E,OAAQ,IACRgF,SAAS,EACTC,QAAS,CACP,iEACA,6CACA,wDAEFC,QACE,6JAGN,4BACEzH,UAAU,sBACV4H,QAAS,WACP/B,GAA4B,GAC5B9D,EAAS,CACPjB,KCrOK,oBDsOL4H,UAAWN,EAAI3H,GACfoI,mBAAoBf,EACpBI,OAAQnD,EAAgBmD,WAR9B,QAcA,4BACElI,UAAU,sBACV4H,QAAS,WACP/B,GAA4B,KAHhC,kBAgJDiD,KAGL,yBAAK9I,UAAU,SACb,yBAAKA,UAAU,UACb,sCACA,4BACEgD,KAAK,WACLhD,UAAU,gBACVsG,MAAOvB,EAAgBgE,SACvBlG,SAAU,SAACuD,GACTrE,EAAS,CACPjB,KCpZiB,8BDqZjBkI,WCzZO,oBD0ZP1C,MAAOF,EAAEC,OAAOC,MAChBtD,KAAM,eAITmC,EAAUqB,KAAI,SAACyC,EAAQvC,GACtB,OACE,4BAAQJ,MAAO2C,EAAOF,SAAUpC,IAAKD,GAClCuC,EAAOC,iBAMlB,yBAAKlJ,UAAU,aACb,yCACA,yBAAKA,UAAU,OAAf,UACG+E,EAAgBoE,iBADnB,aACG,EAA2B3C,KAAI,SAAC4C,EAAM1C,GACrC,OACE,yBAAKC,IAAKD,EAAO1G,UAAU,gBACzB,yBAAKsC,MAAO,CAAEwE,QAAS,QAAU9G,UAAU,QACzC,yBAAKA,UAAU,UACb,yBAAKI,IAAKgJ,EAAKrB,OAAQ5H,IAAKiJ,EAAKrB,UAEnC,uBAAG/H,UAAU,kBAAkBoJ,EAAKpG,MACpC,uBACEhD,UAAU,cACVsC,MAAO,CACL+G,WAAY,GACZrC,OAAQ,UACRsC,WAAY,QAEd1B,QAAS,WACP7F,EAAS,CACPjB,KCxbO,8BDybPkI,WC5bF,qBD6bEO,OAAQH,EAAK3I,aAS3B,yBAAKT,UAAU,oBACb,kBAAC,IAAD,CACEwJ,QAAO,UAAEnE,EAAcoE,eAAhB,aAAE,EACLC,QAAO,SAACC,GAAS,IAAD,EAIhB,OAAe,KAHN,UAAG5E,EAAgBoE,iBAAnB,aAAG,EAA2BS,WACrC,SAACC,GAAD,OAAQA,EAAGpJ,KAAOkJ,EAAIJ,cAOzB/C,KAAI,SAACmD,GACJ,MAAO,CAAErD,MAAOqD,EAAIJ,OAAQO,MAAOH,EAAI3G,SAE3C+G,iBAAiB,QACjBzH,MAAO,CAAEQ,MAAO,QAChBE,KAAK,UACLsD,MAAM,aACNtG,UAAU,eACVgK,SAAU,SAAC1D,GACT,GAAc,MAAVA,EAAJ,CAGA,IAAI2D,EAAe5E,EAAcoE,QAAQS,MACvC,SAACP,GAAD,OAASA,EAAIJ,SAAWjD,KAE1B2D,EAAY,2BACPA,GADO,IAEVxJ,GAAIwJ,EAAaV,SAGnBxH,EAAS,CACPjB,KCpea,8BDqebkI,WCveE,mBDweFiB,wBAQZ,yBAAKjK,UAAU,WAAWsC,MAAO,CAAE+F,aAAc,KAC/C,wCACA,4BACErF,KAAK,aACLhD,UAAU,eACVsG,MAAOvB,EAAgBoF,WACvBtH,SAAU,SAACuD,GACThE,EAAagE,KAGdnB,EAAYuB,KAAI,SAAC4D,EAAM1D,GACtB,OACE,4BAAQC,IAAKD,EAAOJ,MAAO8D,EAAKD,YAC7BC,EAAKC,eAMhB,yBAAKrK,UAAU,YACb,yDACA,2BACEgD,KAAK,mBACLlC,KAAK,OACLd,UAAU,iBACVsG,MAAOvB,EAAgBuF,iBACvBzH,SAAU,SAACuD,GACThE,EAAagE,OAInB,yBAAKpG,UAAU,iBACb,6CA3PS,WAAO,IACxBuK,EAA6CxF,EAA7CwF,kBAAmBC,EAA0BzF,EAA1ByF,sBAErB7I,EAAM8I,OAAOF,GAAqBE,OAAOD,GACzCE,EAAUzG,KAAKC,MAAOuG,OAAOF,GAAqB5I,EAAO,KAE/D,OACE,6BACE,yBAAKW,MAAO,CAAEwE,QAAS,SACrB,uBAAG9G,UAAU,gBACb,yBAAKsC,MAAO,CAAEQ,MAAO,SACnB,yBAAK9C,UAAU,YACb,yBACEA,UAAU,eACVW,KAAK,cACL2B,MAAO,CAAEQ,MAAM,GAAD,OAAK4H,EAAL,MACdC,gBAAeF,OAAOF,GACtBK,gBAAeH,OAAOD,GACtBK,gBAAelJ,KAGnB,yBAAKW,MAAO,CAAEwE,QAAS,OAAQgE,eAAgB,kBAC7C,uBAAG9K,UAAU,UAAUyK,OAAOD,GAA9B,UACA,uBAAGxK,UAAU,iBACVyK,OAAOD,GADV,kBAMN,yBAAKxK,UAAU,OACb,yBAAKA,UAAU,SACb,2BACEA,UAAU,eACVgD,KAAK,oBACLH,SAAUT,KAGd,yBAAKpC,UAAU,SACb,2BACEA,UAAU,eACVgD,KAAK,wBACLH,SAAUT,OAmNH2I,IAEH,yBAAKzI,MAAO,CAAEM,MAAO,YAArB,yBACA,yBAAKN,MAAO,CAAEM,MAAO,YAArB,sCE5gBlB,I,0DAJQoI,EAAWC,IAAXD,OAEFE,EAAW,GAERC,EAAI,GAAIA,EAAI,GAAIA,IACvBD,EAASE,KAAK,kBAACJ,EAAD,CAAQrE,IAAKwE,EAAEE,SAAS,IAAMF,GAAIA,EAAEE,SAAS,IAAMF,IAoPnE,IAAMG,EAAiBpK,YAAW,CAChCqK,oBAAoB,EAEpBpK,iBAAkB,SAACU,GAAW,IAAD,QACnB2J,EAAqD3J,EAArD2J,YAAapG,EAAwCvD,EAAxCuD,YAAaH,EAA2BpD,EAA3BoD,YAElC,MAAO,CACL4B,SAAU,GACVf,YAAa,GACbiD,SAAQ,UALmDlH,EAAdsD,UAKzB,UAAZ,aAAE,EAAc4D,SACxBuB,iBAAkB,EAClBC,kBAAmB,EACnBC,sBAAuB,EACvBiB,UAAS,UAAED,EAAY,UAAd,aAAE,EAAgB/K,GAC3B8F,OAAM,UAAEnB,EAAY,UAAd,aAAE,EAAgB3E,GACxB0J,WAAU,UAAElF,EAAY,UAAd,aAAE,EAAgBkF,WAC5BuB,cAAe,KAGnBpK,iBAAkBC,MAAaC,MAAM,IACrCI,aAAc,SAAC+J,EAAD,GAAuB,EAAZ9J,MACjBE,SAAS,CAAEjB,KDxRW,mBCwRa8K,WAAYD,KAEvDzJ,YAAa,oBAvBQhB,EAlPvB,SAAwBW,GACtB,IAAME,EAAWoE,cAETqF,EAAgB5L,aAAY,SAACC,GAAD,OAAWA,EAAMqF,qBAA7CsG,YACApG,EAAgBxF,aAAY,SAACC,GAAD,OAAWA,EAAMqF,qBAA7CE,YACAH,EAAgBrF,aAAY,SAACC,GAAD,OAAWA,EAAMqF,qBAA7CD,YACAE,EAAcvF,aAAY,SAACC,GAAD,OAAWA,EAAMqF,qBAA3CC,UACA0G,EAAiBjM,aAAY,SAACC,GAAD,OAAWA,EAAMqF,qBAA9C2G,aACAzJ,EAA8CP,EAA9CO,aAAcR,EAAgCC,EAAhCD,aAAckK,EAAkBjK,EAAlBiK,cAEpCzH,qBAAU,WACRtC,EAAS,CACPjB,KLf4B,uBKiB9BiB,EAAS,CAAEjB,KDrCuB,2BCsClCiB,EAAS,CAAEjB,KDlCoB,wBCmC/BiB,EAAS,CAAEjB,KDrCsB,0BCsCjCiB,EAAS,CAAEjB,KC3BuB,yBD2BOiL,eAAgBnK,MACxD,CAACG,EAAUH,IAEd,IAAMoK,EAAcH,EAAarF,KAAI,SAAC4D,GACpC,MAAO,CAAE9D,MAAO8D,EAAKb,OAAQO,MAAOM,EAAKpH,SArBd,EAyBWgB,mBAAS,CAC/CuG,kBAAmB,EACnBC,sBAAuB,IA3BI,mBAyBtByB,EAzBsB,KAyBRC,EAzBQ,KAgCvBhB,EAAW,GACjB,OACE,0BAAMlL,UAAU,YAAYqC,SAAUT,GACpC,yBAAK5B,UAAU,cACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,sCACA,4BACEgD,KAAK,YACLhD,UAAU,eACV6C,SAAU,SAACuD,GAAM,IAETE,EAAUF,EAAEC,OAAZC,MACNvE,EAAS,CACPjB,KC3DyB,8BD4DzBqL,UAAW7F,IAGbwF,EAAc,YAAa1F,EAAEC,OAAOC,SAGrCkF,EAAYhF,KAAI,SAAC4F,EAAS1F,GACzB,OACE,4BAAQC,IAAKD,EAAOJ,MAAO8F,EAAQ3L,IAChC2L,EAAQC,kBAMnB,yBAAKrM,UAAU,SACb,yBAAKA,UAAU,cACb,qCACA,4BACEgD,KAAK,WACLhD,UAAU,eACV6C,SAAUT,GAET+C,EAAUqB,KAAI,SAAC8F,EAAY5F,GAC1B,OACE,4BAAQC,IAAKD,EAAOJ,MAAOgG,EAAWvD,UACnCuD,EAAWpD,oBAS5B,yBAAKlJ,UAAU,cACb,wCACA,2BACEgD,KAAK,WACLhD,UAAU,eACV6C,SAAUT,KAGd,yBAAKpC,UAAU,cACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,uCACA,4BACEgD,KAAK,aACLhD,UAAU,eACV6C,SAAUT,GAET6C,EAAYuB,KAAI,SAAC6D,EAAU3D,GAC1B,OACE,4BAAQC,IAAKD,EAAOJ,MAAO+D,EAASF,YACjCE,EAASA,eAMpB,yBAAKrK,UAAU,SACb,wCACA,4BACEA,UAAU,eACVgD,KAAK,SACLH,SAAUT,GAETgD,EAAYoB,KAAI,SAACI,EAAUF,GAC1B,OACE,4BAAQC,IAAKD,EAAOJ,MAAOM,EAASnG,IACjCmG,EAASA,iBAQxB,yBAAK5G,UAAU,cACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,wCACA,kBAAC,IAAD,CACEuM,KAAK,WACL/C,QAASwC,EACT9I,YAAY,gBACZ6G,iBAAiB,QACjBlH,SAAU,SAAC8I,GACTG,EAAc,gBAAiBH,IAEjCrJ,MAAO,CAAEQ,MAAO,SAEfoI,GAEH,yBAAKlL,UAAU,YACb,yBAAKA,UAAU,UACb,gDACA,2BACEc,KAAK,SACLY,IAAI,IACJsB,KAAK,mBACLwJ,aAAa,IACbxM,UAAU,eACVuC,OAAO,KACPM,SAAUT,OAKlB,yBAAKpC,UAAU,SACb,4CAEA,kBAAC,IAAD,CACEwM,aAAc,GACdlG,MAAO2F,EAAa1B,kBACpB5I,IACE8I,OAAOwB,EAAa1B,mBACpBE,OAAOwB,EAAazB,yBAGxB,yBAAKxK,UAAU,OACb,yBAAKA,UAAU,oCACZiM,EAAa1B,kBADhB,YAGA,yBAAKvK,UAAU,qCACZiM,EAAazB,sBADhB,gBAIF,yBAAKxK,UAAU,MAAMsC,MAAO,CAAEmK,UAAW,IACvC,yBAAKzM,UAAU,SACb,yCACA,2BACEc,KAAK,SACL0L,aAAa,IACb9K,IAAI,IACJ1B,UAAU,eACVgD,KAAK,oBACLH,SAAU,SAACuD,GACT8F,EAAgB,2BACXD,GADU,IAEb1B,kBAAmBnE,EAAEC,OAAOC,SAE9BwF,EAAc,oBAAqB1F,EAAEC,OAAOC,WAKlD,yBAAKtG,UAAU,SACb,6CACA,2BACEc,KAAK,SACL0L,aAAa,IACb9K,IAAI,IACJ1B,UAAU,eACVgD,KAAK,wBACLH,SAAU,SAACuD,GACT8F,EAAgB,2BACXD,GADU,IAEbzB,sBAAuBpE,EAAEC,OAAOC,SAElCwF,EAAc,wBAAyB1F,EAAEC,OAAOC,eAQ9D,yBAAKtG,UAAU,cACb,0CACA,kBAAC,IAAD,CACEgD,KAAK,cACLqE,KAAM,CACJC,SAAU,sBAEV/E,OAAQ,IACRgF,SAAS,EACTC,QAAS,CACP,iEACA,6CACA,wDAEFC,QACE,2JAEJC,eAAgB,SAACzB,EAAS0B,GACxBmE,EAAc,cAAe7F,WA2C1BtC,eATS,SAAC9D,GACvB,MAAO,CACL2L,YAAa3L,EAAMqF,kBAAkBsG,YACrCpG,YAAavF,EAAMqF,kBAAkBE,YACrCH,YAAapF,EAAMqF,kBAAkBD,YACrCE,UAAWtF,EAAMqF,kBAAkBC,aAIxBxB,CAAyB2H,GEhShC1H,EAAUC,IAAVD,MACO,SAAS8I,IACtB,IAAM3K,EAAWoE,cADwB,EAGfnC,mBAAS,CACjC2I,WAAW,IAJ4B,mBAGlC9M,EAHkC,KAG3B+M,EAH2B,KAMnCC,EAAS,WACbD,EAAS,CACPD,WAAY9M,EAAM8M,aAGtB,OACE,6BACE,kBAAC,EAAD,CACEG,QAAS,KACTC,aAAW,EACXJ,UAAW9M,EAAM8M,UACjBrK,MAAO,CAAEC,OAAQ,SAEhB1C,EAAM8M,UACL,yBAAK3M,UAAU,mBAAmB4H,QAASiF,GACzC,kBAACG,EAAA,EAAD,CACE1K,MAAO,CACL0E,OAAQ,UACRpE,MAAO,OACPD,SAAU,OAKhB,yBAAK3C,UAAU,mBAAmB4H,QAASiF,GACzC,kBAACI,EAAA,EAAD,CACE3K,MAAO,CACL0E,OAAQ,UACRpE,MAAO,OACPD,SAAU,OAMlB,kBAAC,IAAD,CAAMuK,MAAM,OAAOX,KAAK,SAASY,oBAAqB,CAAC,MACrD,kBAAC,IAAKC,KAAN,CACExF,QAAS,WACP7F,EAAS,CACPjB,KDlDS,YCmDT0H,MAAO,iBACP6E,uBAAwB,kBAAC,EAAD,SAG5B1G,IAAI,IACJlD,KAAM,kBAAC6J,EAAA,EAAD,CAAchL,MAAO,CAAEK,SAAU,OAEvC,0BAAM3C,UAAU,QAAhB,gBAEF,kBAAC,IAAKoN,KAAN,CAAWzG,IAAI,IAAIlD,KAAM,kBAAC8J,EAAA,EAAD,CAAgBjL,MAAO,CAAEK,SAAU,OAA5D,a,WC5DG6K,EAAoB,SAAC3L,GAAW,IACnCtB,EAA4BsB,EAA5BtB,UAAckN,EADoB,YACN5L,EADM,eAE1C,OACE,kBAAC,IAAD,iBACM4L,EADN,CAEEjJ,OAAQ,SAACC,GACP,OACE,oCACE,yBAAKzE,UAAU,QACb,kBAAC0M,EAAD,MACA,kBAAC9H,EAAD,MACA,kBAACrE,EAAckE,GACf,kBAACK,EAAD,aCuDd,IAAM4I,EAAoBxM,YAAW,CACnCqK,oBAAoB,EAEpBpK,iBAAkB,SAACU,GAAD,YAAY,CAC5BwK,YAAa,GACbvG,YAAa,GACb6H,WAAU,UAAE9L,EAAM+L,YAAY,UAApB,aAAE,EAAsBnN,KAEpCa,iBAAkBC,MAAaC,MAAM,IACrCI,aAAc,SAAC+J,EAAD,GAAuC,IAA5B9J,EAA2B,EAA3BA,MAA2B,EAApBC,cAC9BD,EAAME,SAAS,CACbjB,KTpEwB,iBSqExB+M,WAAYlC,KAGhBzJ,YAAa,uBAfWhB,EAjE1B,SAAuBW,GACrB,IAAM+L,EAAchO,aAAY,SAACC,GAAD,OAAWA,EAAMiO,gBAAgBF,eAC3D7L,EAAWoE,cAET/D,EAA8CP,EAA9CO,aAAcR,EAAgCC,EAAhCD,aAAckK,EAAkBjK,EAAlBiK,cAUpC,OARAzH,qBAAU,WACRtC,EAAS,CAAEjB,KTF8B,oCSGxC,CAACiB,IAOF,yBAAK/B,UAAU,kBACb,wBAAIA,UAAU,gBAAd,sBACA,0BAAMqC,SAAUT,EAAciB,SAAUT,GACtC,yBAAKpC,UAAU,cACb,mCACA,2BAAOA,UAAU,eAAegD,KAAK,iBAEvC,yBAAKhD,UAAU,cACb,0CACA,kBAAC,IAAD,CACEgD,KAAK,cACLqE,KAAM,CACJC,SAAU,sBAEV/E,OAAQ,IACRgF,SAAS,EACTC,QAAS,CACP,iEACA,6CACA,wDAEFC,QACE,2JAEJC,eA7BiB,SAACzB,EAAS0B,GACnCmE,EAAc,cAAe7F,OA+BzB,yBAAKjG,UAAU,cACb,4BACEgD,KAAK,aACLhD,UAAU,eACV6C,SAAUT,GAETwL,EAAYpH,KAAI,SAAC4D,EAAM1D,GACtB,OACE,4BAAQJ,MAAO8D,EAAK3J,GAAIkG,IAAKD,GAC1B0D,EAAK2D,0BAMhB,4BAAQ/N,UAAU,qCAAqCc,KAAK,UAA5D,uBA8BO6C,eAJS,SAAC9D,GAAD,MAAY,CAClC+N,YAAa/N,EAAMiO,gBAAgBF,eAGtBjK,CAAyB+J,G,qECFxC,IAAMM,GAAkB9M,YAAW,CACjCqK,oBAAoB,EAEpBpK,iBAAkB,SAACU,GAAW,IACpBoM,EAAgBpM,EAAhBoM,YAER,MAAO,CACLxN,GAAE,OAAEwN,QAAF,IAAEA,OAAF,EAAEA,EAAaxN,GACjB4L,YAAa4B,EAAY5B,YACzBvG,YAAamI,EAAYnI,YACzB6H,WAAYM,EAAYN,aAG5BrM,iBAAkBC,MAAaC,MAAM,IACrCI,aAAc,SAAC+J,EAAD,GAAuC,IAA5B9J,EAA2B,EAA3BA,MAA2B,EAApBC,cAC9BD,EAAME,SAAS,CACbjB,KV1FsB,eU2FtBmN,YAAatC,KAGjBzJ,YAAa,eApBShB,EAvFxB,SAAyBW,GACvB,IAAM+L,EAAchO,aAAY,SAACC,GAAD,OAAWA,EAAMiO,gBAAgBF,eAC3D7L,EAAWoE,cACTwF,EAAsD9J,EAAtD8J,OAAQvJ,EAA8CP,EAA9CO,aAAcR,EAAgCC,EAAhCD,aAAckK,EAAkBjK,EAAlBiK,cAW5C,OATAzH,qBAAU,WACRtC,EAAS,CAAEjB,KAAM,kCACjBiB,EAAS,CAAEjB,KAAM,0BAA2BiL,eAAgBnK,MAC3D,CAACG,EAAUH,IAOZ,0BAAM5B,UAAU,kBAAkBqC,SAAUT,GAC1C,yBAAK5B,UAAU,OACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,oBAAb,cACA,2BACEsG,MAAOqF,EAAOlL,GACdyN,UAAQ,EACRlO,UAAU,eACVgD,KAAK,SAIX,yBAAKhD,UAAU,SACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,oBAAb,gBACA,2BACE6C,SAAUT,EACVkE,MAAOqF,EAAOU,YACdrM,UAAU,eACVgD,KAAK,kBAIX,yBAAKhD,UAAU,SACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,oBAAb,oBACA,4BACE6C,SAAUT,EACVpC,UAAU,eACVgD,KAAK,aACLsD,MAAOqF,EAAOgC,YAEbC,EAAYpH,KAAI,SAAC4D,EAAM1D,GACtB,OACE,4BAAQC,IAAKD,EAAOJ,MAAO8D,EAAK3J,IAC7B2J,EAAK2D,2BAQlB,yBAAK/N,UAAU,UACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,oBAAb,eACA,kBAAC,IAAD,CACEgD,KAAK,cACLsD,MAAOqF,EAAO7F,YACduB,KAAM,CACJC,SAAU,sBAEV/E,OAAQ,IACRgF,SAAS,EACTC,QAAS,CACP,iEACA,6CACA,wDAEFC,QACE,2JAEJC,eApEe,SAACzB,EAAS0B,GACnCmE,EAAc,cAAe7F,aAuGlBtC,gBAJS,SAAC9D,GAAD,MAAY,CAClCoO,YAAapO,EAAMyF,eAAe2I,eAGrBtK,CAAyBqK,ICjGzB,SAASG,KACtB,IAAMC,EAAYC,iBAAO,MADiB,EAGhBrK,mBAAS,IAHO,mBAGnCsC,EAHmC,KAG5BgI,EAH4B,KAKpCvM,EAAWoE,cAEjB9B,qBAAU,WACRtC,EAAS,CACPjB,KXd4B,yBWgB7B,CAACiB,IAEJ,IAAMyJ,EAAc5L,aAClB,SAACC,GAAD,OAAWA,EAAM0O,yBAAyB/C,eAGpCgD,EAAe5O,aACrB,SAACC,GAAD,OAAWA,EAAM0F,6BADXiJ,WAIFC,EAAU,CACd,CACEjG,MAAO,KACPkG,UAAW,KACX/H,IAAK,KACLgI,OAAQ,SAACC,EAAMC,GAAP,OAAeD,EAAKnO,GAAKoO,EAAIpO,KAEvC,CACE+H,MAAO,cACPkG,UAAW,cACX/H,IAAK,cACLnC,OAAQ,SAACsK,EAAMC,EAAQrI,GACrB,OAAO,kBAAC,IAAD,CAASlD,GAAE,wBAAmBuL,EAAOtO,KAAOqO,IAErDH,OAAQ,SAACK,EAAOC,GAAW,IAAD,IACpBC,EAAY,UAAGD,EAAM5C,mBAAT,aAAG,EAAmB8C,OAAOC,cAE7C,OADgB,UAAGJ,EAAM3C,mBAAT,aAAG,EAAmB8C,OAAOC,eAC1BF,GACT,EAEH,IAIX,CACE1G,MAAO,WACPkG,UAAW,eACX/H,IAAK,eACLgI,OAAQ,SAACK,EAAOC,GAAW,IAAD,IACpBI,EAAa,UAAGJ,EAAMK,oBAAT,aAAG,EAAoBH,OAAOC,cAE/C,OADiB,UAAGJ,EAAMM,oBAAT,aAAG,EAAoBH,OAAOC,eAC3BC,GACV,EAEH,IAIX,CACE7G,MAAO,UAEP7B,IAAK,UACLnC,OAAQ,SAACsK,EAAMC,EAAQrI,GAAW,IAAD,EAC/B,OAAO,kBAAC,IAAD,CAAK9D,MAAM,SAAX,UAAoBmM,EAAOQ,eAA3B,aAAoB,EAAgBvM,OAE7C2L,OAAQ,SAACK,EAAOC,GAAW,IAAD,IACpBO,EAAQ,UAAGP,EAAMM,eAAT,aAAG,EAAevM,KAAKmM,OAAOC,cAE1C,OADY,UAAGJ,EAAMO,eAAT,aAAG,EAAevM,KAAKmM,OAAOC,eAC3BI,GACL,EAEH,IAIX,CACEhH,MAAO,UACP7B,IAAK,UACLnC,OAAQ,SAACsK,EAAMC,EAAQrI,GAAW,IAAD,IAC/B,OACE,uCACGqI,EAAOtF,eADV,aACG,EAAgBgG,MAAM,EAAG,GAAGjJ,KAAI,SAACkJ,EAAQhJ,GACxC,OACE,kBAAC,KAAD,CACEC,IAAKD,EACLiJ,UAAU,SACVnH,MAAO,UACPvC,QAAS,WAAO,IAAD,EACb,OACE,2BAAOjG,UAAU,SACf,+BACE,4BACE,kCACA,sCACA,oCACA,+BAGJ,yCACG+O,EAAOtF,eADV,aACG,EAAgBjD,KAAI,SAAC4D,EAAM1D,GAC1B,OACE,wBAAIC,IAAKD,GACP,4BAAK0D,EAAKb,QACV,4BACE,yBACEpJ,IAAI,GACJC,IAAKgK,EAAKrC,OACVjF,MAAM,KACNP,OAAO,KACPD,MAAO,CAAE0F,aAAc,UAG3B,wBACE1F,MAAO,CACLK,SAAU,GACViN,UAAW,WAGZxF,EAAKpH,MAER,4BACE,4BACE4E,QAAS,WACP7F,EAAS,CACPjB,KLhJD,0BKiJC+O,YAAa,CACXtG,OAAQa,EAAKb,OACbkC,UAAWsD,EAAOtO,OAIxBT,UAAU,iBACVsC,MAAO,CACL0F,aAAc,QAZlB,cA0BhB,kBAAC,KAAD,CAAQrB,IAAKD,EAAOtG,IAAKsP,EAAO3H,cAKrC,UAAAgH,EAAOtF,eAAP,eAAgBqG,QAAS,EAAI,kBAAC,KAAD,YAAuB,GAErD,kBAAC,KAAD,CACEH,UAAU,SACVnH,MAAO,eACPvC,QAAS,WACP,OACE,kBAAC,KAAD,CACEK,MAAOA,EACPzD,SAAU,SAACiM,GACTR,EAASQ,IAEXtF,QAAO,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAYhI,KAAI,SAAC4C,GACxB,MAAO,CACLU,MAAOV,EAAKpG,KACZsD,MAAO8C,EAAKG,OAAO8B,eAGvBrB,SAAU,SAAC+F,EAAaC,GACtB1B,EAAS0B,EAAOlG,OAChB/H,EAAS,CACPjB,KLlMY,uBKmMZ+O,YAAa,CACXpE,UAAWsD,EAAOtO,GAClB8I,OAAQwG,MAIdE,SAAU,SAAC3J,GACL8H,EAAU8B,SACZC,aAAa/B,EAAU8B,SAEzB9B,EAAU8B,QAAUE,YAAW,WAC7BrO,EAAS,CACPjB,KLhNE,eKiNFuP,QAAS/J,MAEV,MAELhE,MAAO,CAAEQ,MAAO,WAItBgK,QAAQ,SAER,kBAAC,IAAD,CAAQxK,MAAO,CAAE0F,aAAc,QAA/B,SAOV,CACEQ,MAAO,SACPkG,UAAW,GACX/H,IAAK,IACLnC,OAAQ,SAACsK,EAAMC,EAAQrI,GACrB,OACE,6BACE,4BACE1G,UAAU,uBACV4H,QAAS,WAMP7F,EALe,CACbjB,KLzOO,YK0OP0H,MAAO,eACP6E,uBAAwB,kBAAC,GAAD,QAQ1BtL,EAJ0B,CACxBjB,KXnOU,eWoOVmN,YAAac,MAKjB,kBAACuB,GAAA,EAAD,CAAchO,MAAO,CAAEK,SAAU,OAGnC,kBAAC,IAAD,CACE6F,MAAM,uCACNC,UAAW,WACT1G,EAAS,CAAEjB,KX9OG,iBW8OmBqL,UAAW4C,EAAOtO,MAErDkI,OAAO,MACPC,WAAW,MAEX,4BAAQ5I,UAAU,kBAChB,kBAACuQ,GAAA,EAAD,CAAgBjO,MAAO,CAAEK,SAAU,YAQjD,OACE,yBAAK3C,UAAU,kBACb,wBAAIA,UAAU,qBAAd,sBAEA,kBAAC,KAAD,CAAOyO,QAASA,EAAS+B,OAAQ,KAAMC,WAAYjF,K,cClR1C,SAASkF,KAAmB,IAAD,EAEtC9Q,aAAY,SAACC,GAAD,OAAWA,EAAM8Q,iBADvBC,EADgC,EAChCA,QAASvD,EADuB,EACvBA,uBAAwBwD,EADD,EACCA,eAAgBrI,EADjB,EACiBA,MAGnDzG,EAAWoE,cAEX2K,EAAU,WACd/O,EAAS,CAAEjB,KNZa,kBMe1B,OACE,oCACE,kBAAC,KAAD,CACE0H,MAAOA,EACP1F,MAAO,IACPgO,QAASA,EACTF,QAASA,EACTG,UAAW,CAAEC,cAAe,IAC5BC,OACE,yBACE3O,MAAO,CACLsN,UAAW,UAGb,kBAAC,IAAD,CAAQhI,QAASkJ,EAASxO,MAAO,CAAEiG,YAAa,IAAhD,UAGA,kBAAC,IAAD,CAAQX,QAASiJ,EAAgB/P,KAAK,WAAtC,YAMHuM,IC/BM,SAAS6D,GAAYrP,GAAQ,IAClCwD,EAAkBxD,EAAlBwD,cACFtD,EAAWoE,cA6DjB,OACE,yBAAKnG,UAAU,UAAUsC,MAAO,CAAEwE,QAAS,SA7DlB,WAAO,IAAD,EAC/B,iBAAOzB,EAAc8L,eAArB,aAAO,EAAuB3K,KAAI,SAAC4K,EAAgB1K,GACjD,OACE,yBACEC,IAAKD,EACL1G,UAAU,YACVsC,MAAO,CAAEQ,MAAO,QAASP,OAAQ,SAEjC,yBAAKvC,UAAU,eAAeoR,EAAelI,YAC7C,wBAAIlJ,UAAU,+BACXoR,EAAeC,cAAc7K,KAAI,SAAC8K,EAAM5K,GACvC,OACE,wBACEkB,QAAS,WACP7F,EAAS,CACPjB,KThBc,uBSiBdoH,OAAQoJ,EAAKpJ,SAGfnG,EAAS,CACPjB,KTZc,uBSadoH,OAAQoJ,EAAKpJ,UAGjBvB,IAAKD,EACL1G,UAAU,kBACVuR,cAAY,QACZC,cAAY,aACZlP,MAAO,CAAE0E,OAAQ,YAEjB,uBAAGhH,UAAU,mBAAmBsR,EAAKzK,UACrC,yBAAK7G,UAAU,QAAQsC,MAAO,CAAEwE,QAAS,SACvC,yBAAK9G,UAAU,cACb,uBAAGA,UAAU,eACVsR,EAAKG,aAAapH,UAErB,uBAAGrK,UAAU,mBACb,uBAAGA,UAAU,oBAEf,yBAAKA,UAAU,eACb,yBAAKA,UAAU,eAAesC,MAAO,CAAEwE,QAAS,SAC7CwK,EAAKnI,UAAU3C,KAAI,SAACmD,EAAKjD,GACxB,OACE,yBAAK1G,UAAU,SAAS2G,IAAKD,GAC3B,yBAAKtG,IAAKuJ,EAAI5B,OAAQ5H,IAAKwJ,EAAI5B,yBAkBtD2J,ICtEQ,SAASC,GAAS9P,GAAQ,IAAD,EACtC,OACE,oCACE,wBAAI7B,UAAU,gBAAgB6B,EAAMwD,cAAcgH,aAClD,yBAAKrM,UAAU,OAAOsC,MAAO,CAAEwE,QAAS,SACtC,yBAAK9G,UAAU,gBACb,2BAAOkD,YAAY,sBAAsBlD,UAAU,WACnD,uBAAGA,UAAU,kBAEf,yBAAKA,UAAU,eAAesC,MAAO,CAAEwE,QAAS,SAAhD,UACGjF,EAAMwD,cAAcoE,eADvB,aACG,EAA6BjD,KAAI,SAACkJ,EAAQhJ,GACzC,OACE,yBAAKC,IAAKD,EAAO1G,UAAU,UACzB,yBAAKI,IAAKsP,EAAO3H,OAAQ5H,IAAI,WAKrC,yBAAKmC,MAAO,CAAE+G,WAAY,IAAMrJ,UAAU,QAA1C,kBAGA,yBAAKsC,MAAO,CAAE+G,WAAY,IAAMrJ,UAAU,QAA1C,sBCrBO,SAAS4R,GAAW/P,GACjC,OACE,yBAAK7B,UAAU,UACb,yBAAKgB,aAAW,cACd,wBAAIhB,UAAU,aAAasC,MAAO,CAAEiB,gBAAiB,UACnD,wBAAIvD,UAAU,mBAAd,WACA,wBAAIA,UAAU,mBAAmB6B,EAAMwD,cAAcgH,gBCAhD,SAASwF,GAAehQ,GAAQ,IACrCwD,EAAkBzF,aAAY,SAACC,GAAD,OAAWA,EAAMyF,kBAA/CD,cACFtD,EAAWoE,cAUjB,OARA9B,qBAAU,WACR,IAAIoH,EAAY5J,EAAMiQ,MAAMC,OAAOtG,UACnC1J,EAAS,CACPjB,KhBUiC,0BgBTjC2K,UAAWA,MAEZ,CAAC1J,EAAUF,EAAMiQ,MAAMC,OAAOtG,YAG/B,yBAAKzL,UAAU,kBACb,kBAAC4R,GAAD,CAAYvM,cAAeA,IAC3B,kBAACsM,GAAD,CAAUtM,cAAeA,IACzB,kBAAC6L,GAAD,CAAa7L,cAAeA,K,wBCiGlC,IAAM2M,GAA4B9Q,YAAW,CAC3CC,iBAAkB,iBAAO,CACvBC,MAAO,GACPC,SAAU,GACV2B,KAAM,GACNiP,MAAO,KAET3Q,iBAAkBC,MAAaC,MAAM,CACnCJ,MAAOG,MACJE,SAAS,sBACTL,MAAM,qBACTC,SAAUE,MACPE,SAAS,sBACTC,IAAI,EAAG,uCACPC,IAAI,GAAI,mCACXqB,KAAMzB,MACHG,IAAI,EAAG,mCACPD,SAAS,qBACZwQ,MAAO1Q,MACJG,IAAI,GAAI,kCACRD,SAAS,+BAEdG,aAAc,cAGR,IAFFR,EAEC,EAFDA,MAAOC,EAEN,EAFMA,SAAU2B,EAEhB,EAFgBA,KAAMiP,EAEtB,EAFsBA,MACvBpQ,EACC,EADDA,OAEFC,EADG,EADMA,gBAEK,GACdD,EAAME,SlBrI0B,SAACX,EAAOC,EAAU2B,EAAMiP,GAC1D,MAAO,CACLnR,KCb2B,kBDc3BoR,WAAY,CACV9Q,MAAOA,EACPC,SAAUA,EACV2B,KAAMA,EACNiP,MAAOA,IkB8HME,CAAqB/Q,EAAOC,EAAU2B,EAAMiP,KAE7D/P,YAAa,mBA7BmBhB,EA3GlC,SAAyBW,GAAQ,IACvBM,EAAuCN,EAAvCM,OAAQC,EAA+BP,EAA/BO,aAAcR,EAAiBC,EAAjBD,aAE9B,OACE,0BACES,SAAUT,EACV5B,UAAU,YACVsC,MAAO,CAAEC,OAAQC,OAAOC,cAH1B,IAME,yBACEzC,UAAU,+DACVsC,MAAO,CAAEC,OAAQC,OAAOC,cAExB,wBACEzC,UAAU,cACVsC,MAAO,CAAEI,WAAY,IAAKC,SAAU,GAAIC,MAAO,qBAFjD,WAMA,yBAAK5C,UAAU,eACb,kBAAC,IAAD,CACE6C,SAAUT,EACVE,MAAO,CAAEQ,MAAO,OAAQC,SAAU,KAClCC,KAAK,QACLC,KAAK,QACLC,YAAY,SACZC,OAAQ,kBAACC,EAAA,EAAD,SAGZ,yBAAKpD,UAAU,eAAemC,EAAOf,OAErC,yBAAKpB,UAAU,eACb,kBAAC,IAAD,CACE6C,SAAUT,EACVE,MAAO,CAAEQ,MAAO,OAAQC,SAAU,KAClCC,KAAK,OACLC,KAAK,QACLC,YAAY,QACZC,OAAQ,kBAACiP,GAAA,EAAD,SAGZ,yBAAKpS,UAAU,eAAemC,EAAOa,MAErC,yBAAKhD,UAAU,eACb,kBAAC,IAAD,CACE6C,SAAUT,EACVE,MAAO,CAAEQ,MAAO,OAAQC,SAAU,KAClCC,KAAK,QACLC,KAAK,QACLC,YAAY,SACZC,OAAQ,kBAACkP,GAAA,EAAD,SAGZ,yBAAKrS,UAAU,eAAemC,EAAO8P,OAErC,yBAAKjS,UAAU,eACb,kBAAC,IAAD,CACE6C,SAAUT,EACVE,MAAO,CAAEQ,MAAO,OAAQC,SAAU,KAClCjC,KAAK,WACLkC,KAAK,WACLC,KAAK,QACLC,YAAY,YACZC,OAAQ,kBAACE,EAAA,EAAD,SAGZ,yBAAKrD,UAAU,eAAemC,EAAOd,UAErC,kBAAC,IAAD,CACEiC,SAAS,SACTL,KAAK,QACLX,MAAO,CACLS,SAAU,IACVQ,gBAAiB,mBACjBX,MAAO,QAET5C,UAAU,QARZ,WAYA,gEACiC,kBAAC,IAAD,CAASwD,GAAG,UAAZ,SAGjC,yBAAKxD,UAAU,sBACb,kBAAC,IAAD,CACEsC,MAAO,CAAEiB,gBAAiB,kBAC1B/B,MAAM,SACNyB,KAAM,SAEN,0BAAMjD,UAAU,mBAAmBsC,MAAO,CAAEM,MAAO,SAAnD,MAIF,kBAAC,IAAD,CACE9B,KAAK,eACLU,MAAM,SACNiC,KAAM,kBAACC,EAAA,EAAD,MACNT,KAAM,gBAwCHU,iBAAUqO,I,UCpFzB,IAAMM,GAAepR,YAAW,CAC9BqK,oBAAoB,EAEpBpK,iBAAkB,SAACU,GAAW,IACpB0Q,EAAa1Q,EAAb0Q,SAER,MAAO,CACL9R,GAAI8R,EAAShJ,OACbnI,MAAOmR,EAASnR,MAChB4B,KAAMuP,EAASvP,KACfwP,YAAaD,EAASC,cAG1BlR,iBAAkBC,MAAaC,MAAM,IAWrCI,aAAc,SAAC+J,EAAD,GAAuC,IAA5B9J,EAA2B,EAA3BA,MAA2B,EAApBC,cAC9BD,EAAME,SAAS,CACbjB,KlBpFwB,iBkBqFxByR,SAAU5G,KAGdzJ,YAAa,YA9BMhB,EA7DrB,SAAsBW,GACpB,IAAME,EAAWoE,cACTwF,EAAuC9J,EAAvC8J,OAAQvJ,EAA+BP,EAA/BO,aAAcR,EAAiBC,EAAjBD,aAM9B,OAJAyC,qBAAU,WACRtC,EAAS,CAAEjB,KZVqB,uBYUOiL,eAAgBnK,MACtD,CAACG,EAAUH,IAGZ,0BAAM5B,UAAU,kBAAkBqC,SAAUT,GAC1C,yBAAK5B,UAAU,OACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,oBAAb,WACA,2BACEsG,MAAOqF,EAAOlL,GACdyN,UAAQ,EACRlO,UAAU,eACVgD,KAAK,SAIX,yBAAKhD,UAAU,SACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,oBAAb,gBACA,2BACE6C,SAAUT,EACVkE,MAAOqF,EAAO6G,YACdxS,UAAU,eACVgD,KAAK,kBAIX,yBAAKhD,UAAU,UACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,oBAAb,aACA,2BACE6C,SAAUT,EACVkE,MAAOqF,EAAO3I,KACdhD,UAAU,eACVgD,KAAK,WAKX,yBAAKhD,UAAU,UACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,oBAAb,SACA,2BACE6C,SAAUT,EACVkE,MAAOqF,EAAOvK,MACdpB,UAAU,eACVgD,KAAK,iBA8CJW,gBAJS,SAAC9D,GAAD,MAAY,CAClC0S,SAAU1S,EAAM0F,0BAA0BgN,YAG7B5O,CAAyB2O,IC1FzB,SAASG,KACtB,IAAMrE,EAAYC,iBAAO,MADc,EAGbrK,mBAAS,IAHI,mBAGhCsC,EAHgC,KAGzBgI,EAHyB,KAI/BE,EAAe5O,aACrB,SAACC,GAAD,OAAWA,EAAM0F,6BADXiJ,WAGFzM,EAAWoE,cAEjB9B,qBAAU,WACRtC,EAAS,CACPjB,KnBnB4B,qBmBoB5B4R,QAAS,OAEV,CAAC3Q,IAEJ,IAAM4Q,EAAU/S,aACd,SAACC,GAAD,OAAWA,EAAM0F,0BAA0BoN,WAGvClE,EAAU,CACd,CACEjG,MAAO,UACPkG,UAAW,SACX/H,IAAK,SACLgI,OAAQ,SAACC,EAAMC,GAAP,OAAeD,EAAKrF,OAASsF,EAAItF,SAG3C,CACEf,MAAO,YACPkG,UAAW,OACX/H,IAAK,OAELgI,OAAQ,SAACK,EAAOC,GAAW,IAAD,IACpB2D,EAAK,UAAG3D,EAAMjM,YAAT,aAAG,EAAYmM,OAAOC,cAE/B,OADS,UAAGJ,EAAMhM,YAAT,aAAG,EAAYmM,OAAOC,eACnBwD,GACF,EAEH,IAIX,CACEpK,MAAO,QACPkG,UAAW,QACX/H,IAAK,QACLgI,OAAQ,SAACK,EAAOC,GAAW,IAAD,IACpB4D,EAAM,UAAG5D,EAAM7N,aAAT,aAAG,EAAa+N,OAAOC,cAEjC,OADU,UAAGJ,EAAM5N,aAAT,aAAG,EAAa+N,OAAOC,eACpByD,GACH,EAEH,IAIX,CACErK,MAAO,eACPkG,UAAW,cACX/H,IAAK,cACLgI,OAAQ,SAACK,EAAOC,GAAW,IAAD,IACpB6D,EAAY,UAAG7D,EAAMuD,mBAAT,aAAG,EAAmBrD,OAAOC,cAE7C,OADgB,UAAGJ,EAAMwD,mBAAT,aAAG,EAAmBrD,OAAOC,eAC1B0D,GACT,EAEH,IAIX,CACEtK,MAAO,SACPkG,UAAW,GACX/H,IAAK,IACLnC,OAAQ,SAACsK,EAAMC,EAAQrI,GACrB,OACE,yBAAKC,IAAKD,GACR,4BACE1G,UAAU,uBACV4H,QAAS,WAMP7F,EALe,CACbjB,KbzFO,Ya0FP0H,MAAO,YACP6E,uBAAwB,kBAAC,GAAD,QAQ1BtL,EAJuB,CACrBjB,KnB/FO,YmBgGPyR,SAAUxD,MAKd,kBAACuB,GAAA,EAAD,CAAchO,MAAO,CAAEK,SAAU,OAGnC,kBAAC,IAAD,CACE6F,MAAM,oCACNC,UAAW,WACT1G,EAAS,CAAEjB,KnBzGK,mBmByGmByI,OAAQwF,EAAOxF,UAEpDZ,OAAO,MACPC,WAAW,MAEX,4BAAQ5I,UAAU,kBAChB,kBAACuQ,GAAA,EAAD,CAAgBjO,MAAO,CAAEK,SAAU,YAQjD,OACE,yBAAK3C,UAAU,kBACb,wBAAIA,UAAU,qBAAd,mBACA,kBAAC,KAAD,CACEA,UAAU,YACVkD,YAAY,wBACZoD,MAAOA,EACPzD,SAAU,SAACiM,GACTR,EAASQ,IAEXtF,QAAO,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAYhI,KAAI,SAAC4C,GACxB,MAAO,CACLU,MAAOV,EAAKpG,KACZsD,MAAO8C,EAAKG,OAAO8B,eAGvBrB,SAAU,SAAC+F,EAAaC,GACtB1B,EAAS0B,EAAOlG,OAChB/H,EAAS,CACPjB,KnB9IsB,qBmB+ItB4R,QAAS3C,KAGbE,SAAU,SAAC3J,GACL8H,EAAU8B,SACZC,aAAa/B,EAAU8B,SAEzB9B,EAAU8B,QAAUE,YAAW,WAC7BrO,EAAS,CACPjB,Kb3Jc,ea4JduP,QAAS/J,MAEV,MAELhE,MAAO,CAAEQ,MAAO,OAAQP,OAAQ,MAElC,4BACEqF,QAAS,WACP7F,EAAS,CACPjB,KnBlKsB,qBmBmKtB4R,QAAS,MAGb1S,UAAU,oCAEV,kBAAC+S,GAAA,EAAD,OAEF,kBAAC,KAAD,CACEtE,QAASA,EACT+B,OAAQ,KACRC,WAAYkC,KChILK,OAvCf,WACE,OACE,oCACE,kBAAC1S,EAAD,MACA,kBAACX,EAAD,MACA,kBAAC+Q,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAmBuC,OAAK,EAACC,KAAK,SAAS3S,UAAW4S,IAClD,kBAAC,EAAD,CAAmBF,OAAK,EAACC,KAAK,UAAU3S,UAAW6S,KACnD,kBAAC,EAAD,CAAmBH,OAAK,EAACC,KAAK,aAAa3S,UAAWsR,KACtD,kBAAC,EAAD,CAAmBoB,OAAK,EAACC,KAAK,IAAI3S,UAAW4S,IAC7C,kBAAC,EAAD,CACEF,OAAK,EACLC,KAAK,4BACL3S,UAAWsR,KAGb,kBAAC,EAAD,CACEoB,OAAK,EACLC,KAAK,iBACL3S,UAAW8S,IAEb,kBAAC,EAAD,CACEJ,OAAK,EACLC,KAAK,qBACL3S,UAAW4N,KAGb,kBAAC,EAAD,CACE8E,OAAK,EACLC,KAAK,kBACL3S,UAAWkS,KAEb,kBAAC,EAAD,CAAmBQ,OAAK,EAACC,KAAK,IAAII,UAAWzB,Q,UC7C/C0B,GAAe,CACnBxT,WAAW,GCDPyT,GAAe,CACnBjT,UAAW,qE,+CCHIkT,GAAUpT,EAAQ,KAA3BqT,Q,GAC2BrT,EAAQ,IAAnCsT,G,GAAAA,gBAAiBC,G,GAAAA,MAEZC,GACM,SAAC7R,GAChB,OAAOyR,GAAM,CACXK,IAAI,GAAD,OAAKH,GAAL,iBACHI,OAAQ,OACRC,KAAMhS,KALC6R,GASM,SAAC3B,GAChB,OAAOuB,GAAM,CACXK,IAAI,GAAD,OAAKH,GAAL,iBACHI,OAAQ,OACRC,KAAM9B,KAbC2B,GAiBY,WACrB,OAAOJ,GAAM,CACXK,IAAI,GAAD,OAAKH,GAAL,oBACHI,OAAQ,SApBDF,GAgCiB,SAAChG,GAE3B,OADAoG,QAAQC,IAAIC,aAAaC,QAAQR,KAC1BH,GAAM,CACXK,IAAI,GAAD,OAAKH,GAAL,mCACHI,OAAQ,OACRC,KAAMnG,EACNwG,QAAS,CAAEC,cAAe,UAAYH,aAAaC,QAAQR,QAtCpDC,GA0CK,WACd,OAAOJ,GAAM,CACXK,IAAI,GAAD,OAAKH,GAAL,0BACHI,OAAQ,MACRM,QAAS,CAAEC,cAAe,UAAYH,aAAaC,QAAQR,QA9CpDC,GAkDI,SAACU,GACd,OAAOd,GAAM,CACXK,IAAI,GAAD,OAAKH,GAAL,4CAAwDY,EAAc9T,IACzEsT,OAAQ,MACRC,KAAMO,EACNF,QAAS,CAAEC,cAAe,UAAYH,aAAaC,QAAQR,Q,uCCxDpDY,GAAUC,e,kDCCVC,GAAb,uCACEC,IAAM,SAACb,EAAKc,GACV,OAAOnB,KAAM,CACXK,IAAI,GAAD,OAAKH,mBAAL,YAAwBG,GAC3BC,OAAQ,MACRC,KAAMY,EACNP,QAAS,CAAEC,cAAe,UAAYH,aAAaC,QAAQR,cANjE,KAUEiB,KAAO,SAACf,EAAKc,GACX,OAAOnB,KAAM,CACXK,IAAI,GAAD,OAAKH,mBAAL,YAAwBG,GAC3BC,OAAQ,OACRC,KAAMY,EACNP,QAAS,CAAEC,cAAe,UAAYH,aAAaC,QAAQR,cAfjE,KAmBEkB,IAAM,SAAChB,GACL,OAAOL,KAAM,CACXK,IAAI,GAAD,OAAKH,mBAAL,YAAwBG,GAC3BC,OAAQ,MACRM,QAAS,CAAEC,cAAe,UAAYH,aAAaC,QAAQR,cAvBjE,KA2BEmB,OAAS,SAACjB,GACR,OAAOL,KAAM,CACXK,IAAI,GAAD,OAAKH,mBAAL,YAAwBG,GAC3BC,OAAQ,SACRM,QAAS,CAAEC,cAAe,UAAYH,aAAaC,QAAQR,eCEpDoB,GAAc,IAlC3B,+MACEC,QAAU,SAACvC,GACT,OAAO,EAAKoC,IAAL,gCAAkCpC,KAF7C,EAKEwC,kBAAoB,SAACrF,GACnB,OAAO,EAAKgF,KAAL,4BAAuChF,IANlD,EASEsF,sBAAwB,SAACtF,GACvB,OAAO,EAAKgF,KAAL,gCAA2ChF,IAVtD,EAaEuF,mBAAqB,SAACjJ,GACpB,OAAO,EAAK2I,IAAL,6CAA+C3I,KAd1D,EAiBEkJ,YAAc,SAAC3C,GACb,OAAO,EAAKoC,IAAL,gCAAkCpC,KAlB7C,EAqBE4C,WAAa,SAAC/L,GACZ,OAAO,EAAKwL,OAAL,8BAAmCxL,KAtB9C,EAyBEgM,SAAW,SAAChD,GACV,OAAO,EAAKoC,IAAI,iBAAkBpC,IA1BtC,YAAiCmC,K,UCApBc,GAAiB,SAAC1U,EAAM2U,GAA+B,IAAtB3P,EAAqB,uDAAP,GAC1D4P,KAAa5U,GAAM,CAEjB2U,QAASA,EACT3P,YAAaA,K,aCsBP6P,I,aA6BOC,I,aAIPC,I,aAqBOC,I,aAIPb,I,aAaOc,I,aAIPC,I,aAYOC,I,aAIPC,I,aAWOC,I,aAIPC,I,aAoBOC,I,aAIPC,I,aAaOC,I,aAKPhB,I,aAkBOiB,I,aAKPlB,I,aAiBOmB,IA5LjB,SAAUd,GAAWe,GAArB,0EACE,OADF,SACQ/B,aAAI,CACR7T,KC9B2B,oBD4B/B,OAIE,OAJF,SAIQ6V,aAAM,KAJd,OAOqB,OAPrB,kBAO2BC,cAAK,kBAC1B/C,GAAiC6C,EAAO1U,cAR9C,OAcI,OAdJ,SAOYgS,EAPZ,EAOYA,KAIRG,aAAa0C,QAAQjD,SAAOI,EAAK/N,QAAQ6Q,aACzC3C,aAAa0C,QAAQE,cAAYC,KAAKC,UAAUjD,EAAK/N,UAZzD,UAcU0O,aAAI,CACR7T,K5B1CiB,U4B2CjBkB,UAAWgS,EAAK/N,UAhBtB,QAmBIuO,GAAQpJ,KAAK,sBAnBjB,kDAqBI8L,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SArBhC,QAwBE,OAxBF,UAwBQd,aAAI,CACR7T,KCpDwB,iBD2B5B,uDA6BO,SAAU8U,KAAV,kEACL,OADK,SACCyB,a5BxDuB,kB4BwDK1B,IAD7B,wCAIP,SAAUE,GAAWa,GAArB,0EACE,OADF,SACQ/B,aAAI,CACR7T,KC/D2B,oBD6D/B,OAIE,OAJF,SAIQ6V,aAAM,KAJd,OAOqB,OAPrB,kBAO2BC,cAAK,kBAC1B/C,GAAiC6C,EAAOxE,eAR9C,gBAOY8B,EAPZ,EAOYA,KAGRkD,KAAKC,KAAKnD,EAAKyB,SACfjB,GAAQpJ,KAAK,UAXjB,kDAaI8L,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SAbhC,QAgBE,OAhBF,UAgBQd,aAAI,CACR7T,KC7EwB,iBD4D5B,uDAqBO,SAAUgV,KAAV,kEACL,OADK,SACCuB,a5B/EuB,kB4B+EKxB,IAD7B,wCAIP,SAAUZ,GAAQyB,GAAlB,0EAEqB,OAFrB,kBAE2BE,cAAK,kBAAM5B,GAAYC,QAAQyB,EAAOrG,YAFjE,OAII,OAJJ,SAEY2D,EAFZ,EAEYA,KAFZ,SAIUW,aAAI,CACR7T,KE3FyB,kBF4FzBwW,cAAetD,EAAK/N,UAN1B,uDASIiR,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SAThC,sDAaO,SAAUM,KAAV,kEACL,OADK,SACCsB,atB/FoB,esB+FKpC,IAD1B,wCAIP,SAAUe,GAAQU,GAAlB,kEAEI,OAFJ,kBAEUE,cAAK,kBAAM5B,GAAYE,kBAAkBwB,EAAO7G,gBAF1D,OAII,OAJJ,SAIU8E,aAAI,CACR7T,K5BvF4B,uB4BkFlC,uDAQIoW,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SARhC,sDAYO,SAAUQ,KAAV,kEACL,OADK,SACCoB,atB9G4B,uBsB8GKrB,IADlC,wCAIP,SAAUE,GAAWQ,GAArB,kEAEI,OAFJ,kBAEUE,cAAK,kBAAM5B,GAAYG,sBAAsBuB,EAAO7G,gBAF9D,OAGI,OAHJ,SAGU8E,aAAI,CACR7T,K5BtG4B,uB4BkGlC,uDAOIoW,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SAPhC,sDAWO,SAAUU,KAAV,kEACL,OADK,SACCkB,atB5H+B,0BsB4HKnB,IADrC,wCAIP,SAAUE,GAAuBM,GAAjC,4EAIqB,OAHXvK,EAAcuK,EAAdvK,UADV,kBAI2ByK,cAAK,kBAC1B5B,GAAYI,mBAAmBjJ,MALrC,OAQI,OARJ,SAIY6H,EAJZ,EAIYA,KAJZ,SAQUW,aAAI,CACR7T,KtBnIgC,yBsBoIhC+K,aAAcmI,EAAK/N,UAVzB,+BAaI,OAbJ,oCAaU0O,aAAI,CACR7T,KtBxIgC,yBsByIhC+K,aAAc,KAfpB,uDAoBO,SAAUwK,KAAV,kEACL,OADK,SACCgB,atBhJmC,8BsBgJKjB,IADzC,wCAIP,SAAUE,GAAgBI,GAA1B,0EAEqB,OAFrB,kBAE2BE,cAAK,kBAAM5B,GAAYK,YAAYqB,EAAOhE,YAFrE,OAII,OAJJ,SAEYsB,EAFZ,EAEYA,KAFZ,SAIUW,aAAI,CACR7T,K5B5JuB,gB4B6JvB6R,QAASqB,EAAK/N,UANpB,uDASIiR,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SAThC,sDAaO,SAAUc,KAAV,kEACL,OADK,SACCc,a5BpK0B,qB4BoKKf,IADhC,wCAKP,SAAUf,GAASmB,GAAnB,kEAEI,OAFJ,kBAEUE,cAAK,kBAAM5B,GAAYO,SAASmB,EAAOnE,aAFjD,OAKI,OAFAiD,GAAe,UAAW,4BAH9B,SAKUb,aAAI,CACR7T,K5B9K4B,qB4B+K5B4R,QAAS,KAPf,OAUI,OAVJ,SAUUiC,aAAI,CACR7T,KtB3LsB,iBsBgL5B,yDAcIoW,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SAdhC,uDAkBO,SAAUe,KAAV,kEACL,OADK,SACCa,a5BxLsB,iB4BwLK9B,IAD5B,wCAKP,SAAUD,GAAWoB,GAArB,kEAEI,OAFJ,kBAEUE,cAAK,kBAAM5B,GAAYM,WAAWoB,EAAOnN,WAFnD,OAKI,OAFAiM,GAAe,UAAW,8BAH9B,SAKUb,aAAI,CACR7T,K5BrM4B,uB4B+LlC,OASI,OATJ,SASU6T,aAAI,CACR7T,KtBjNsB,iBsBuM5B,yDAaIoW,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SAbhC,uDAiBO,SAAUgB,KAAV,kEACL,OADK,SACCY,a5B7MwB,mB4B6MK/B,IAD9B,wC,iBGhNGiC,I,aAaOC,IAbjB,SAAUD,KAAV,0EAEqB,OAFrB,kBAE2BX,cAAK,kBAAM/C,QAFtC,OAII,OAJJ,SAEYG,EAFZ,EAEYA,KAFZ,SAIUW,aAAI,CACR7T,K/BEsB,e+BDtBkT,KAAMA,EAAK/N,UANjB,uDASIiR,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SAThC,sDAaO,SAAU+B,KAAV,kEACL,OADK,SACCH,a/BNqC,gC+BMKE,IAD3C,wCCnBA,IAuBME,GAAiB,IAvB9B,+MAEEC,eAAiB,WACf,OAAO,EAAK5C,IAAI,oBAHpB,EAME6C,eAAiB,WACf,OAAO,EAAK7C,IAAL,oBAPX,EAUE8C,cAAgB,SAACnX,GACf,OAAO,EAAKsU,OAAL,2CAAgDtU,KAX3D,EAcEoX,iBAAmB,SAACpM,GAClB,OAAO,EAAKqJ,IAAL,sCAAwCrJ,KAfnD,EAkBEqM,aAAe,WACb,OAAO,EAAKhD,IAAL,kBAnBX,YAAoCJ,K,aCqB1BqD,I,aAkBOC,I,aAKPC,I,aAiBOC,I,aAKPN,I,aAYOO,I,aAKPN,I,aAeOO,I,aAKPC,I,aAwBOC,IA1GjB,SAAUP,GAAYrB,GAAtB,0EAGqB,OAHrB,kBAG2BE,cAAK,kBAAM/C,QAHtC,OAII,OAJJ,SAGYG,EAHZ,EAGYA,KAHZ,SAIUW,aAAI,CACR7T,KjCRuB,gBiCSvByX,YAAavE,EAAK/N,UANxB,OASI,OATJ,SASU0O,aAAI,CACR7T,K3BtBqC,8B2BuBrCqL,UAAW6H,EAAK/N,QAAQ,GAAGxF,KAXjC,yDAcIyW,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SAdhC,uDAkBO,SAAUuC,KAAV,kEACL,OADK,SACCX,ajCrB0B,qBiCqBKU,IADhC,wCAKP,SAAUE,GAAYvB,GAAtB,kEAEI,OAFJ,kBAEUE,cAAK,kBAAM/C,GAA+B6C,EAAOzI,gBAF3D,OAKI,OAFAuH,GAAe,UAAW,+BAH9B,SAKUb,aAAI,CACR7T,KjC/B4B,uBiCyBlC,OASI,OATJ,SASU6T,aAAI,CACR7T,K3BxDsB,iB2B8C5B,yDAaImT,QAAQC,IAAI,KAAIkD,UAbpB,uDAiBO,SAAUc,KAAV,kEACL,OADK,SACCb,ajC1CoB,eiC0CKY,IAD1B,wCAKP,SAAUL,GAAclB,GAAxB,kEAEI,OAFJ,kBAEUE,cAAK,kBAAMa,GAAeG,cAAclB,EAAOvK,cAFzD,OAII,OADAqJ,GAAe,UAAW,iCAH9B,SAIUb,aAAI,CACR7T,KjCpD4B,uBiC+ClC,uDAQI0U,GAAe,QAAS,yBAR5B,sDAYO,SAAU2C,KAAV,kEACL,OADK,SACCd,ajC1DsB,iBiC0DKO,IAD5B,wCAKP,SAAUC,GAAiBnB,GAA3B,0EAEqB,OAFrB,kBAE2BE,cAAK,kBAC1Ba,GAAeI,iBAAiBnB,EAAOjL,cAH7C,OAMI,OANJ,SAEYuI,EAFZ,EAEYA,KAFZ,SAMUW,aAAI,CACR7T,KjClE4B,qBiCmE5BuE,cAAe2O,EAAK/N,UAR1B,uDAWIiR,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SAXhC,sDAeO,SAAU2C,KAAV,kEACL,OADK,SACCf,ajC5E+B,0BiC4EKQ,IADrC,wCAKP,SAAUQ,GAAc3B,GAAxB,kEACE,OADF,SACQ/B,aAAI,CACR7T,KJ3G2B,oBIyG/B,OAKE,OALF,SAKQ6V,aAAM,KALd,OAQI,OARJ,kBAQUC,cAAK,kBACT/C,GAA4C6C,EAAO7I,eATzD,OAYI2H,GAAe,UAAW,iCAE1BhB,GAAQpJ,KAAK,sBAdjB,kDAgBIoK,GAAe,QAAS,yBAhB5B,QAmBE,OAnBF,UAmBQb,aAAI,CACR7T,KJ5HwB,iBIwG5B,uDAwBO,SAAUwX,KAAV,kEACL,OADK,SACCjB,ajC/GsB,iBiC+GKgB,IAD5B,wCC/HA,IAeMG,GAAc,IAf3B,+MAEEC,WAAa,SAAC7M,GACZ,OAAO,EAAKiJ,KAAK,qBAAsBjJ,IAH3C,EAME8M,cAAgB,SAACxQ,GACf,OAAO,EAAK4M,IAAL,uCAAyC5M,KAPpD,EAUEyQ,WAAa,SAACC,GACZ,OAAO,EAAK/D,KAAL,qBAAgC+D,IAX3C,YAAiClE,K,aCuBvBmE,I,aAaOC,I,aAMPC,I,aAUOC,I,aAMPC,I,aAUOC,I,aAMPC,I,aAmBOC,I,aAMPC,I,aAeOC,I,aAMAC,I,aA6DAC,IA9JjB,SAAUX,GAAenC,GAAzB,0EAEqB,OAFrB,kBAE2BE,cAAK,kBAAMa,GAAeC,oBAFrD,OAII,OAJJ,SAEY1D,EAFZ,EAEYA,KAFZ,SAIUW,aAAI,CACR7T,K/B9B2B,oB+B+B3BsE,YAAa4O,EAAK/N,UANxB,uDASIiR,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SAThC,sDAaO,SAAUqD,KAAV,kEACL,OADK,SACCzB,a/BtC8B,yB+BsCKwB,IADpC,wCAMP,SAAUE,GAAmBrC,GAA7B,0EAEqB,OAFrB,kBAE2BE,cAAK,kBAAMa,GAAeE,oBAFrD,OAII,OAJJ,SAEY3D,EAFZ,EAEYA,KAFZ,SAIUW,aAAI,CAAE7T,K/B9CgB,mB+B8CQmE,YAAa+O,EAAK/N,UAJ1D,uDAMIiR,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SANhC,sDAUO,SAAUuD,KAAV,kEACL,OADK,SACC3B,a/BpD6B,wB+BoDK0B,IADnC,wCAMP,SAAUE,GAAiBvC,GAA3B,0EAEqB,OAFrB,kBAE2BE,cAAK,kBAAMa,GAAeK,kBAFrD,OAII,OAJJ,SAEY9D,EAFZ,EAEYA,KAFZ,SAIUW,aAAI,CAAE7T,K/B5Dc,iB+B4DQqE,UAAW6O,EAAK/N,UAJtD,uDAMIiR,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SANhC,sDAUO,SAAUyD,KAAV,kEACL,OADK,SACC7B,a/BlE2B,sB+BkEK4B,IADjC,wCAMP,SAAUE,GAAezC,GAAzB,kEAEI,OAFJ,kBAEUE,cAAK,kBAAM4B,GAAYC,WAAW/B,EAAO9K,eAFnD,OAII,OAJJ,SAIU+I,aAAI,CACR7T,K7BjFsB,iB6B4E5B,OAQI,OARJ,SAQU6T,aAAI,CACR7T,KnC5DiC,0BmC6DjC2K,UAAWiL,EAAO9K,WAAWH,YAVnC,OAaI+J,GAAe,UAAW,8BAb9B,kDAeI0B,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SAfhC,uDAmBO,SAAU2D,KAAV,kEACL,OADK,SACC/B,a/BzFwB,mB+ByFK8B,IAD9B,wCAMP,SAAUE,GAAkB3C,GAA5B,4EAIqB,OAHXxO,EAAWwO,EAAXxO,OADV,kBAI2B0O,cAAK,kBAAM4B,GAAYE,cAAcxQ,MAJhE,OAMI,OANJ,SAIY8L,EAJZ,EAIYA,KAJZ,SAMUW,aAAI,CACR7T,K/BlGyB,kB+BmGzBiE,gBAAiBiP,EAAK/N,UAR5B,yDAWIiR,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SAXhC,uDAeO,SAAU6D,GAAyB5C,GAAnC,kEACL,OADK,SACCW,a/B5G4B,uB+B4GKgC,IADlC,wCAMA,SAAUE,GAAoB7C,GAA9B,6FACGA,EAAO1N,WADV,O/B/G0B,sB+B+G1B,O/B7GyB,qB+B6GzB,O/B9G2B,uB+B8G3B,wBAKC,OADQ1C,EAAgBoQ,EAAhBpQ,MAAOtD,EAAS0T,EAAT1T,KAJhB,SAKO2R,aAAI,CACR7T,K/BrHuB,oB+BsHvBkC,OACAsD,UARH,0CAeC,OADQ2D,EAAiByM,EAAjBzM,aAdT,UAeO0K,aAAI,CACR7T,K/B7HsB,mB+B8HtBmJ,iBAjBH,4CAwBC,OADQV,EAAWmN,EAAXnN,OAvBT,UAwBOoL,aAAI,CACR7T,K/BvIwB,qB+BwIxByI,WA1BH,8EAoCqB,OApCrB,UAoC2BkQ,cAAO,SAAC5Z,GAAD,OAAWA,EAAMmF,qBApCnD,QA6CH,OA7CG,SAoCCD,EApCD,EAoCCA,gBAGA2G,EAvCD,UAuCiB3G,EAAgBoE,iBAvCjC,aAuCiB,EAA2B3C,KAAI,SAAC4C,EAAM1C,GAC1D,OAAO0C,EAAK3I,MAGRiZ,EA3CD,2BA2CsB3U,GA3CtB,IA2CuC2G,kBA3CvC,oBA6CGkL,cAAK,kBAAM4B,GAAYG,WAAWe,MA7CrC,QA+CH,OA/CG,UA+CG/E,aAAI,CACR7T,KnCjJiC,0BmCkJjC2K,UAAWiO,EAAcjO,YAjDxB,QAoDH,OApDG,UAoDGkJ,aAAI,CACR7T,K/BtK8B,uB+BuK9BoH,OAAQwR,EAAcxR,SAtDrB,2DAyDHgP,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SAzDzB,wDA6DA,SAAU+D,KAAV,kEACL,OADK,SACCnC,a/BzKmC,8B+ByKKkC,IADzC,wCCrLA,IAqBMI,GAAiB,IArB9B,+MAEEC,cAAgB,SAAC1R,GACf,OAAO,EAAK4M,IAAL,gCAAkC5M,KAH7C,EAME2R,cAAgB,SAAC5R,GACf,OAAO,EAAK4M,KAAK,wBAAyB5M,IAP9C,EAUE6R,cAAgB,SAACpR,GACf,OAAO,EAAKqM,OAAL,0CAA+CrM,KAX1D,EAcEqR,YAAc,SAACrR,EAAWZ,GACxB,OAAO,EAAK6M,IAAL,mCACuBjM,EADvB,2BACmDZ,KAhB9D,YAAoC4M,K,aCY1BsF,I,aAQOC,I,aAMPC,I,aAaOC,I,aAMPC,I,aAaOC,I,aAMPC,I,aAoBOC,IAxEjB,SAAUP,GAActD,GAAxB,kEAEI,OAFJ,kBAEUE,cAAK,kBAAM+C,GAAeC,cAAclD,EAAOxO,WAFzD,sDAIIgP,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SAJhC,qDAQO,SAAUwE,KAAV,kEACL,OADK,SACC5C,ajCL4B,uBiCKK2C,IADlC,wCAMP,SAAUE,GAAiBxD,GAA3B,kEAEI,OAFJ,kBAEUE,cAAK,kBAAM+C,GAAeE,cAAcnD,EAAOzO,WAFzD,OAII,OAJJ,SAIU0M,aAAI,CACR7T,KjCxB8B,uBiCyB9BoH,OAAQwO,EAAOzO,OAAOC,SAN5B,uDASIgP,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SAThC,sDAaO,SAAU0E,KAAV,kEACL,OADK,SACC9C,ajCtBwB,mBiCsBK6C,IAD9B,wCAMP,SAAUE,GAAiB1D,GAA3B,kEAEI,OAFJ,kBAEUE,cAAK,kBAAM+C,GAAeG,cAAcpD,EAAOhO,cAFzD,OAII,OAJJ,SAIUiM,aAAI,CACR7T,KjC3C8B,uBiC4C9BoH,OAAQwO,EAAOxO,SANrB,uDASIgP,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SAThC,sDAaO,SAAU4E,KAAV,kEACL,OADK,SACChD,ajCrC2B,sBiCqCK+C,IADjC,wCAMP,SAAUE,GAAe5D,GAAzB,kEAEI,OAFJ,kBAEUE,cAAK,kBACT+C,GAAeI,YAAYrD,EAAOhO,UAAWgO,EAAO7N,uBAH1D,OAMI,OANJ,SAMU8L,aAAI,CACR7T,KjCxDyB,kBiCyDzB0E,eAAe,IARrB,OAWI,OAXJ,SAWUmP,aAAI,CACR7T,KjCrE8B,uBiCsE9BoH,OAAQwO,EAAOxO,SAbrB,uDAgBIgP,KAAKC,KAAK,KAAIC,SAASpD,KAAKyB,SAhBhC,sDAoBO,SAAU8E,KAAV,kEACL,OADK,SACClD,ajC9DyB,oBiC8DKiD,IAD/B,wC,iBC/EUE,IAAV,SAAUA,KAAV,kEACL,OADK,SACCC,aAAI,CACRC,KACAA,KACAA,KACAA,KACAA,KACAA,KACAA,KACAA,KACAA,KAEAC,KAEAC,KACAA,KACAA,KACAA,KACAA,KAEAC,KACAA,KACAA,KACAA,KACAA,KACAA,KAEAC,KACAA,KACAA,KACAA,OA9BG,wCCJP,IAAMC,GAAe,CACjBvG,QAAQ,ICGJuC,GAAe1W,EAAQ,IAAvB0W,WAEJiE,GAAU,GAEV7G,aAAaC,QAAQ2C,MACvBiE,GAAUhE,KAAKiE,MAAM9G,aAAaC,QAAQ2C,MAG5C,IAAMvD,GAAe,CACnBxR,UAAWgZ,GACXxM,WAAY,GACZmE,QAAS,GACTJ,SAAU,CACRhJ,OAAQ,EACRnI,MAAO,UACP4B,KAAM,UACNwP,YAAa,YCvBXe,GAAe,CACnB3F,YAAa,ICCT2F,GAAe,CACnB/H,YAAa,ICMT+H,GAAe,CACnB3C,SAAS,EACTpI,MAAO,GACP6E,uBAAwB,wCACxBwD,eAAgB,SAACqK,MCRb3H,GAAe,CACnBtF,YAAa,CACXxN,GAAI,EACJ4L,YAAa,UACbvG,YAAa,UACb6H,WAAY,IAEdtI,cAAe,ICJXkO,GAAe,CACnB/H,YAAa,GACbpG,YAAa,GACbH,YAAa,GACbE,UAAW,GACX0G,aAAc,I,oBCNV0H,GAAe,CACnBxO,gBAAiB,CACf0M,aAAc,CACZtH,WAAY,EACZE,SAAU,QAEZpD,eAAgB,CACdxG,GAAI,EACJmG,SAAU,OAEZuC,UAAW,CACT,CACE1I,GAAI,GACJsH,OAAQ,6CACR/E,KAAM,YACNmY,MAAO,QAET,CACE1a,GAAI,GACJsH,OAAQ,wCACR/E,KAAM,OACNmY,MAAO,SAGXhT,WAAY,CACV,CACEiT,OAAQ,IACRrT,OAAQ,6CACR/E,KAAM,YACNsF,eAAgB,wBAChB9C,eAAe,IAGnB0C,OAAQ,GACRrB,SAAU,SACVsU,MAAO,SACPrV,YACE,skBACFiD,SAAU,IACVuB,iBAAkB,GAClBC,kBAAmB,GACnBC,sBAAuB,GACvBjE,OAAQ,EACR4D,WAAY,EACZsB,UAAW,MClCT4P,GAAiBC,eACjBC,GAAcC,aAAgB,CAClC1b,e1Bba,WAAmC,IAAlCD,EAAiC,uDAAzB0T,GAAcmD,EAAW,uCAC/C,OAAQA,EAAO5V,MACb,IQR2B,kBRUzB,OADAjB,EAAME,WAAY,EACX,eAAKF,GACd,IQVwB,eRYtB,OADAA,EAAME,WAAY,EACX,eAAKF,GAEd,QACE,OAAOA,I0BIXW,azBd0B,WAAmC,IAAlCX,EAAiC,uDAAzB2T,GAAckD,EAAW,uCAC5D,OAAQA,EAAO5V,MACb,IAAK,YAEH,OADAjB,EAAMU,UAAYmW,EAAOnW,UAClB,eAAKV,GAGd,QACE,OAAO,eAAKA,KyBOhB4b,eRZ4B,WAAkC,IAAjC5b,EAAgC,uDAAxBkb,GAAarE,EAAW,uCAC3D,OAAOA,EAAO5V,MACV,IAAK,cAED,OADAjB,EAAM2U,QAAUkC,EAAOlC,QAChB,eAAI3U,GAEf,QAAS,OAAO,eAAIA,KQO1B0F,0BPKuC,WAAmC,IAAlC1F,EAAiC,uDAAzB2T,GAAckD,EAAW,uCACzE,OAAQA,EAAO5V,MACb,IxC5BmB,UwC8BjB,OADAjB,EAAMmC,UAAY0U,EAAO1U,UAClB,eAAKnC,GAGd,IxCxBqB,YwC0BnB,OADAA,EAAM0S,SAAWmE,EAAOnE,SACjB,eAAK1S,GAEd,IVtC2B,kBUwCzB,OADAA,EAAM2O,WAAakI,EAAOY,cACnB,eAAKzX,GAGd,IxCpCyB,gBwCsCvB,OADAA,EAAM8S,QAAU+D,EAAO/D,QAChB,eAAK9S,GAGd,QACE,OAAO,eAAKA,KO1BhBiO,gBNnB6B,WAAmC,IAAlCjO,EAAiC,uDAAzB0T,GAAcmD,EAAW,uCAC/D,OAAQA,EAAO5V,MACb,IAAK,eAEH,OADAjB,EAAM+N,YAAc8I,EAAO1C,KACpB,eAAKnU,GAEd,QACE,OAAOA,IMaX0O,yBLlBsC,WAAmC,IAAlC1O,EAAiC,uDAAzB0T,GAAcmD,EAAW,uCACxE,OAAQA,EAAO5V,MACb,I1CYyB,gB0CVvB,OADAjB,EAAM2L,YAAckL,EAAO6B,YACpB,eAAK1Y,GAEd,QACE,OAAOA,IKYX8Q,cJT2B,WAAmC,IAAlC9Q,EAAiC,uDAAzB0T,GAAcmD,EAAW,uCAC7D,OAAQA,EAAO5V,MACb,IrCjBuB,cqCkBrB,OAAO,2BAAKjB,GAAZ,IAAmB+Q,SAAS,IAC9B,IrCpBwB,eqCqBtB,OAAO,2BAAK/Q,GAAZ,IAAmB+Q,SAAS,IAC9B,IrCbqB,YqCcnB,OAAO,2BACF/Q,GADL,IAEE+Q,SAAS,EACTvD,uBAAwBqJ,EAAOrJ,uBAC/B7E,MAAOkO,EAAOlO,QAGlB,IrC5BmC,0BqCiCnC,IrChCgC,uBqCqChC,IrC1BkC,yBqC4BhC,OADA3I,EAAMgR,eAAiB6F,EAAO3K,eACvB,eAAKlM,GAGd,QACE,OAAOA,IIpBXyF,eHX4B,WAAmC,IAAlCzF,EAAiC,uDAAzB0T,GAAcmD,EAAW,uCAC9D,OAAQA,EAAO5V,MACb,I5CKwB,e4CHtB,OADAjB,EAAMoO,YAAcyI,EAAOzI,YACpB,eAAKpO,GAEd,I5CK8B,qB4CH5B,OADAA,EAAMwF,cAAgBqR,EAAOrR,cACtB,eAAKxF,GACd,QACE,OAAOA,IGEXqF,kBFX+B,WAAmC,IAAlCrF,EAAiC,uDAAzB0T,GAAcmD,EAAW,uCACjE,OAAQA,EAAO5V,MACb,I7CEyB,gB6CDvB,OAAO,2BAAKjB,GAAZ,IAAmB2L,YAAakL,EAAO6B,cAEzC,IzCrB6B,oByCsB3B,OAAO,2BAAK1Y,GAAZ,IAAmBuF,YAAasR,EAAOtR,cAEzC,IzCtB4B,mByCuB1B,OAAO,2BAAKvF,GAAZ,IAAmBoF,YAAayR,EAAOzR,cAEzC,IzCvB0B,iByCwBxB,OAAO,2BAAKpF,GAAZ,IAAmBsF,UAAWuR,EAAOvR,YAEvC,IvClBkC,yBuCmBhC,OAAO,2BAAKtF,GAAZ,IAAmBgM,aAAc6K,EAAO7K,eAC1C,QACE,OAAOhM,IELXmF,kBD2B+B,WAAmC,IAAlCnF,EAAiC,uDAAzB0T,GAAcmD,EAAW,uCACjE,OAAQA,EAAO5V,MACb,I1C/C2B,kB0CgDzB,OAAO,2BAAKjB,GAAZ,IAAmBkF,gBAAiB2R,EAAO3R,kBAE7C,I1CjD6B,oB0CiDJ,IACf/B,EAAgB0T,EAAhB1T,KAAMsD,EAAUoQ,EAAVpQ,MACd,OAAO,2BACFzG,GADL,IAEEkF,gBAAgB,2BAAMlF,EAAMkF,iBAAb,mBAA+B/B,EAAOsD,MAIzD,I1CvD4B,mB0C6D1B,OALAzG,EAAMkF,gBAAgBoE,UAAtB,uBACKtJ,EAAMkF,gBAAgBoE,WAD3B,CAEEuN,EAAOzM,eAETgK,QAAQC,IAAIrU,EAAMkF,gBAAgBoD,YAC3B,eAAKtI,GAGd,I1CjE8B,qB0CuE5B,OALAA,EAAMkF,gBAAgBoE,UAAtB,aACKtJ,EAAMkF,gBAAgBoE,UAAUO,QACjC,SAACG,GAAD,OAAQA,EAAGpJ,KAAOiW,EAAOnN,WAGtB,eAAK1J,GAGd,QACE,OAAOA,MCxDP6b,GAAQC,aACZJ,GACAK,aAAgBC,KAAYR,KAG9BA,GAAeS,IAAItB,IAEJkB,U,OC3BfK,IAASvX,OACP,kBAAC,IAAD,CAAQgQ,QAASA,IACf,kBAAC,IAAD,CAAUkH,MAAOA,IACf,kBAAC,GAAD,QAGJM,SAASC,eAAe,U,gCCjB1B,2NAAO,IAAMC,EAAS,6BAETvI,EAAkB,qCAElBC,EAAQ,eACRmD,EAAa,aAEboF,EAAc,CACzBC,QAAS,IACTC,UAAW,IACXC,aAAc,O","file":"static/js/main.10ddf509.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgLoading\":\"LoadingComponent_bgLoading__2QNa9\"};","module.exports = __webpack_public_path__ + \"static/media/loading.504b535c.gif\";","module.exports = __webpack_public_path__ + \"static/media/img.0da89d92.jpg\";","import React from \"react\";\nimport styleLoading from \"./LoadingComponent.module.css\";\nimport { useSelector } from \"react-redux\";\n\nexport default function LoadingComponent() {\n  const { isLoading } = useSelector((state) => state.LoadingReducer);\n\n  if (isLoading) {\n    return (\n      <div className={styleLoading.bgLoading}>\n        <img alt=\"loading\" src={require(\"../../../assets/imgLoading/loading.gif\")} />\n      </div>\n    );\n  } else {\n    return \"\";\n  }\n}\n","import React from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nexport default function Modal() {\n  let Component = useSelector((state) => state.ModalReducer.Component);\n\n  return (\n    <div\n      className=\"modal fade\"\n      id=\"modelId\"\n      tabIndex={-1}\n      role=\"dialog\"\n      aria-labelledby=\"modelTitleId\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">Modal title</h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">×</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">{Component}</div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-dismiss=\"modal\"\n            >\n              Close\n            </button>\n            <button type=\"button\" className=\"btn btn-primary\">\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button, Input } from \"antd\";\nimport { MailOutlined, LockOutlined, TwitterOutlined } from \"@ant-design/icons\";\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { connect } from \"react-redux\";\nimport { singinCyberbugAction } from \"../../../redux/actions/CyberBugsActions\";\nimport { NavLink } from \"react-router-dom\";\nfunction LoginCyberBugs(props) {\n  const { errors, handleChange, handleSubmit } = props;\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className=\"container\"\n      style={{ height: window.innerHeight }}\n    >\n      F\n      <div\n        className=\"d-flex flex-column justify-content-center align-items-center\"\n        style={{ height: window.innerHeight }}\n      >\n        <h3\n          className=\"text-center\"\n          style={{ fontWeight: 700, fontSize: 35, color: \"rgb(59, 89, 152)\" }}\n        >\n          LOGIN\n        </h3>\n        <div className=\"d-flex mt-3\">\n          <Input\n            onChange={handleChange}\n            style={{ width: \"100%\", minWidth: 300 }}\n            name=\"email\"\n            size=\"large\"\n            placeholder=\"email\"\n            prefix={<MailOutlined />}\n          />\n        </div>\n        <div className=\"text-danger\">{errors.email}</div>\n        <div className=\"d-flex mt-3\">\n          <Input\n            onChange={handleChange}\n            style={{ width: \"100%\", minWidth: 300 }}\n            type=\"password\"\n            name=\"password\"\n            size=\"large\"\n            placeholder=\"password\"\n            prefix={<LockOutlined />}\n          />\n        </div>\n        <div className=\"text-danger\">{errors.password}</div>\n\n        <Button\n          htmlType=\"submit\"\n          size=\"large\"\n          style={{\n            minWidth: 300,\n            backgroundColor: \"rgb(102,117,223)\",\n            color: \"#fff\",\n          }}\n          className=\"mt-4\"\n        >\n          Login\n        </Button>\n        <span>Don't have an account, sign up <NavLink to=\"/signup\">HERE</NavLink></span>\n\n        <div className=\"social mt-3 d-flex\">\n          <Button\n            style={{ backgroundColor: \"rgb(59,89,152)\" }}\n            shape=\"circle\"\n            size={\"large\"}\n          >\n            <span className=\"font-weight-bold\" style={{ color: \"#fff\" }}>\n              F\n            </span>\n          </Button>\n          <Button\n            type=\"primary ml-3\"\n            shape=\"circle\"\n            icon={<TwitterOutlined />}\n            size={\"large\"}\n          ></Button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nconst LoginCyberBugsWithFormik = withFormik({\n  mapPropsToValues: () => ({\n    email: \"\",\n    password: \"\",\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string()\n      .required(\"Email is required!\")\n      .email(\"email is invalid!\"),\n    password: Yup.string()\n      .min(6, \"password must have min 6 characters\")\n      .max(32, \"password  have max 32 characters\"),\n  }),\n  handleSubmit: ({ email, password }, { props, setSubmitting }) => {\n    setSubmitting(true);\n    props.dispatch(singinCyberbugAction(email, password));\n  },\n  displayName: \"LoginCyberBugs\",\n})(LoginCyberBugs);\n\nexport default connect()(LoginCyberBugsWithFormik);\n","import {\n  USER_SIGNIN_API,\n  USER_SIGNUP_API,\n} from \"../constants/Cyberbugs/Cyberbugs\";\n\nexport const singinCyberbugAction = (email, password) => {\n  return {\n    type: USER_SIGNIN_API,\n    userLogin: {\n      email: email,\n      password: password,\n    },\n  };\n};\n\nexport const singupCyberbugAction = (email, password, name, phone) => {\n  return {\n    type: USER_SIGNUP_API,\n    userSignUp: {\n      email: email,\n      password: password,\n      name: name,\n      phone: phone,\n    },\n  };\n};\n","// Login\nexport const USLOGIN = \"USLOGIN\";\nexport const USER_SIGNIN_API = \"USER_SIGNIN_API\";\n\nexport const USER_SIGNUP_API = \"USER_SIGNUP_API\";\nexport const USER_SIGNUP = \"USER_SIGNUP\";\n\nexport const GET_LIST_USER = \"GET_LIST_USER\";\nexport const GET_LIST_USER_SAGA = \"GET_LIST_USER_SAGA\";\n\nexport const EDIT_USER = \"EDIT_USER\";\nexport const EDIT_USER_SAGA = \"EDIT_USER_SAGA\";\nexport const DELETE_USER_SAGA = \"DELETE_USER_SAGA\";\n\n// Category\nexport const GET_CATEGORY = \"GET_CATEGORY\";\nexport const GET_ALL_PROJECT_CATEGORY_SAGA = \"GET_ALL_PROJECT_CATEGORY_SAGA\";\n\n// Project\nexport const CREATE_PROJECT = \"CREATE_PROJECT\";\nexport const GET_LIST_TASK = \"GET_LIST_TASK\";\nexport const GET_LIST_TASK_SAGA = \"GET_LIST_TASK_SAGA\";\nexport const EDIT_PROJECT = \"EDIT_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\nexport const GET_PROJECT_DETAIL_SAGA = \"GET_PROJECT_DETAIL_SAGA\";\nexport const GET_PROJECT_DETAIL = \"GET_PROJECT_DETAIL\";\n","import React, { useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Layout } from \"antd\";\n\nconst { Sider, Content } = Layout;\n\nexport const UserLoginTemplate = (props) => {\n  const [{ width, height }, setSize] = useState({\n    width: Math.round(window.innerWidth),\n    height: Math.round(window.innerHeight),\n  });\n\n  useEffect(() => {\n    window.onresize = () => {\n      setSize({\n        width: Math.round(window.innerWidth),\n        height: Math.round(window.innerHeight),\n      });\n    };\n  }, []);\n\n  let { Component, ...restRoute } = props;\n\n  return (\n    <Route\n      {...restRoute}\n      render={(propsRoute) => {\n        return (\n          <>\n            <Layout>\n              <Sider\n                width={(width * 70) / 100}\n                style={{\n                  height: height,\n                  backgroundImage: `url(https://picsum.photos/${Math.round(\n                    width / 2\n                  )}/${height})`,\n                  backgroundSize: \"100%\",\n                }}\n              ></Sider>\n              <Content>\n                <Component {...propsRoute} />\n              </Content>\n            </Layout>\n          </>\n        );\n      }}\n    />\n  );\n};\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function MenuCyberbugs() {\r\n  return (\r\n    <div className=\"menu\">\r\n      <div className=\"account\">\r\n        <div className=\"avatar\">\r\n          <img src={require(\"../../assets/img/img.jpg\")} alt=\"alt\" />\r\n        </div>\r\n        <div className=\"account-info\">\r\n          <p>MRX</p>\r\n          <p>Front End Dev</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"control\">\r\n        <div className=\"control_item\">\r\n          <i className=\"fa fa-list\" />\r\n          <NavLink\r\n            activeClassName=\"active font-weight-bold\"\r\n            to=\"/projectmanagement\"\r\n          >\r\n            Project Management\r\n          </NavLink>\r\n        </div>\r\n\r\n        <div className=\"control_item\">\r\n          <i className=\"fa fa-user\" />\r\n          <NavLink\r\n            activeClassName=\"active font-weight-bold\"\r\n            to=\"/usermanagement\"\r\n          >\r\n            User Management\r\n          </NavLink>\r\n        </div>\r\n\r\n        <div className=\"control_item\">\r\n          <i className=\"fa fa-cog\" />\r\n          <NavLink\r\n            activeClassName=\"active font-weight-bold\"\r\n            to=\"/createproject\"\r\n          >\r\n            New Project\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"feature\">\r\n        <div className=\"control_item\">\r\n          <i className=\"fa fa-truck\" />\r\n          <span>Releases</span>\r\n        </div>\r\n\r\n        <div className=\"control_item\">\r\n          <i className=\"fa fa-equals\" />\r\n          <span>Issues and filters</span>\r\n        </div>\r\n\r\n        <div className=\"control_item\">\r\n          <i className=\"fa fa-paste\" />\r\n          <span>Pages</span>\r\n        </div>\r\n\r\n        <div className=\"control_item\">\r\n          <i className=\"fa fa-location-arrow\" />\r\n          <span>Reports</span>\r\n        </div>\r\n\r\n        <div className=\"control_item\">\r\n          <i className=\"fa fa-box\" />\r\n          <span>Components</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\n\r\nimport {\r\n  GET_ALL_PRIORITY_SAGA,\r\n  GET_ALL_STATUS_SAGA,\r\n  CHANGE_TASK_MODAL,\r\n  REMOVE_USER_ASSIGN,\r\n  CHANGE_ASSIGNESS,\r\n  GET_ALL_TASK_TYPE_SAGA,\r\n  HANDLE_CHANGE_POST_API_SAGA,\r\n  ADD_COMMENT_SAGA,\r\n  DELETE_COMMENT_SAGA,\r\n  EDIT_COMMENT_SAGA,\r\n} from \"../../../redux/constants/CreateProjectCons\";\r\n\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport { Select, Popconfirm } from \"antd\";\r\n\r\nexport default function ModalCyberBugs() {\r\n  const { taskDetailModal } = useSelector((state) => state.TaskDetailReducer);\r\n  const { arrPriority } = useSelector((state) => state.CreateTaskReducer);\r\n  const { arrStatus } = useSelector((state) => state.CreateTaskReducer);\r\n  const { arrTaskType } = useSelector((state) => state.CreateTaskReducer);\r\n  const { projectDetail } = useSelector((state) => state.ProjectReducer);\r\n  const { userLogin } = useSelector((state) => state.UserLoginCyberBugsReducer);\r\n  const [visibleEditor, setVisibleEditor] = useState(false);\r\n  const [visibleEditorAddComment, setvisibleEditorAddComment] = useState(true);\r\n\r\n  const [visibleEditorEditComment, setvisibleEditorEditComment] =\r\n    useState(true);\r\n\r\n  const [historyContent, setHistoryContent] = useState(\r\n    taskDetailModal.description\r\n  );\r\n  const [content, setContent] = useState(taskDetailModal.description);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch({ type: GET_ALL_STATUS_SAGA });\r\n    dispatch({ type: GET_ALL_PRIORITY_SAGA });\r\n    dispatch({ type: GET_ALL_TASK_TYPE_SAGA });\r\n  }, [dispatch]);\r\n\r\n  const renderDescription = () => {\r\n    const jsxDescription = ReactHtmlParser(taskDetailModal.description);\r\n    return (\r\n      <div>\r\n        {visibleEditor ? (\r\n          <div>\r\n            <Editor\r\n              name=\"description\"\r\n              initialValue={taskDetailModal.description}\r\n              init={{\r\n                selector: \"textarea#myTextArea\",\r\n\r\n                height: 500,\r\n                menubar: false,\r\n                plugins: [\r\n                  \"advlist autolink lists link image charmap print preview anchor\",\r\n                  \"searchreplace visualblocks code fullscreen\",\r\n                  \"insertdatetime media table paste code help wordcount\",\r\n                ],\r\n                toolbar:\r\n                  \"undo redo | formatselect | bold italic backcolor |alignleft aligncenter alignright alignjustify |  bullist numlist outdent indent | removeformat | help\",\r\n              }}\r\n              onEditorChange={(content, editor) => {\r\n                setContent(content);\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-primary m-2\"\r\n              onClick={() => {\r\n                dispatch({\r\n                  type: CHANGE_TASK_MODAL,\r\n                  name: \"description\",\r\n                  value: content,\r\n                });\r\n                setVisibleEditor(false);\r\n              }}\r\n            >\r\n              Save\r\n            </button>\r\n            <button\r\n              className=\"btn btn-primary m-2\"\r\n              onClick={() => {\r\n                dispatch({\r\n                  type: CHANGE_TASK_MODAL,\r\n                  name: \"description\",\r\n                  value: historyContent,\r\n                });\r\n                setVisibleEditor(false);\r\n              }}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            onClick={() => {\r\n              setHistoryContent(taskDetailModal.description);\r\n              setVisibleEditor(!visibleEditor);\r\n            }}\r\n          >\r\n            {jsxDescription}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderComment = () => {\r\n    let contentComment;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"block-comment mt-4 mb-4\" style={{ display: \"flex\" }}>\r\n          <div className=\"avatar\">\r\n            <img src={userLogin.avatar} alt=\"avatar\" />\r\n          </div>\r\n          <div className=\"input-comment\">\r\n            {visibleEditorAddComment ? (\r\n              <input\r\n                style={{ borderRadius: 12 }}\r\n                onClick={() => {\r\n                  setvisibleEditorAddComment(!visibleEditorAddComment);\r\n                }}\r\n                type=\"text\"\r\n                placeholder=\"Add a comment ...\"\r\n              />\r\n            ) : (\r\n              <div>\r\n                <Editor\r\n                  onEditorChange={(content) => {\r\n                    contentComment = content;\r\n                  }}\r\n                  name=\"comment\"\r\n                  init={{\r\n                    selector: \"textarea#myTextArea\",\r\n\r\n                    height: 500,\r\n                    menubar: false,\r\n                    plugins: [\r\n                      \"advlist autolink lists link image charmap print preview anchor\",\r\n                      \"searchreplace visualblocks code fullscreen\",\r\n                      \"insertdatetime media table paste code help wordcount\",\r\n                    ],\r\n                    toolbar:\r\n                      \"undo redo | formatselect | bold italic backcolor |alignleft aligncenter alignright alignjustify |  bullist numlist outdent indent | removeformat | help\",\r\n                  }}\r\n                />\r\n                <button\r\n                  className=\"btn btn-primary m-2\"\r\n                  onClick={() => {\r\n                    setvisibleEditorAddComment(true);\r\n                    dispatch({\r\n                      type: ADD_COMMENT_SAGA,\r\n                      cmtObj: {\r\n                        taskId: taskDetailModal.taskId,\r\n                        contentComment: contentComment,\r\n                      },\r\n                    });\r\n                  }}\r\n                >\r\n                  Add Comment\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-primary m-2\"\r\n                  onClick={() => {\r\n                    setvisibleEditorAddComment(true);\r\n                  }}\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"lastest-comment\">\r\n          {taskDetailModal.lstComment?.map((cmt, index) => {\r\n            return (\r\n              <div key={index} className=\"comment-item mb-4\">\r\n                <div className=\"display-comment\" style={{ display: \"flex\" }}>\r\n                  <div className=\"avatar\">\r\n                    <img src={cmt.avatar} alt=\"xyz\" />\r\n                  </div>\r\n                  {visibleEditorEditComment ? (\r\n                    <div>\r\n                      <p style={{ marginBottom: 5 }}>\r\n                        {cmt.name}\r\n                        <span style={{ color: \"#929398\" }}> - a day ago</span>\r\n                      </p>\r\n                      <p style={{ marginBottom: 5 }}>\r\n                        {ReactHtmlParser(cmt.commentContent)}\r\n                      </p>\r\n                      <div>\r\n                        <span\r\n                          onClick={() => {\r\n                            setvisibleEditorEditComment(\r\n                              !visibleEditorEditComment\r\n                            );\r\n                          }}\r\n                          style={{\r\n                            color: \"#929398\",\r\n                            marginRight: 12,\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                        >\r\n                          Edit\r\n                        </span>\r\n                        <Popconfirm\r\n                          title=\"Are you sure to delete this comment?\"\r\n                          onConfirm={() => {\r\n                            dispatch({\r\n                              type: DELETE_COMMENT_SAGA,\r\n                              idComment: cmt.id,\r\n                              taskId: taskDetailModal.taskId,\r\n                            });\r\n                          }}\r\n                          okText=\"Sure\"\r\n                          cancelText=\"No\"\r\n                        >\r\n                          Delete\r\n                        </Popconfirm>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                      <Editor\r\n                        onEditorChange={(content) => {\r\n                          contentComment = content;\r\n                        }}\r\n                        initialValue={cmt.commentContent}\r\n                        init={{\r\n                          selector: \"textarea#myTextArea\",\r\n\r\n                          height: 500,\r\n                          menubar: false,\r\n                          plugins: [\r\n                            \"advlist autolink lists link image charmap print preview anchor\",\r\n                            \"searchreplace visualblocks code fullscreen\",\r\n                            \"insertdatetime media table paste code help wordcount\",\r\n                          ],\r\n                          toolbar:\r\n                            \"undo redo | formatselect | bold italic backcolor |alignleft aligncenter alignright alignjustify |  bullist numlist outdent indent | removeformat | help\",\r\n                        }}\r\n                      />\r\n                      <button\r\n                        className=\"btn btn-primary m-2\"\r\n                        onClick={() => {\r\n                          setvisibleEditorEditComment(true);\r\n                          dispatch({\r\n                            type: EDIT_COMMENT_SAGA,\r\n                            idComment: cmt.id,\r\n                            contentCommentEdit: contentComment,\r\n                            taskId: taskDetailModal.taskId,\r\n                          });\r\n                        }}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-primary m-2\"\r\n                        onClick={() => {\r\n                          setvisibleEditorEditComment(true);\r\n                        }}\r\n                      >\r\n                        Cancel\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    dispatch({\r\n      type: CHANGE_TASK_MODAL,\r\n      name,\r\n      value,\r\n    });\r\n  };\r\n  const renderTimeTracking = () => {\r\n    const { timeTrackingSpent, timeTrackingRemaining } = taskDetailModal;\r\n\r\n    const max = Number(timeTrackingSpent) + Number(timeTrackingRemaining);\r\n    const percent = Math.round((Number(timeTrackingSpent) / max) * 100);\r\n\r\n    return (\r\n      <div>\r\n        <div style={{ display: \"flex\" }}>\r\n          <i className=\"fa fa-clock\" />\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"progress\">\r\n              <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                style={{ width: `${percent}%` }}\r\n                aria-valuenow={Number(timeTrackingSpent)}\r\n                aria-valuemin={Number(timeTrackingRemaining)}\r\n                aria-valuemax={max}\r\n              />\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <p className=\"logged\">{Number(timeTrackingRemaining)}logged</p>\r\n              <p className=\"estimate-time\">\r\n                {Number(timeTrackingRemaining)}h remaining\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"timeTrackingSpent\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <input\r\n              className=\"form-control\"\r\n              name=\"timeTrackingRemaining\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"infoModal\"\r\n      tabIndex={-1}\r\n      role=\"dialog\"\r\n      aria-labelledby=\"infoModal\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog modal-info\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <div className=\"task-title\">\r\n              <i className=\"fa fa-bookmark\" />\r\n              <select\r\n                name=\"typeId\"\r\n                value={taskDetailModal.typeId}\r\n                onChange={handleChange}\r\n              >\r\n                {arrTaskType.map((tp, index) => {\r\n                  return (\r\n                    <option key={index} value={tp.id}>\r\n                      {tp.taskType}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <span>{taskDetailModal.taskName}</span>\r\n            </div>\r\n            <div style={{ display: \"flex\" }} className=\"task-click\">\r\n              <div>\r\n                <i className=\"fab fa-telegram-plane\" />\r\n                <span style={{ paddingRight: 20 }}>Give feedback</span>\r\n              </div>\r\n              <div>\r\n                <i className=\"fa fa-link\" />\r\n                <span style={{ paddingRight: 20 }}>Copy link</span>\r\n              </div>\r\n              <i\r\n                className=\"fa fa-trash-alt='xyz'\"\r\n                style={{ cursor: \"pointer\" }}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">×</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                  <p className=\"issue\">\r\n                    This is an issue of type:{\" \"}\r\n                    {taskDetailModal.taskTypeDetail.taskType}\r\n                  </p>\r\n                  <div className=\"description\">\r\n                    <h6>Description</h6>\r\n                    {renderDescription()}\r\n                  </div>\r\n                  <div className=\"comment\">\r\n                    <h6 className=\"mt-4\">Comment</h6>\r\n\r\n                    {renderComment()}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                  <div className=\"status\">\r\n                    <h6>STATUS</h6>\r\n                    <select\r\n                      name=\"statusId\"\r\n                      className=\"custom-select\"\r\n                      value={taskDetailModal.statusId}\r\n                      onChange={(e) => {\r\n                        dispatch({\r\n                          type: HANDLE_CHANGE_POST_API_SAGA,\r\n                          actionType: CHANGE_TASK_MODAL,\r\n                          value: e.target.value,\r\n                          name: \"statusId\",\r\n                        });\r\n                      }}\r\n                    >\r\n                      {arrStatus.map((status, index) => {\r\n                        return (\r\n                          <option value={status.statusId} key={index}>\r\n                            {status.statusName}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"assignees\">\r\n                    <h6>ASSIGNEES</h6>\r\n                    <div className=\"row\">\r\n                      {taskDetailModal.assigness?.map((user, index) => {\r\n                        return (\r\n                          <div key={index} className=\"col-6  mt-2 \">\r\n                            <div style={{ display: \"flex\" }} className=\"item\">\r\n                              <div className=\"avatar\">\r\n                                <img src={user.avatar} alt={user.avatar} />\r\n                              </div>\r\n                              <p className=\"name mt-1 ml-1\">{user.name}</p>\r\n                              <i\r\n                                className=\"fa fa-times\"\r\n                                style={{\r\n                                  marginLeft: 20,\r\n                                  cursor: \"pointer\",\r\n                                  paddingTop: \"10px\",\r\n                                }}\r\n                                onClick={() => {\r\n                                  dispatch({\r\n                                    type: HANDLE_CHANGE_POST_API_SAGA,\r\n                                    actionType: REMOVE_USER_ASSIGN,\r\n                                    userId: user.id,\r\n                                  });\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n\r\n                      <div className=\"col-6  mt-2 mb-4\">\r\n                        <Select\r\n                          options={projectDetail.members\r\n                            ?.filter((mem) => {\r\n                              let index = taskDetailModal.assigness?.findIndex(\r\n                                (us) => us.id === mem.userId\r\n                              );\r\n                              if (index !== -1) {\r\n                                return false;\r\n                              }\r\n                              return true;\r\n                            })\r\n                            .map((mem) => {\r\n                              return { value: mem.userId, label: mem.name };\r\n                            })}\r\n                          optionFilterProp=\"label\"\r\n                          style={{ width: \"100%\" }}\r\n                          name=\"lstUser\"\r\n                          value=\"+ Add more\"\r\n                          className=\"form-control\"\r\n                          onSelect={(value) => {\r\n                            if (value === \"0\") {\r\n                              return;\r\n                            }\r\n                            let userSelected = projectDetail.members.find(\r\n                              (mem) => mem.userId === value\r\n                            );\r\n                            userSelected = {\r\n                              ...userSelected,\r\n                              id: userSelected.userId,\r\n                            };\r\n\r\n                            dispatch({\r\n                              type: HANDLE_CHANGE_POST_API_SAGA,\r\n                              actionType: CHANGE_ASSIGNESS,\r\n                              userSelected,\r\n                            });\r\n                          }}\r\n                        ></Select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"priority\" style={{ marginBottom: 20 }}>\r\n                    <h6>PRIORITY</h6>\r\n                    <select\r\n                      name=\"priorityId\"\r\n                      className=\"form-control\"\r\n                      value={taskDetailModal.priorityId}\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                    >\r\n                      {arrPriority.map((item, index) => {\r\n                        return (\r\n                          <option key={index} value={item.priorityId}>\r\n                            {item.priority}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"estimate\">\r\n                    <h6>ORIGINAL ESTIMATE (HOURS)</h6>\r\n                    <input\r\n                      name=\"originalEstimate\"\r\n                      type=\"text\"\r\n                      className=\"estimate-hours\"\r\n                      value={taskDetailModal.originalEstimate}\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"time-tracking\">\r\n                    <h6>TIME TRACKING</h6>\r\n                    {renderTimeTracking()}\r\n                  </div>\r\n                  <div style={{ color: \"#929398\" }}>Create at a month ago</div>\r\n                  <div style={{ color: \"#929398\" }}>\r\n                    Update at a few seconds ago\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const GET_ALL_TASK_TYPE = \"GET_ALL_TASK_TYPE\";\r\nexport const GET_ALL_TASK_TYPE_SAGA = \"GET_ALL_TASK_TYPE_SAGA\";\r\nexport const GET_ALL_PRIORITY = \"GET_ALL_PRIORITY\";\r\nexport const GET_ALL_PRIORITY_SAGA = \"GET_ALL_PRIORITY_SAGA\";\r\nexport const GET_ALL_STATUS = \"GET_ALL_STATUS\";\r\nexport const GET_ALL_STATUS_SAGA = \"GET_ALL_STATUS_SAGA\";\r\n\r\nexport const CREATE_TASK_SAGA = \"CREATE_TASK_SAGA\";\r\n\r\nexport const GET_TASK_DETAIL_SAGA = \"GET_TASK_DETAIL_SAGA\";\r\nexport const GET_TASK_DETAIL = \"GET_TASK_DETAIL\";\r\nexport const CHANGE_TASK_MODAL = \"CHANGE_TASK_MODAL\";\r\nexport const REMOVE_USER_ASSIGN = \"REMOVE_USER_ASSIGN\";\r\nexport const CHANGE_ASSIGNESS = \"CHANGE_ASSIGNESS\";\r\n\r\nexport const HANDLE_CHANGE_POST_API_SAGA = \"HANDLE_CHANGE_POST_API_SAGA\";\r\n\r\nexport const GET_ALL_COMMENT = \"GET_ALL_COMMENT\";\r\nexport const GET_ALL_COMMENT_SAGA = \"GET_ALL_COMMENT_SAGA\";\r\n\r\nexport const ADD_COMMENT_SAGA = \"ADD_COMMENT_SAGA\";\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\n\r\n\r\nexport const DELETE_COMMENT_SAGA = \"DELETE_COMMENT_SAGA\";\r\nexport const EDIT_COMMENT_SAGA = \"EDIT_COMMENT_SAGA\";","import { Editor } from \"@tinymce/tinymce-react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Select, Slider } from \"antd\";\r\nimport { withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useSelector, useDispatch, connect } from \"react-redux\";\r\nimport { GET_LIST_TASK_SAGA } from \"../../../redux/constants/Cyberbugs/Cyberbugs\";\r\nimport {\r\n  CREATE_TASK_SAGA,\r\n  GET_ALL_PRIORITY_SAGA,\r\n  GET_ALL_STATUS_SAGA,\r\n  GET_ALL_TASK_TYPE_SAGA,\r\n} from \"../../../redux/constants/CreateProjectCons\";\r\nimport {\r\n  GET_USER_BY_PROJECT_ID_SAGA,\r\n  SET_SUBMIT_CREATE_TASK,\r\n} from \"../../../redux/constants/DrawerCons\";\r\nconst { Option } = Select;\r\n\r\nconst children = [];\r\n\r\nfor (let i = 10; i < 36; i++) {\r\n  children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\r\n}\r\nfunction FormCreateTask(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const { arrTaskList } = useSelector((state) => state.CreateTaskReducer);\r\n  const { arrTaskType } = useSelector((state) => state.CreateTaskReducer);\r\n  const { arrPriority } = useSelector((state) => state.CreateTaskReducer);\r\n  const { arrStatus } = useSelector((state) => state.CreateTaskReducer);\r\n  const { arrAssignees } = useSelector((state) => state.CreateTaskReducer);\r\n  const { handleChange, handleSubmit, setFieldValue } = props;\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: GET_LIST_TASK_SAGA,\r\n    });\r\n    dispatch({ type: GET_ALL_TASK_TYPE_SAGA });\r\n    dispatch({ type: GET_ALL_STATUS_SAGA });\r\n    dispatch({ type: GET_ALL_PRIORITY_SAGA });\r\n    dispatch({ type: SET_SUBMIT_CREATE_TASK, submitFunction: handleSubmit });\r\n  }, [dispatch, handleSubmit]);\r\n\r\n  const userOptions = arrAssignees.map((item) => {\r\n    return { value: item.userId, label: item.name };\r\n  });\r\n\r\n\r\n  const [timeTracking, setTimetracking] = useState({\r\n    timeTrackingSpent: 0,\r\n    timeTrackingRemaining: 0,\r\n  });\r\n\r\n  //Do kết nối với withformik => component có các props\r\n\r\n  const children = [];\r\n  return (\r\n    <form className=\"container\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <p>Project</p>\r\n            <select\r\n              name=\"projectId\"\r\n              className=\"form-control\"\r\n              onChange={(e) => {\r\n                //dispatch giá trị làm thay đổi arrUser\r\n                let { value } = e.target;\r\n                dispatch({\r\n                  type: GET_USER_BY_PROJECT_ID_SAGA,\r\n                  idProject: value,\r\n                });\r\n                //Cập nhật giá trị cho project Id\r\n                setFieldValue(\"projectId\", e.target.value);\r\n              }}\r\n            >\r\n              {arrTaskList.map((project, index) => {\r\n                return (\r\n                  <option key={index} value={project.id}>\r\n                    {project.projectName}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <div className=\"form-group\">\r\n              <p>Status</p>\r\n              <select\r\n                name=\"statusId\"\r\n                className=\"form-control\"\r\n                onChange={handleChange}\r\n              >\r\n                {arrStatus.map((statusItem, index) => {\r\n                  return (\r\n                    <option key={index} value={statusItem.statusId}>\r\n                      {statusItem.statusName}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <p>Task name</p>\r\n        <input\r\n          name=\"taskName\"\r\n          className=\"form-control\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <p>Priority</p>\r\n            <select\r\n              name=\"priorityId\"\r\n              className=\"form-control\"\r\n              onChange={handleChange}\r\n            >\r\n              {arrPriority.map((priority, index) => {\r\n                return (\r\n                  <option key={index} value={priority.priorityId}>\r\n                    {priority.priority}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <p>Task type</p>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"typeId\"\r\n              onChange={handleChange}\r\n            >\r\n              {arrTaskType.map((taskType, index) => {\r\n                return (\r\n                  <option key={index} value={taskType.id}>\r\n                    {taskType.taskType}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <p>Assignees</p>\r\n            <Select\r\n              mode=\"multiple\"\r\n              options={userOptions}\r\n              placeholder=\"Please select\"\r\n              optionFilterProp=\"label\"\r\n              onChange={(values) => {\r\n                setFieldValue(\"listUserAsign\", values);\r\n              }}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              {children}\r\n            </Select>\r\n            <div className=\"row mt-3\">\r\n              <div className=\"col-12\">\r\n                <p>Original Estimate</p>\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  name=\"originalEstimate\"\r\n                  defaultValue=\"0\"\r\n                  className=\"form-control\"\r\n                  height=\"30\"\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <p>Time tracking</p>\r\n\r\n            <Slider\r\n              defaultValue={30}\r\n              value={timeTracking.timeTrackingSpent}\r\n              max={\r\n                Number(timeTracking.timeTrackingSpent) +\r\n                Number(timeTracking.timeTrackingRemaining)\r\n              }\r\n            />\r\n            <div className=\"row\">\r\n              <div className=\"col-6 text-left font-weight-bold\">\r\n                {timeTracking.timeTrackingSpent}h logged\r\n              </div>\r\n              <div className=\"col-6 text-right font-weight-bold\">\r\n                {timeTracking.timeTrackingRemaining}h remaining\r\n              </div>\r\n            </div>\r\n            <div className=\"row\" style={{ marginTop: 5 }}>\r\n              <div className=\"col-6\">\r\n                <p>Time spent</p>\r\n                <input\r\n                  type=\"number\"\r\n                  defaultValue=\"0\"\r\n                  min=\"0\"\r\n                  className=\"form-control\"\r\n                  name=\"timeTrackingSpent\"\r\n                  onChange={(e) => {\r\n                    setTimetracking({\r\n                      ...timeTracking,\r\n                      timeTrackingSpent: e.target.value,\r\n                    });\r\n                    setFieldValue(\"timeTrackingSpent\", e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"col-6\">\r\n                <p>Time remaining</p>\r\n                <input\r\n                  type=\"number\"\r\n                  defaultValue=\"0\"\r\n                  min=\"0\"\r\n                  className=\"form-control\"\r\n                  name=\"timeTrackingRemaining\"\r\n                  onChange={(e) => {\r\n                    setTimetracking({\r\n                      ...timeTracking,\r\n                      timeTrackingRemaining: e.target.value,\r\n                    });\r\n                    setFieldValue(\"timeTrackingRemaining\", e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <p>Description</p>\r\n        <Editor\r\n          name=\"description\"\r\n          init={{\r\n            selector: \"textarea#myTextArea\",\r\n\r\n            height: 500,\r\n            menubar: false,\r\n            plugins: [\r\n              \"advlist autolink lists link image charmap print preview anchor\",\r\n              \"searchreplace visualblocks code fullscreen\",\r\n              \"insertdatetime media table paste code help wordcount\",\r\n            ],\r\n            toolbar:\r\n              \"undo redo | formatselect | bold italic backcolor |alignleft aligncenter alignright alignjustify |  bullist numlist outdent indent | removeformat | help\",\r\n          }}\r\n          onEditorChange={(content, editor) => {\r\n            setFieldValue(\"description\", content);\r\n          }}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst createTaskForm = withFormik({\r\n  enableReinitialize: true,\r\n\r\n  mapPropsToValues: (props) => {\r\n    const { arrTaskList, arrTaskType, arrPriority, arrStatus } = props;\r\n\r\n    return {\r\n      taskName: \"\",\r\n      description: \"\",\r\n      statusId: arrStatus[0]?.statusId,\r\n      originalEstimate: 0,\r\n      timeTrackingSpent: 0,\r\n      timeTrackingRemaining: 0,\r\n      projectId: arrTaskList[0]?.id,\r\n      typeId: arrTaskType[0]?.id,\r\n      priorityId: arrPriority[0]?.priorityId,\r\n      listUserAsign: [],\r\n    };\r\n  },\r\n  validationSchema: Yup.object().shape({}),\r\n  handleSubmit: (values, { props }) => {\r\n    props.dispatch({ type: CREATE_TASK_SAGA, taskObject: values });\r\n  },\r\n  displayName: \"CreateTaskFormik\",\r\n})(FormCreateTask);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    arrTaskList: state.CreateTaskReducer.arrTaskList,\r\n    arrTaskType: state.CreateTaskReducer.arrTaskType,\r\n    arrPriority: state.CreateTaskReducer.arrPriority,\r\n    arrStatus: state.CreateTaskReducer.arrStatus,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(createTaskForm);\r\n","export const CLOSE_DRAWER = \"CLOSE_DRAWER\";\r\nexport const OPEN_DRAWER = \"OPEN_DRAWER\";\r\nexport const SET_SUBMIT_EDIT_PROJECT = \"SET_SUBMIT_EDIT_PROJECT\";\r\nexport const SET_SUBMIT_EDIT_USER = \"SET_SUBMIT_EDIT_USER\";\r\n\r\nexport const GET_USER_API = \"GET_USER_API\";\r\nexport const ADD_USER_PROJECT_API = \"ADD_USER_PROJECT_API\";\r\nexport const REMOVE_USER_PROJECT_API = \"REMOVE_USER_PROJECT_API\";\r\n\r\nexport const OPEN_FORM = \"OPEN_FORM\";\r\n\r\nexport const GET_USER_BY_PROJECT_ID_SAGA = \"GET_USER_BY_PROJECT_ID_SAGA\";\r\nexport const GET_USER_BY_PROJECT_ID = \"GET_USER_BY_PROJECT_ID\";\r\n\r\nexport const SET_SUBMIT_CREATE_TASK = \"SET_SUBMIT_CREATE_TASK\";\r\n","import React, { useState } from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport {\r\n  SearchOutlined,\r\n  PlusOutlined,\r\n  MenuOutlined,\r\n  PauseOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { OPEN_FORM } from \"../../redux/constants/DrawerCons\";\r\nimport FormCreateTask from \"./Forms/FormCreateTask\";\r\n\r\nconst { Sider } = Layout;\r\nexport default function SidebarCyberbugs() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState({\r\n    collapsed: true,\r\n  });\r\n  const toggle = () => {\r\n    setState({\r\n      collapsed: !state.collapsed,\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Sider\r\n        trigger={null}\r\n        collapsible\r\n        collapsed={state.collapsed}\r\n        style={{ height: \"100%\" }}\r\n      >\r\n        {state.collapsed ? (\r\n          <div className=\"text-center my-3\" onClick={toggle}>\r\n            <MenuOutlined\r\n              style={{\r\n                cursor: \"pointer\",\r\n                color: \"#fff\",\r\n                fontSize: 25,\r\n              }}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center my-3\" onClick={toggle}>\r\n            <PauseOutlined\r\n              style={{\r\n                cursor: \"pointer\",\r\n                color: \"#fff\",\r\n                fontSize: 25,\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n          <Menu.Item\r\n            onClick={() => {\r\n              dispatch({\r\n                type: OPEN_FORM,\r\n                title: \"CREATE PROJECT\",\r\n                ComponentContentDrawer: <FormCreateTask />,\r\n              });\r\n            }}\r\n            key=\"1\"\r\n            icon={<PlusOutlined style={{ fontSize: 20 }} />}\r\n          >\r\n            <span className=\"mb-2\">Create Task</span>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<SearchOutlined style={{ fontSize: 20 }} />}>\r\n            Search\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport MenuCyberbugs from \"../../components/Cyberbugs/MenuCyberbugs\";\r\nimport ModalCyberBugs from \"../../components/Cyberbugs/ModalCyberBugs/ModalCyberBugs\";\r\nimport SidebarCyberbugs from \"../../components/Cyberbugs/SidebarCyberbugs\";\r\n\r\nimport \"../../index.css\";\r\n\r\nexport const CyberbugsTemplate = (props) => {\r\n  const { Component, ...restParam } = props;\r\n  return (\r\n    <Route\r\n      {...restParam}\r\n      render={(propsRoute) => {\r\n        return (\r\n          <>\r\n            <div className=\"jira\">\r\n              <SidebarCyberbugs />\r\n              <MenuCyberbugs />\r\n              <Component {...propsRoute} />\r\n              <ModalCyberBugs />\r\n            </div>\r\n          </>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from \"react\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport { withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  CREATE_PROJECT,\r\n  GET_ALL_PROJECT_CATEGORY_SAGA,\r\n} from \"../../../redux/constants/Cyberbugs/Cyberbugs\";\r\n\r\nfunction CreateProject(props) {\r\n  const arrCategory = useSelector((state) => state.CategoryReducer.arrCategory);\r\n  const dispatch = useDispatch();\r\n\r\n  const { handleChange, handleSubmit, setFieldValue } = props;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: GET_ALL_PROJECT_CATEGORY_SAGA });\r\n  }, [dispatch]);\r\n\r\n  const handleEditorChange = (content, editor) => {\r\n    setFieldValue(\"description\", content);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h3 className=\"text-primary\">Create New Project</h3>\r\n      <form onSubmit={handleSubmit} onChange={handleChange}>\r\n        <div className=\"form-group\">\r\n          <p>Name</p>\r\n          <input className=\"form-control\" name=\"projectName\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>Description</p>\r\n          <Editor\r\n            name=\"description\"\r\n            init={{\r\n              selector: \"textarea#myTextArea\",\r\n\r\n              height: 500,\r\n              menubar: false,\r\n              plugins: [\r\n                \"advlist autolink lists link image charmap print preview anchor\",\r\n                \"searchreplace visualblocks code fullscreen\",\r\n                \"insertdatetime media table paste code help wordcount\",\r\n              ],\r\n              toolbar:\r\n                \"undo redo | formatselect | bold italic backcolor |alignleft aligncenter alignright alignjustify |  bullist numlist outdent indent | removeformat | help\",\r\n            }}\r\n            onEditorChange={handleEditorChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <select\r\n            name=\"categoryId\"\r\n            className=\"form-control\"\r\n            onChange={handleChange}\r\n          >\r\n            {arrCategory.map((item, index) => {\r\n              return (\r\n                <option value={item.id} key={index}>\r\n                  {item.projectCategoryName}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n        <button className=\"btn btn-outline-primary w-100 mt-3\" type=\"submit\">\r\n          Create project\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst createProjectForm = withFormik({\r\n  enableReinitialize: true,\r\n\r\n  mapPropsToValues: (props) => ({\r\n    projectName: \"\",\r\n    description: \"\",\r\n    categoryId: props.arrCategory[0]?.id,\r\n  }),\r\n  validationSchema: Yup.object().shape({}),\r\n  handleSubmit: (values, { props, setSubmitting }) => {\r\n    props.dispatch({\r\n      type: CREATE_PROJECT,\r\n      newProject: values,\r\n    });\r\n  },\r\n  displayName: \"CreateProjectFormik\",\r\n})(CreateProject);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  arrCategory: state.CategoryReducer.arrCategory,\r\n});\r\n\r\nexport default connect(mapStateToProps)(createProjectForm);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport { withFormik } from \"formik\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport { EDIT_PROJECT } from \"../../../redux/constants/Cyberbugs/Cyberbugs\";\r\n\r\nfunction FormEditProject(props) {\r\n  const arrCategory = useSelector((state) => state.CategoryReducer.arrCategory);\r\n  const dispatch = useDispatch();\r\n  const { values, handleChange, handleSubmit, setFieldValue } = props;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"GET_ALL_PROJECT_CATEGORY_SAGA\" });\r\n    dispatch({ type: \"SET_SUBMIT_EDIT_PROJECT\", submitFunction: handleSubmit });\r\n  }, [dispatch, handleSubmit]);\r\n\r\n  const handleEditorChange = (content, editor) => {\r\n    setFieldValue(\"description\", content);\r\n  };\r\n\r\n  return (\r\n    <form className=\"container-fuild\" onSubmit={handleSubmit}>\r\n      <div className=\"row\">\r\n        <div className=\"col-4\">\r\n          <div className=\"form-group\">\r\n            <p className=\"font-weight-bold\">Project id</p>\r\n            <input\r\n              value={values.id}\r\n              disabled\r\n              className=\"form-control\"\r\n              name=\"id\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <div className=\"form-group\">\r\n            <p className=\"font-weight-bold\">Project name</p>\r\n            <input\r\n              onChange={handleChange}\r\n              value={values.projectName}\r\n              className=\"form-control\"\r\n              name=\"projectName\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <div className=\"form-group\">\r\n            <p className=\"font-weight-bold\">Project Category</p>\r\n            <select\r\n              onChange={handleChange}\r\n              className=\"form-control\"\r\n              name=\"categoryId\"\r\n              value={values.categoryId}\r\n            >\r\n              {arrCategory.map((item, index) => {\r\n                return (\r\n                  <option key={index} value={item.id}>\r\n                    {item.projectCategoryName}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12\">\r\n          <div className=\"form-group\">\r\n            <p className=\"font-weight-bold\">Description</p>\r\n            <Editor\r\n              name=\"description\"\r\n              value={values.description}\r\n              init={{\r\n                selector: \"textarea#myTextArea\",\r\n\r\n                height: 500,\r\n                menubar: false,\r\n                plugins: [\r\n                  \"advlist autolink lists link image charmap print preview anchor\",\r\n                  \"searchreplace visualblocks code fullscreen\",\r\n                  \"insertdatetime media table paste code help wordcount\",\r\n                ],\r\n                toolbar:\r\n                  \"undo redo | formatselect | bold italic backcolor |alignleft aligncenter alignright alignjustify |  bullist numlist outdent indent | removeformat | help\",\r\n              }}\r\n              onEditorChange={handleEditorChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst editProjectForm = withFormik({\r\n  enableReinitialize: true,\r\n\r\n  mapPropsToValues: (props) => {\r\n    const { projectEdit } = props;\r\n\r\n    return {\r\n      id: projectEdit?.id,\r\n      projectName: projectEdit.projectName,\r\n      description: projectEdit.description,\r\n      categoryId: projectEdit.categoryId,\r\n    };\r\n  },\r\n  validationSchema: Yup.object().shape({}),\r\n  handleSubmit: (values, { props, setSubmitting }) => {\r\n    props.dispatch({\r\n      type: EDIT_PROJECT,\r\n      projectEdit: values,\r\n    });\r\n  },\r\n  displayName: \"EditProJect\",\r\n})(FormEditProject);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  projectEdit: state.ProjectReducer.projectEdit,\r\n});\r\n\r\nexport default connect(mapStateToProps)(editProjectForm);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Table,\r\n  Tag,\r\n  Button,\r\n  Avatar,\r\n  Popconfirm,\r\n  Popover,\r\n  AutoComplete,\r\n} from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FormOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  DELETE_PROJECT,\r\n  EDIT_PROJECT,\r\n  GET_LIST_TASK_SAGA,\r\n} from \"../../../redux/constants/Cyberbugs/Cyberbugs\";\r\nimport FormEditProject from \"../../../components/Cyberbugs/Forms/FormEditProject\";\r\nimport {\r\n  ADD_USER_PROJECT_API,\r\n  GET_USER_API,\r\n  OPEN_FORM,\r\n  REMOVE_USER_PROJECT_API,\r\n} from \"../../../redux/constants/DrawerCons\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function ProjectManagement() {\r\n  const searchRef = useRef(null);\r\n\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: GET_LIST_TASK_SAGA,\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const arrTaskList = useSelector(\r\n    (state) => state.ProjectManagementReducer.arrTaskList\r\n  );\r\n\r\n  const { userSearch } = useSelector(\r\n    (state) => state.UserLoginCyberBugsReducer\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      title: \"id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      sorter: (next, pre) => next.id - pre.id,\r\n    },\r\n    {\r\n      title: \"projectName\",\r\n      dataIndex: \"projectName\",\r\n      key: \"projectName\",\r\n      render: (text, record, index) => {\r\n        return <NavLink to={`projectdetail/${record.id}`}>{text}</NavLink>;\r\n      },\r\n      sorter: (item2, item1) => {\r\n        let projectName1 = item1.projectName?.trim().toLowerCase();\r\n        let projectName2 = item2.projectName?.trim().toLowerCase();\r\n        if (projectName2 < projectName1) {\r\n          return -1;\r\n        }\r\n        return 1;\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"category\",\r\n      dataIndex: \"categoryName\",\r\n      key: \"categoryName\",\r\n      sorter: (item2, item1) => {\r\n        let categoryName1 = item1.categoryName?.trim().toLowerCase();\r\n        let categoryName2 = item2.categoryName?.trim().toLowerCase();\r\n        if (categoryName2 < categoryName1) {\r\n          return -1;\r\n        }\r\n        return 1;\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"creator\",\r\n      // dataIndex: 'creator',\r\n      key: \"creator\",\r\n      render: (text, record, index) => {\r\n        return <Tag color=\"green\">{record.creator?.name}</Tag>;\r\n      },\r\n      sorter: (item2, item1) => {\r\n        let creator1 = item1.creator?.name.trim().toLowerCase();\r\n        let creator2 = item2.creator?.name.trim().toLowerCase();\r\n        if (creator2 < creator1) {\r\n          return -1;\r\n        }\r\n        return 1;\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"members\",\r\n      key: \"members\",\r\n      render: (text, record, index) => {\r\n        return (\r\n          <div>\r\n            {record.members?.slice(0, 3).map((member, index) => {\r\n              return (\r\n                <Popover\r\n                  key={index}\r\n                  placement=\"bottom\"\r\n                  title={\"Members\"}\r\n                  content={() => {\r\n                    return (\r\n                      <table className=\"table\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Id</th>\r\n                            <th>Avatar</th>\r\n                            <th>Name</th>\r\n                            <th></th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {record.members?.map((item, index) => {\r\n                            return (\r\n                              <tr key={index}>\r\n                                <td>{item.userId}</td>\r\n                                <td>\r\n                                  <img\r\n                                    alt=\"\"\r\n                                    src={item.avatar}\r\n                                    width=\"40\"\r\n                                    height=\"40\"\r\n                                    style={{ borderRadius: \"50%\" }}\r\n                                  />\r\n                                </td>\r\n                                <td\r\n                                  style={{\r\n                                    fontSize: 24,\r\n                                    textAlign: \"center\",\r\n                                  }}\r\n                                >\r\n                                  {item.name}\r\n                                </td>\r\n                                <td>\r\n                                  <button\r\n                                    onClick={() => {\r\n                                      dispatch({\r\n                                        type: REMOVE_USER_PROJECT_API,\r\n                                        userProject: {\r\n                                          userId: item.userId,\r\n                                          projectId: record.id,\r\n                                        },\r\n                                      });\r\n                                    }}\r\n                                    className=\"btn btn-danger\"\r\n                                    style={{\r\n                                      borderRadius: \"50%\",\r\n                                    }}\r\n                                  >\r\n                                    X\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    );\r\n                  }}\r\n                >\r\n                  <Avatar key={index} src={member.avatar} />\r\n                </Popover>\r\n              );\r\n            })}\r\n\r\n            {record.members?.length > 3 ? <Avatar>...</Avatar> : \"\"}\r\n\r\n            <Popover\r\n              placement=\"bottom\"\r\n              title={\"Add new user\"}\r\n              content={() => {\r\n                return (\r\n                  <AutoComplete\r\n                    value={value}\r\n                    onChange={(text) => {\r\n                      setValue(text);\r\n                    }}\r\n                    options={userSearch?.map((user) => {\r\n                      return {\r\n                        label: user.name,\r\n                        value: user.userId.toString(),\r\n                      };\r\n                    })}\r\n                    onSelect={(valueSelect, option) => {\r\n                      setValue(option.label);\r\n                      dispatch({\r\n                        type: ADD_USER_PROJECT_API,\r\n                        userProject: {\r\n                          projectId: record.id,\r\n                          userId: valueSelect,\r\n                        },\r\n                      });\r\n                    }}\r\n                    onSearch={(value) => {\r\n                      if (searchRef.current) {\r\n                        clearTimeout(searchRef.current);\r\n                      }\r\n                      searchRef.current = setTimeout(() => {\r\n                        dispatch({\r\n                          type: GET_USER_API,\r\n                          keyword: value,\r\n                        });\r\n                      }, 400);\r\n                    }}\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                );\r\n              }}\r\n              trigger=\"click\"\r\n            >\r\n              <Button style={{ borderRadius: \"50%\" }}>+</Button>\r\n            </Popover>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"\",\r\n      key: \"x\",\r\n      render: (text, record, index) => {\r\n        return (\r\n          <div>\r\n            <button\r\n              className=\"btn mr-2 btn-primary\"\r\n              onClick={() => {\r\n                const action = {\r\n                  type: OPEN_FORM,\r\n                  title: \"EDIT PROJECT\",\r\n                  ComponentContentDrawer: <FormEditProject />,\r\n                };\r\n                dispatch(action);\r\n\r\n                const actionEditProject = {\r\n                  type: EDIT_PROJECT,\r\n                  projectEdit: record,\r\n                };\r\n                dispatch(actionEditProject);\r\n              }}\r\n            >\r\n              <FormOutlined style={{ fontSize: 16 }} />\r\n            </button>\r\n\r\n            <Popconfirm\r\n              title=\"Are you sure to delete this project?\"\r\n              onConfirm={() => {\r\n                dispatch({ type: DELETE_PROJECT, idProject: record.id });\r\n              }}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n            >\r\n              <button className=\"btn btn-danger\">\r\n                <DeleteOutlined style={{ fontSize: 17 }} />\r\n              </button>\r\n            </Popconfirm>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h3 className=\"mb-4 text-primary\">Project management</h3>\r\n\r\n      <Table columns={columns} rowKey={\"id\"} dataSource={arrTaskList} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Drawer, Button } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CLOSE_DRAWER } from \"../../redux/constants/DrawerCons\";\r\n\r\nexport default function DrawerCyberBugs() {\r\n  const { visible, ComponentContentDrawer, callBackSubmit, title } =\r\n    useSelector((state) => state.DrawerReducer);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onClose = () => {\r\n    dispatch({ type: CLOSE_DRAWER });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        title={title}\r\n        width={720}\r\n        onClose={onClose}\r\n        visible={visible}\r\n        bodyStyle={{ paddingBottom: 80 }}\r\n        footer={\r\n          <div\r\n            style={{\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            <Button onClick={onClose} style={{ marginRight: 8 }}>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={callBackSubmit} type=\"primary\">\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        }\r\n      >\r\n        {ComponentContentDrawer}\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  GET_ALL_COMMENT_SAGA,\r\n  GET_TASK_DETAIL_SAGA,\r\n} from \"../../../redux/constants/CreateProjectCons\";\r\n\r\nexport default function ContentMain(props) {\r\n  const { projectDetail } = props;\r\n  const dispatch = useDispatch();\r\n  const renderCardTaskList = () => {\r\n    return projectDetail.lstTask?.map((taskListDetail, index) => {\r\n      return (\r\n        <div\r\n          key={index}\r\n          className=\"card pb-2\"\r\n          style={{ width: \"17rem\", height: \"auto\" }}\r\n        >\r\n          <div className=\"card-header\">{taskListDetail.statusName}</div>\r\n          <ul className=\"list-group list-group-flush\">\r\n            {taskListDetail.lstTaskDeTail.map((task, index) => {\r\n              return (\r\n                <li\r\n                  onClick={() => {\r\n                    dispatch({\r\n                      type: GET_TASK_DETAIL_SAGA,\r\n                      taskId: task.taskId,\r\n                    });\r\n\r\n                    dispatch({\r\n                      type: GET_ALL_COMMENT_SAGA,\r\n                      taskId: task.taskId,\r\n                    });\r\n                  }}\r\n                  key={index}\r\n                  className=\"list-group-item\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#infoModal\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  <p className=\"font-weight-300\">{task.taskName}</p>\r\n                  <div className=\"block\" style={{ display: \"flex\" }}>\r\n                    <div className=\"block-left\">\r\n                      <p className=\"text-danger\">\r\n                        {task.priorityTask.priority}\r\n                      </p>\r\n                      <i className=\"fa fa-bookmark\" />\r\n                      <i className=\"fa fa-arrow-up\" />\r\n                    </div>\r\n                    <div className=\"block-right\">\r\n                      <div className=\"avatar-group\" style={{ display: \"flex\" }}>\r\n                        {task.assigness.map((mem, index) => {\r\n                          return (\r\n                            <div className=\"avatar\" key={index}>\r\n                              <img src={mem.avatar} alt={mem.avatar} />\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\" style={{ display: \"flex\" }}>\r\n      {renderCardTaskList()}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function InfoMain(props) {\r\n  return (\r\n    <>\r\n      <h3 className=\"text-warning\">{props.projectDetail.projectName}</h3>\r\n      <div className=\"info\" style={{ display: \"flex\" }}>\r\n        <div className=\"search-block\">\r\n          <input placeholder=\"Search something...\" className=\"search\" />\r\n          <i className=\"fa fa-search\" />\r\n        </div>\r\n        <div className=\"avatar-group\" style={{ display: \"flex\" }}>\r\n          {props.projectDetail.members?.map((member, index) => {\r\n            return (\r\n              <div key={index} className=\"avatar\">\r\n                <img src={member.avatar} alt=\"1\" />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div style={{ marginLeft: 20 }} className=\"text\">\r\n          Only My Issues\r\n        </div>\r\n        <div style={{ marginLeft: 20 }} className=\"text\">\r\n          Recently Updated\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function HeaderMain(props) {\r\n  return (\r\n    <div className=\"header\">\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\" style={{ backgroundColor: \"white\" }}>\r\n          <li className=\"breadcrumb-item\">Project</li>\r\n          <li className=\"breadcrumb-item\">{props.projectDetail.projectName}</li>\r\n        </ol>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ContentMain from \"../../../components/Cyberbugs/Main/ContentMain\";\r\nimport InfoMain from \"../../../components/Cyberbugs/Main/InfoMain\";\r\nimport HeaderMain from \"../../../components/Cyberbugs/Main/HeaderMain\";\r\n\r\nimport { GET_PROJECT_DETAIL_SAGA } from \"../../../redux/constants/Cyberbugs/Cyberbugs\";\r\n\r\nexport default function IndexCyberBugs(props) {\r\n  const { projectDetail } = useSelector((state) => state.ProjectReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    let projectId = props.match.params.projectId;\r\n    dispatch({\r\n      type: GET_PROJECT_DETAIL_SAGA,\r\n      projectId: projectId,\r\n    });\r\n  }, [dispatch, props.match.params.projectId]);\r\n\r\n  return (\r\n    <div className=\"main ml-5 mt-4\">\r\n      <HeaderMain projectDetail={projectDetail} />\r\n      <InfoMain projectDetail={projectDetail} />\r\n      <ContentMain projectDetail={projectDetail} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Input } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  TwitterOutlined,\r\n  MailOutlined,\r\n  PhoneOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { connect } from \"react-redux\";\r\nimport { singupCyberbugAction } from \"../../../redux/actions/CyberBugsActions\";\r\nimport { NavLink } from \"react-router-dom\";\r\nfunction SignUpCyberBugs(props) {\r\n  const { errors, handleChange, handleSubmit } = props;\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className=\"container\"\r\n      style={{ height: window.innerHeight }}\r\n    >\r\n      F\r\n      <div\r\n        className=\"d-flex flex-column justify-content-center align-items-center\"\r\n        style={{ height: window.innerHeight }}\r\n      >\r\n        <h3\r\n          className=\"text-center\"\r\n          style={{ fontWeight: 700, fontSize: 35, color: \"rgb(59, 89, 152)\" }}\r\n        >\r\n          SIGN UP\r\n        </h3>\r\n        <div className=\"d-flex mt-3\">\r\n          <Input\r\n            onChange={handleChange}\r\n            style={{ width: \"100%\", minWidth: 300 }}\r\n            name=\"email\"\r\n            size=\"large\"\r\n            placeholder=\" email\"\r\n            prefix={<MailOutlined />}\r\n          />\r\n        </div>\r\n        <div className=\"text-danger\">{errors.email}</div>\r\n\r\n        <div className=\"d-flex mt-3\">\r\n          <Input\r\n            onChange={handleChange}\r\n            style={{ width: \"100%\", minWidth: 300 }}\r\n            name=\"name\"\r\n            size=\"large\"\r\n            placeholder=\" name\"\r\n            prefix={<UserOutlined />}\r\n          />\r\n        </div>\r\n        <div className=\"text-danger\">{errors.name}</div>\r\n\r\n        <div className=\"d-flex mt-3\">\r\n          <Input\r\n            onChange={handleChange}\r\n            style={{ width: \"100%\", minWidth: 300 }}\r\n            name=\"phone\"\r\n            size=\"large\"\r\n            placeholder=\" phone\"\r\n            prefix={<PhoneOutlined />}\r\n          />\r\n        </div>\r\n        <div className=\"text-danger\">{errors.phone}</div>\r\n\r\n        <div className=\"d-flex mt-2\">\r\n          <Input\r\n            onChange={handleChange}\r\n            style={{ width: \"100%\", minWidth: 300 }}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            size=\"large\"\r\n            placeholder=\" password\"\r\n            prefix={<LockOutlined />}\r\n          />\r\n        </div>\r\n        <div className=\"text-danger\">{errors.password}</div>\r\n\r\n        <Button\r\n          htmlType=\"submit\"\r\n          size=\"large\"\r\n          style={{\r\n            minWidth: 300,\r\n            backgroundColor: \"rgb(102,117,223)\",\r\n            color: \"#fff\",\r\n          }}\r\n          className=\"mt-4\"\r\n        >\r\n          Sign Up\r\n        </Button>\r\n        <span>\r\n          Already have an account, login <NavLink to=\"/login\">HERE</NavLink>\r\n        </span>\r\n\r\n        <div className=\"social mt-3 d-flex\">\r\n          <Button\r\n            style={{ backgroundColor: \"rgb(59,89,152)\" }}\r\n            shape=\"circle\"\r\n            size={\"large\"}\r\n          >\r\n            <span className=\"font-weight-bold\" style={{ color: \"#fff\" }}>\r\n              F\r\n            </span>\r\n          </Button>\r\n          <Button\r\n            type=\"primary ml-3\"\r\n            shape=\"circle\"\r\n            icon={<TwitterOutlined />}\r\n            size={\"large\"}\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst SignUpCyberBugsWithFormik = withFormik({\r\n  mapPropsToValues: () => ({\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    phone: \"\",\r\n  }),\r\n  validationSchema: Yup.object().shape({\r\n    email: Yup.string()\r\n      .required(\"Email is required!\")\r\n      .email(\"email is invalid!\"),\r\n    password: Yup.string()\r\n      .required(\"Email is required!\")\r\n      .min(6, \"password must have min 6 characters\")\r\n      .max(32, \"password have max 32 characters\"),\r\n    name: Yup.string()\r\n      .min(3, \"name must have min 3 characters\")\r\n      .required(\"Name is required!\"),\r\n    phone: Yup.number()\r\n      .min(10, \"phone must have min 10 numbers\")\r\n      .required(\"Phone Number is required!\"),\r\n  }),\r\n  handleSubmit: (\r\n    { email, password, name, phone },\r\n    { props, setSubmitting }\r\n  ) => {\r\n    setSubmitting(true);\r\n    props.dispatch(singupCyberbugAction(email, password, name, phone));\r\n  },\r\n  displayName: \"SignUpCyberBugs\",\r\n})(SignUpCyberBugs);\r\n\r\nexport default connect()(SignUpCyberBugsWithFormik);\r\n","import { withFormik } from \"formik\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport { EDIT_USER_SAGA } from \"../../../redux/constants/Cyberbugs/Cyberbugs\";\r\nimport {  SET_SUBMIT_EDIT_USER } from \"../../../redux/constants/DrawerCons\";\r\n\r\nfunction FormEditUser(props) {\r\n  const dispatch = useDispatch();\r\n  const { values, handleChange, handleSubmit } = props;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: SET_SUBMIT_EDIT_USER, submitFunction: handleSubmit });\r\n  }, [dispatch, handleSubmit]);\r\n\r\n  return (\r\n    <form className=\"container-fuild\" onSubmit={handleSubmit}>\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <div className=\"form-group\">\r\n            <p className=\"font-weight-bold\">User id</p>\r\n            <input\r\n              value={values.id}\r\n              disabled\r\n              className=\"form-control\"\r\n              name=\"id\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <div className=\"form-group\">\r\n            <p className=\"font-weight-bold\">Phone Number</p>\r\n            <input\r\n              onChange={handleChange}\r\n              value={values.phoneNumber}\r\n              className=\"form-control\"\r\n              name=\"phoneNumber\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <div className=\"form-group\">\r\n            <p className=\"font-weight-bold\">User Name</p>\r\n            <input\r\n              onChange={handleChange}\r\n              value={values.name}\r\n              className=\"form-control\"\r\n              name=\"name\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12\">\r\n          <div className=\"form-group\">\r\n            <p className=\"font-weight-bold\">Email</p>\r\n            <input\r\n              onChange={handleChange}\r\n              value={values.email}\r\n              className=\"form-control\"\r\n              name=\"email\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst editUserForm = withFormik({\r\n  enableReinitialize: true,\r\n\r\n  mapPropsToValues: (props) => {\r\n    const { userEdit } = props;\r\n\r\n    return {\r\n      id: userEdit.userId,\r\n      email: userEdit.email,\r\n      name: userEdit.name,\r\n      phoneNumber: userEdit.phoneNumber,\r\n    };\r\n  },\r\n  validationSchema: Yup.object().shape({\r\n    // email: Yup.string()\r\n    //   .required(\"Email is required!\")\r\n    //   .email(\"email is invalid!\"),\r\n    // name: Yup.string()\r\n    //   .min(3, \"name must have min 3 characters\")\r\n    //   .required(\"Name is required!\"),\r\n    // phoneNumber: Yup.number()\r\n    //   .min(10, \"phone must have min 10 numbers\")\r\n    //   .required(\"Phone Number is required!\"),\r\n  }),\r\n  handleSubmit: (values, { props, setSubmitting }) => {\r\n    props.dispatch({\r\n      type: EDIT_USER_SAGA,\r\n      userEdit: values,\r\n    });\r\n  },\r\n  displayName: \"EditUser\",\r\n})(FormEditUser);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userEdit: state.UserLoginCyberBugsReducer.userEdit,\r\n});\r\n\r\nexport default connect(mapStateToProps)(editUserForm);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Table, Popconfirm, AutoComplete } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  FormOutlined,\r\n  DeleteOutlined,\r\n  ReloadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  DELETE_USER_SAGA,\r\n  EDIT_USER,\r\n  GET_LIST_USER_SAGA,\r\n} from \"../../../redux/constants/Cyberbugs/Cyberbugs\";\r\nimport { GET_USER_API, OPEN_FORM } from \"../../../redux/constants/DrawerCons\";\r\nimport FormEditUser from \"../../../components/Cyberbugs/Forms/FormEditUser\";\r\n\r\nexport default function UserManagement() {\r\n  const searchRef = useRef(null);\r\n\r\n  const [value, setValue] = useState(\"\");\r\n  const { userSearch } = useSelector(\r\n    (state) => state.UserLoginCyberBugsReducer\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: GET_LIST_USER_SAGA,\r\n      keyWord: \"\",\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const arrUser = useSelector(\r\n    (state) => state.UserLoginCyberBugsReducer.arrUser\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      title: \"User Id\",\r\n      dataIndex: \"userId\",\r\n      key: \"userId\",\r\n      sorter: (next, pre) => next.userId - pre.userId,\r\n    },\r\n\r\n    {\r\n      title: \"User Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n\r\n      sorter: (item2, item1) => {\r\n        let name1 = item1.name?.trim().toLowerCase();\r\n        let name2 = item2.name?.trim().toLowerCase();\r\n        if (name2 < name1) {\r\n          return -1;\r\n        }\r\n        return 1;\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n      sorter: (item2, item1) => {\r\n        let email1 = item1.email?.trim().toLowerCase();\r\n        let email2 = item2.email?.trim().toLowerCase();\r\n        if (email2 < email1) {\r\n          return -1;\r\n        }\r\n        return 1;\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"Phone Number\",\r\n      dataIndex: \"phoneNumber\",\r\n      key: \"phoneNumber\",\r\n      sorter: (item2, item1) => {\r\n        let phoneNumber1 = item1.phoneNumber?.trim().toLowerCase();\r\n        let phoneNumber2 = item2.phoneNumber?.trim().toLowerCase();\r\n        if (phoneNumber2 < phoneNumber1) {\r\n          return -1;\r\n        }\r\n        return 1;\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"\",\r\n      key: \"x\",\r\n      render: (text, record, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <button\r\n              className=\"btn mr-2 btn-primary\"\r\n              onClick={() => {\r\n                const action = {\r\n                  type: OPEN_FORM,\r\n                  title: \"EDIT USER\",\r\n                  ComponentContentDrawer: <FormEditUser />,\r\n                };\r\n                dispatch(action);\r\n\r\n                const actionEditUser = {\r\n                  type: EDIT_USER,\r\n                  userEdit: record,\r\n                };\r\n                dispatch(actionEditUser);\r\n              }}\r\n            >\r\n              <FormOutlined style={{ fontSize: 16 }} />\r\n            </button>\r\n\r\n            <Popconfirm\r\n              title=\"Are you sure to delete this user?\"\r\n              onConfirm={() => {\r\n                dispatch({ type: DELETE_USER_SAGA, userId: record.userId });\r\n              }}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n            >\r\n              <button className=\"btn btn-danger\">\r\n                <DeleteOutlined style={{ fontSize: 17 }} />\r\n              </button>\r\n            </Popconfirm>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h3 className=\"mb-4 text-primary\">User Management</h3>\r\n      <AutoComplete\r\n        className=\"mb-4 w-25\"\r\n        placeholder=\"Search User Name here\"\r\n        value={value}\r\n        onChange={(text) => {\r\n          setValue(text);\r\n        }}\r\n        options={userSearch?.map((user) => {\r\n          return {\r\n            label: user.name,\r\n            value: user.userId.toString(),\r\n          };\r\n        })}\r\n        onSelect={(valueSelect, option) => {\r\n          setValue(option.label);\r\n          dispatch({\r\n            type: GET_LIST_USER_SAGA,\r\n            keyWord: valueSelect,\r\n          });\r\n        }}\r\n        onSearch={(value) => {\r\n          if (searchRef.current) {\r\n            clearTimeout(searchRef.current);\r\n          }\r\n          searchRef.current = setTimeout(() => {\r\n            dispatch({\r\n              type: GET_USER_API,\r\n              keyword: value,\r\n            });\r\n          }, 800);\r\n        }}\r\n        style={{ width: \"100%\", height: 40 }}\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          dispatch({\r\n            type: GET_LIST_USER_SAGA,\r\n            keyWord: \"\",\r\n          });\r\n        }}\r\n        className=\"btn ml-2 btn-sm btn-outline-info\"\r\n      >\r\n        <ReloadOutlined />\r\n      </button>\r\n      <Table\r\n        columns={columns}\r\n        rowKey={\"id\"}\r\n        dataSource={arrUser}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport LoadingComponent from \"./components/GlobalSetting/LoadingComponent/LoadingComponent\";\nimport Modal from \"./HOC/Modal/Modal\";\nimport LoginCyberBugs from \"./pages/CyberBugs/LoginCyberBugs/LoginCyberBugs\";\nimport { UserLoginTemplate } from \"./templates/HomeTemplate/UserLoginTemplate\";\nimport { CyberbugsTemplate } from \"./templates/HomeTemplate/CyberbugsTemplate\";\nimport CreateProject from \"./pages/CyberBugs/CreateProject/CreateProject\";\nimport ProjectManagement from \"./pages/CyberBugs/ProjectManagement/ProjectManagement\";\nimport DrawerCyberBugs from \"./HOC/CyberBugs/DrawerCyberBugs\";\nimport IndexCyberBugs from \"./pages/CyberBugs/ProjectDetail/indexCyberBugs\";\nimport SignUpCyberBugs from \"./pages/CyberBugs/SignUpCyberBugs/SignUpCyberBugs\";\nimport UserManagement from \"./pages/CyberBugs/UserManagement/UserManagement\";\n\nfunction App() {\n  return (\n    <>\n      <Modal />\n      <LoadingComponent />\n      <DrawerCyberBugs />\n      <Switch>\n        <UserLoginTemplate exact path=\"/login\" Component={LoginCyberBugs} />\n        <UserLoginTemplate exact path=\"/signup\" Component={SignUpCyberBugs} />\n        <CyberbugsTemplate exact path=\"/cyberbugs\" Component={IndexCyberBugs} />\n        <UserLoginTemplate exact path=\"/\" Component={LoginCyberBugs} />\n        <CyberbugsTemplate\n          exact\n          path=\"/projectdetail/:projectId\"\n          Component={IndexCyberBugs}\n        />\n\n        <CyberbugsTemplate\n          exact\n          path=\"/createproject\"\n          Component={CreateProject}\n        />\n        <CyberbugsTemplate\n          exact\n          path=\"/projectmanagement\"\n          Component={ProjectManagement}\n        />\n\n        <CyberbugsTemplate\n          exact\n          path=\"/usermanagement\"\n          Component={UserManagement}\n        />\n        <CyberbugsTemplate exact path=\"/\" component={IndexCyberBugs} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import { DISPLAY_LOADING, HIDE_LOADING } from \"../constants/LoadingConst\";\n\nconst initialState = {\n  isLoading: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case DISPLAY_LOADING:\n      state.isLoading = true;\n      return { ...state };\n    case HIDE_LOADING: {\n      state.isLoading = false;\n      return { ...state };\n    }\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\n\nconst stateDefault = {\n  Component: <p>Nội dung mặc định</p>,\n};\n\nexport const ModalReducer = (state = stateDefault, action) => {\n  switch (action.type) {\n    case \"OPEN_FORM\": {\n      state.Component = action.Component;\n      return { ...state };\n    }\n\n    default:\n      return { ...state };\n  }\n};\n","const { default: Axios } = require(\"axios\");\nconst { DOMAIN_CYBERBUG, TOKEN } = require(\"../util/constants/settingSystem\");\n\nexport const cyberbugsService = {\n  signinCyberBugs: (userLogin) => {\n    return Axios({\n      url: `${DOMAIN_CYBERBUG}/users/signin`,\n      method: \"POST\",\n      data: userLogin,\n    });\n  },\n\n  signupCyberBugs: (userSignUp) => {\n    return Axios({\n      url: `${DOMAIN_CYBERBUG}/Users/signup`,\n      method: \"POST\",\n      data: userSignUp,\n    });\n  },\n\n  getAllProjectCategory: () => {\n    return Axios({\n      url: `${DOMAIN_CYBERBUG}/ProjectCategory`,\n      method: \"GET\",\n    });\n  },\n\n  createProject: (newProject) => {\n    return Axios({\n      url: `${DOMAIN_CYBERBUG}/Project/createProject`,\n      method: \"POST\",\n      data: newProject,\n    });\n  },\n\n  createProjectAuthorization: (newProject) => {\n    console.log(localStorage.getItem(TOKEN));\n    return Axios({\n      url: `${DOMAIN_CYBERBUG}/Project/createProjectAuthorize`,\n      method: \"POST\",\n      data: newProject,\n      headers: { Authorization: \"Bearer \" + localStorage.getItem(TOKEN) },\n    });\n  },\n\n  getListProject: () => {\n    return Axios({\n      url: `${DOMAIN_CYBERBUG}/Project/getAllProject`,\n      method: \"GET\",\n      headers: { Authorization: \"Bearer \" + localStorage.getItem(TOKEN) },\n    });\n  },\n\n  updateProject: (projectUpdate) => {\n    return Axios({\n      url: `${DOMAIN_CYBERBUG}/Project/updateProject?projectId=${projectUpdate.id}`,\n      method: \"PUT\",\n      data: projectUpdate,\n      headers: { Authorization: \"Bearer \" + localStorage.getItem(TOKEN) },\n    });\n  },\n};\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","import Axios from \"axios\";\r\nimport { DOMAIN_CYBERBUG, TOKEN } from \"../util/constants/settingSystem\";\r\n\r\nexport class BaseService {\r\n  put = (url, model) => {\r\n    return Axios({\r\n      url: `${DOMAIN_CYBERBUG}/${url}`,\r\n      method: \"PUT\",\r\n      data: model,\r\n      headers: { Authorization: \"Bearer \" + localStorage.getItem(TOKEN) }, //JWT\r\n    });\r\n  };\r\n\r\n  post = (url, model) => {\r\n    return Axios({\r\n      url: `${DOMAIN_CYBERBUG}/${url}`,\r\n      method: \"POST\",\r\n      data: model,\r\n      headers: { Authorization: \"Bearer \" + localStorage.getItem(TOKEN) }, //JWT\r\n    });\r\n  };\r\n\r\n  get = (url) => {\r\n    return Axios({\r\n      url: `${DOMAIN_CYBERBUG}/${url}`,\r\n      method: \"GET\",\r\n      headers: { Authorization: \"Bearer \" + localStorage.getItem(TOKEN) },\r\n    });\r\n  };\r\n\r\n  delete = (url) => {\r\n    return Axios({\r\n      url: `${DOMAIN_CYBERBUG}/${url}`,\r\n      method: \"DELETE\",\r\n      headers: { Authorization: \"Bearer \" + localStorage.getItem(TOKEN) },\r\n    });\r\n  };\r\n}\r\n","import { BaseService } from \"./BaseService\";\r\n\r\nexport class UserService extends BaseService {\r\n  getUser = (keyWord) => {\r\n    return this.get(`Users/getUser?keyword=${keyWord}`);\r\n  };\r\n\r\n  assignUserProject = (userProject) => {\r\n    return this.post(`Project/assignUserProject`, userProject);\r\n  };\r\n\r\n  deleteUserFromProject = (userProject) => {\r\n    return this.post(`Project/removeUserFromProject`, userProject);\r\n  };\r\n\r\n  getUserByProjectId = (idProject) => {\r\n    return this.get(`Users/getUserByProjectId?idProject=${idProject}`);\r\n  };\r\n\r\n  getListUser = (keyWord) => {\r\n    return this.get(`Users/getUser?keyword=${keyWord}`);\r\n  };\r\n\r\n  deleteUser = (userId) => {\r\n    return this.delete(`Users/deleteUser?id=${userId}`);\r\n  };\r\n\r\n  editUser = (userEdit) => {\r\n    return this.put(\"Users/editUser\", userEdit);\r\n  };\r\n\r\n  // editUser = (keyWord) => {\r\n  //   return this.get(`Users/getUser?keyword=${keyWord}`);\r\n  // };\r\n}\r\n\r\nexport const userService = new UserService();\r\n","import { notification } from \"antd\";\r\n\r\nexport const notifiFunction = (type, message, description = \"\") => {\r\n  notification[type]({\r\n    //action.typeNotification = success | warning | info | error,\r\n    message: message,\r\n    description: description,\r\n  });\r\n};\r\n","import { call, delay, takeLatest, put } from \"redux-saga/effects\";\nimport { cyberbugsService } from \"../../../services/CyberbugsService\";\nimport {\n  DELETE_USER_SAGA,\n  EDIT_USER_SAGA,\n  GET_LIST_TASK_SAGA,\n  GET_LIST_USER,\n  GET_LIST_USER_SAGA,\n  USER_SIGNIN_API,\n  USER_SIGNUP_API,\n  USLOGIN,\n} from \"../../constants/Cyberbugs/Cyberbugs\";\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../../constants/LoadingConst\";\nimport { TOKEN, USER_LOGIN } from \"../../../util/constants/settingSystem\";\nimport Swal from \"sweetalert2\";\nimport { history } from \"../../../util/history\";\nimport {\n  ADD_USER_PROJECT_API,\n  CLOSE_DRAWER,\n  GET_USER_API,\n  GET_USER_BY_PROJECT_ID,\n  GET_USER_BY_PROJECT_ID_SAGA,\n  REMOVE_USER_PROJECT_API,\n} from \"../../constants/DrawerCons\";\nimport { userService } from \"../../../services/UserService\";\nimport { GET_USER_SEARCH } from \"../../constants/Cyberbugs/UserCons\";\nimport { notifiFunction } from \"../../../util/Notification/notificationCyberbugs\";\n\nfunction* signinSaga(action) {\n  yield put({\n    type: DISPLAY_LOADING,\n  });\n  yield delay(300);\n\n  try {\n    const { data } = yield call(() =>\n      cyberbugsService.signinCyberBugs(action.userLogin)\n    );\n\n    localStorage.setItem(TOKEN, data.content.accessToken);\n    localStorage.setItem(USER_LOGIN, JSON.stringify(data.content));\n\n    yield put({\n      type: USLOGIN,\n      userLogin: data.content,\n    });\n\n    history.push(\"/projectmanagement\");\n  } catch (err) {\n    Swal.fire(err.response.data.message);\n  }\n\n  yield put({\n    type: HIDE_LOADING,\n  });\n}\n\nexport function* theoDoiSignin() {\n  yield takeLatest(USER_SIGNIN_API, signinSaga);\n}\n\nfunction* signupSaga(action) {\n  yield put({\n    type: DISPLAY_LOADING,\n  });\n  yield delay(400);\n\n  try {\n    const { data } = yield call(() =>\n      cyberbugsService.signupCyberBugs(action.userSignUp)\n    );\n    Swal.fire(data.message);\n    history.push(\"/login\");\n  } catch (err) {\n    Swal.fire(err.response.data.message);\n  }\n\n  yield put({\n    type: HIDE_LOADING,\n  });\n}\n\nexport function* theoDoiSignup() {\n  yield takeLatest(USER_SIGNUP_API, signupSaga);\n}\n\nfunction* getUser(action) {\n  try {\n    const { data } = yield call(() => userService.getUser(action.keyword));\n\n    yield put({\n      type: GET_USER_SEARCH,\n      lstUserSearch: data.content,\n    });\n  } catch (err) {\n    Swal.fire(err.response.data.message);\n  }\n}\n\nexport function* theoDoiGetUser() {\n  yield takeLatest(GET_USER_API, getUser);\n}\n\nfunction* addUser(action) {\n  try {\n    yield call(() => userService.assignUserProject(action.userProject));\n\n    yield put({\n      type: GET_LIST_TASK_SAGA,\n    });\n  } catch (err) {\n    Swal.fire(err.response.data.message);\n  }\n}\n\nexport function* theoDoiAddUser() {\n  yield takeLatest(ADD_USER_PROJECT_API, addUser);\n}\n\nfunction* removeUser(action) {\n  try {\n    yield call(() => userService.deleteUserFromProject(action.userProject));\n    yield put({\n      type: GET_LIST_TASK_SAGA,\n    });\n  } catch (err) {\n    Swal.fire(err.response.data.message);\n  }\n}\n\nexport function* theoDoiRemoveUser() {\n  yield takeLatest(REMOVE_USER_PROJECT_API, removeUser);\n}\n\nfunction* getUserByProjectIdSaga(action) {\n  const { idProject } = action;\n\n  try {\n    const { data } = yield call(() =>\n      userService.getUserByProjectId(idProject)\n    );\n\n    yield put({\n      type: GET_USER_BY_PROJECT_ID,\n      arrAssignees: data.content,\n    });\n  } catch (err) {\n    yield put({\n      type: GET_USER_BY_PROJECT_ID,\n      arrAssignees: [],\n    });\n  }\n}\n\nexport function* theoDoiGetUserByProjectIdSaga() {\n  yield takeLatest(GET_USER_BY_PROJECT_ID_SAGA, getUserByProjectIdSaga);\n}\n\nfunction* getListUserSaga(action) {\n  try {\n    const { data } = yield call(() => userService.getListUser(action.keyWord));\n\n    yield put({\n      type: GET_LIST_USER,\n      arrUser: data.content,\n    });\n  } catch (err) {\n    Swal.fire(err.response.data.message);\n  }\n}\n\nexport function* theoDoiGetListUser() {\n  yield takeLatest(GET_LIST_USER_SAGA, getListUserSaga);\n}\n\n// =================== EDIT USER ===================\nfunction* editUser(action) {\n  try {\n    yield call(() => userService.editUser(action.userEdit));\n    notifiFunction(\"success\", \"Edit User Successfully !\");\n\n    yield put({\n      type: GET_LIST_USER_SAGA,\n      keyWord: \"\",\n    });\n\n    yield put({\n      type: CLOSE_DRAWER,\n    });\n  } catch (err) {\n    Swal.fire(err.response.data.message);\n  }\n}\n\nexport function* theoDoiEditUser() {\n  yield takeLatest(EDIT_USER_SAGA, editUser);\n}\n\n// =================== DELETE USER ===================\nfunction* deleteUser(action) {\n  try {\n    yield call(() => userService.deleteUser(action.userId));\n    notifiFunction(\"success\", \"Delete User Successfully !\");\n\n    yield put({\n      type: GET_LIST_USER_SAGA,\n    });\n\n    yield put({\n      type: CLOSE_DRAWER,\n    });\n  } catch (err) {\n    Swal.fire(err.response.data.message);\n  }\n}\n\nexport function* theoDoideleteUser() {\n  yield takeLatest(DELETE_USER_SAGA, deleteUser);\n}\n","export const DISPLAY_LOADING = 'DISPLAY_LOADING';\nexport const HIDE_LOADING = 'HIDE_LOADING';","export const GET_USER_SEARCH = \"GET_USER_SEARCH\";\r\n","import { call, takeLatest, put } from \"redux-saga/effects\";\r\nimport { cyberbugsService } from \"../../../services/CyberbugsService\";\r\nimport {\r\n  GET_ALL_PROJECT_CATEGORY_SAGA,\r\n  GET_CATEGORY,\r\n} from \"../../constants/Cyberbugs/Cyberbugs\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction* getCategory() {\r\n  try {\r\n    const { data } = yield call(() => cyberbugsService.getAllProjectCategory());\r\n\r\n    yield put({\r\n      type: GET_CATEGORY,\r\n      data: data.content,\r\n    });\r\n  } catch (err) {\r\n    Swal.fire(err.response.data.message);\r\n  }\r\n}\r\n\r\nexport function* theoDoiLayCategory() {\r\n  yield takeLatest(GET_ALL_PROJECT_CATEGORY_SAGA, getCategory);\r\n}\r\n","import { BaseService } from \"./BaseService\";\r\n\r\nexport class ProjectService extends BaseService {\r\n\r\n  getAllTaskType = () => {\r\n    return this.get(\"TaskType/getAll\");\r\n  };\r\n\r\n  getAllPriority = () => {\r\n    return this.get(`Priority/getAll`);\r\n  };\r\n\r\n  deleteProject = (id) => {\r\n    return this.delete(`/Project/deleteProject?projectId=${id}`);\r\n  };\r\n\r\n  getProjectDetail = (projectId) => {\r\n    return this.get(`Project/getProjectDetail?id=${projectId}`);\r\n  };\r\n\r\n  getAllStatus = () => {\r\n    return this.get(`Status/getAll`);\r\n  };\r\n}\r\n\r\nexport const projectService = new ProjectService();\r\n","import { call, delay, takeLatest, put } from \"redux-saga/effects\";\r\nimport { cyberbugsService } from \"../../../services/CyberbugsService\";\r\nimport {\r\n  CREATE_PROJECT,\r\n  DELETE_PROJECT,\r\n  EDIT_PROJECT,\r\n  GET_LIST_TASK,\r\n  GET_LIST_TASK_SAGA,\r\n  GET_PROJECT_DETAIL,\r\n  GET_PROJECT_DETAIL_SAGA,\r\n} from \"../../constants/Cyberbugs/Cyberbugs\";\r\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../../constants/LoadingConst\";\r\nimport { history } from \"../../../util/history\";\r\nimport {\r\n  CLOSE_DRAWER,\r\n  GET_USER_BY_PROJECT_ID_SAGA,\r\n} from \"../../constants/DrawerCons\";\r\nimport { projectService } from \"../../../services/ProjectService\";\r\nimport { notifiFunction } from \"../../../util/Notification/notificationCyberbugs\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\n// =================== GET TASK LIST PROJECT ===================\r\nfunction* getListTask(action) {\r\n\r\n  try {\r\n    const { data } = yield call(() => cyberbugsService.getListProject());\r\n    yield put({\r\n      type: GET_LIST_TASK,\r\n      projectList: data.content,\r\n    });\r\n\r\n    yield put({\r\n      type: GET_USER_BY_PROJECT_ID_SAGA,\r\n      idProject: data.content[0].id,\r\n    });\r\n  } catch (err) {\r\n    Swal.fire(err.response.data.message);\r\n  }\r\n}\r\n\r\nexport function* theoDoiLayDanhSach() {\r\n  yield takeLatest(GET_LIST_TASK_SAGA, getListTask);\r\n}\r\n\r\n// =================== EDIT PROJECT ===================\r\nfunction* editProject(action) {\r\n  try {\r\n    yield call(() => cyberbugsService.updateProject(action.projectEdit));\r\n    notifiFunction(\"success\", \"Edit project successfully !\");\r\n\r\n    yield put({\r\n      type: GET_LIST_TASK_SAGA,\r\n    });\r\n\r\n    yield put({\r\n      type: CLOSE_DRAWER,\r\n    });\r\n  } catch (err) {\r\n    console.log(err.response);\r\n  }\r\n}\r\n\r\nexport function* theoEditProject() {\r\n  yield takeLatest(EDIT_PROJECT, editProject);\r\n}\r\n\r\n// =================== DELETE PROJECT ===================\r\nfunction* deleteProject(action) {\r\n  try {\r\n    yield call(() => projectService.deleteProject(action.idProject));\r\n    notifiFunction(\"success\", \"Delete project successfully !\");\r\n    yield put({\r\n      type: GET_LIST_TASK_SAGA,\r\n    });\r\n  } catch (err) {\r\n    notifiFunction(\"error\", \"Delete project fail !\");\r\n  }\r\n}\r\n\r\nexport function* theoDoiDeleteProject() {\r\n  yield takeLatest(DELETE_PROJECT, deleteProject);\r\n}\r\n\r\n// =================== GET PROJECT DETAIL ===================\r\nfunction* getProjectDetail(action) {\r\n  try {\r\n    const { data } = yield call(() =>\r\n      projectService.getProjectDetail(action.projectId)\r\n    );\r\n\r\n    yield put({\r\n      type: GET_PROJECT_DETAIL,\r\n      projectDetail: data.content,\r\n    });\r\n  } catch (err) {\r\n    Swal.fire(err.response.data.message);\r\n  }\r\n}\r\n\r\nexport function* theoDoiGetProjectDetail() {\r\n  yield takeLatest(GET_PROJECT_DETAIL_SAGA, getProjectDetail);\r\n}\r\n\r\n// =================== CREAT PROJECT ===================\r\nfunction* createProject(action) {\r\n  yield put({\r\n    type: DISPLAY_LOADING,\r\n  });\r\n\r\n  yield delay(500);\r\n\r\n  try {\r\n    yield call(() =>\r\n      cyberbugsService.createProjectAuthorization(action.newProject)\r\n    );\r\n\r\n    notifiFunction(\"success\", \"Create project successfully !\");\r\n\r\n    history.push(\"/projectmanagement\");\r\n  } catch (err) {\r\n    notifiFunction(\"error\", \"Create project fail !\");\r\n  }\r\n\r\n  yield put({\r\n    type: HIDE_LOADING,\r\n  });\r\n}\r\n\r\nexport function* theoDoiLayCreateProject() {\r\n  yield takeLatest(CREATE_PROJECT, createProject);\r\n}\r\n","import { BaseService } from \"./BaseService\";\r\n\r\nexport class TaskService extends BaseService {\r\n\r\n  createTask = (taskObject) => {\r\n    return this.post(\"Project/createTask\", taskObject);\r\n  };\r\n\r\n  getTaskDetail = (taskId) => {\r\n    return this.get(`Project/getTaskDetail?taskId=${taskId}`);\r\n  };\r\n\r\n  updateTask = (taskUpdate) => {\r\n    return this.post(`Project/updateTask`, taskUpdate);\r\n  };\r\n}\r\n\r\nexport const taskService = new TaskService();\r\n","import { call, takeLatest, put, select } from \"redux-saga/effects\";\r\nimport { projectService } from \"../../../services/ProjectService\";\r\nimport {\r\n  CHANGE_ASSIGNESS,\r\n  CHANGE_TASK_MODAL,\r\n  CREATE_TASK_SAGA,\r\n  GET_ALL_PRIORITY,\r\n  GET_ALL_PRIORITY_SAGA,\r\n  GET_ALL_STATUS,\r\n  GET_ALL_STATUS_SAGA,\r\n  GET_ALL_TASK_TYPE,\r\n  GET_ALL_TASK_TYPE_SAGA,\r\n  GET_TASK_DETAIL,\r\n  GET_TASK_DETAIL_SAGA,\r\n  HANDLE_CHANGE_POST_API_SAGA,\r\n  REMOVE_USER_ASSIGN,\r\n} from \"../../constants/CreateProjectCons\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { taskService } from \"../../../services/TaskService\";\r\nimport { notifiFunction } from \"../../../util/Notification/notificationCyberbugs\";\r\nimport { CLOSE_DRAWER } from \"../../constants/DrawerCons\";\r\nimport { GET_PROJECT_DETAIL_SAGA } from \"../../constants/Cyberbugs/Cyberbugs\";\r\n\r\n// =================== TASK TYPE API ===================\r\nfunction* getTaskTypeAPI(action) {\r\n  try {\r\n    const { data } = yield call(() => projectService.getAllTaskType());\r\n\r\n    yield put({\r\n      type: GET_ALL_TASK_TYPE,\r\n      arrTaskType: data.content,\r\n    });\r\n  } catch (err) {\r\n    Swal.fire(err.response.data.message);\r\n  }\r\n}\r\n\r\nexport function* theoDoiGetAllTaskType() {\r\n  yield takeLatest(GET_ALL_TASK_TYPE_SAGA, getTaskTypeAPI);\r\n}\r\n\r\n// =================== PRIORITY API ===================\r\n\r\nfunction* getAllPrioritySaga(action) {\r\n  try {\r\n    const { data } = yield call(() => projectService.getAllPriority());\r\n\r\n    yield put({ type: GET_ALL_PRIORITY, arrPriority: data.content });\r\n  } catch (err) {\r\n    Swal.fire(err.response.data.message);\r\n  }\r\n}\r\n\r\nexport function* theoDoiGetAllPriority() {\r\n  yield takeLatest(GET_ALL_PRIORITY_SAGA, getAllPrioritySaga);\r\n}\r\n\r\n// =================== STATUS API ===================\r\n\r\nfunction* getAllStatusSaga(action) {\r\n  try {\r\n    const { data } = yield call(() => projectService.getAllStatus());\r\n\r\n    yield put({ type: GET_ALL_STATUS, arrStatus: data.content });\r\n  } catch (err) {\r\n    Swal.fire(err.response.data.message);\r\n  }\r\n}\r\n\r\nexport function* theoDoiGetAllStatus() {\r\n  yield takeLatest(GET_ALL_STATUS_SAGA, getAllStatusSaga);\r\n}\r\n\r\n// =================== CREATE TASK ===================\r\n\r\nfunction* createTaskSaga(action) {\r\n  try {\r\n    yield call(() => taskService.createTask(action.taskObject));\r\n\r\n    yield put({\r\n      type: CLOSE_DRAWER,\r\n    });\r\n\r\n    yield put({\r\n      type: GET_PROJECT_DETAIL_SAGA,\r\n      projectId: action.taskObject.projectId,\r\n    });\r\n\r\n    notifiFunction(\"success\", \"Create task successfully !\");\r\n  } catch (err) {\r\n    Swal.fire(err.response.data.message);\r\n  }\r\n}\r\n\r\nexport function* theoDoiCreateTaskSaga() {\r\n  yield takeLatest(CREATE_TASK_SAGA, createTaskSaga);\r\n}\r\n\r\n// =================== GET TASK DETAIL SAGA ===================\r\n\r\nfunction* getTaskDetailSaga(action) {\r\n  const { taskId } = action;\r\n\r\n  try {\r\n    const { data } = yield call(() => taskService.getTaskDetail(taskId));\r\n\r\n    yield put({\r\n      type: GET_TASK_DETAIL,\r\n      taskDetailModal: data.content,\r\n    });\r\n  } catch (err) {\r\n    Swal.fire(err.response.data.message);\r\n  }\r\n}\r\n\r\nexport function* theoDoiGetTaskDetailSaga(action) {\r\n  yield takeLatest(GET_TASK_DETAIL_SAGA, getTaskDetailSaga);\r\n}\r\n\r\n// =================== UPDATE TASK AND HANDLE CHANGE SAGA ===================\r\n\r\nexport function* handelChangePostApi(action) {\r\n  switch (action.actionType) {\r\n    case CHANGE_TASK_MODAL:\r\n      {\r\n        const { value, name } = action;\r\n        yield put({\r\n          type: CHANGE_TASK_MODAL,\r\n          name,\r\n          value,\r\n        });\r\n      }\r\n      break;\r\n    case CHANGE_ASSIGNESS:\r\n      {\r\n        const { userSelected } = action;\r\n        yield put({\r\n          type: CHANGE_ASSIGNESS,\r\n          userSelected,\r\n        });\r\n      }\r\n      break;\r\n    case REMOVE_USER_ASSIGN:\r\n      {\r\n        const { userId } = action;\r\n        yield put({\r\n          type: REMOVE_USER_ASSIGN,\r\n          userId,\r\n        });\r\n      }\r\n      break;\r\n    default:\r\n      return;\r\n  }\r\n\r\n  //Save qua api updateTaskSaga\r\n  //Lây dữ liệu từ state.taskDetailModal\r\n  let { taskDetailModal } = yield select((state) => state.TaskDetailReducer);\r\n  //Biến đổi dữ liệu state.taskDetailModal thành dữ liệu api cần\r\n\r\n  const listUserAsign = taskDetailModal.assigness?.map((user, index) => {\r\n    return user.id;\r\n  });\r\n\r\n  const taskUpdateApi = { ...taskDetailModal, listUserAsign };\r\n  try {\r\n    yield call(() => taskService.updateTask(taskUpdateApi));\r\n\r\n    yield put({\r\n      type: GET_PROJECT_DETAIL_SAGA,\r\n      projectId: taskUpdateApi.projectId,\r\n    });\r\n\r\n    yield put({\r\n      type: GET_TASK_DETAIL_SAGA,\r\n      taskId: taskUpdateApi.taskId,\r\n    });\r\n  } catch (err) {\r\n    Swal.fire(err.response.data.message);\r\n  }\r\n}\r\n\r\nexport function* theoDoiHandleChangePostApi() {\r\n  yield takeLatest(HANDLE_CHANGE_POST_API_SAGA, handelChangePostApi);\r\n}\r\n","import { BaseService } from \"./BaseService\";\r\n\r\nexport class CommentService extends BaseService {\r\n\r\n  getAllComment = (taskId) => {\r\n    return this.get(`Comment/getAll?taskId=${taskId}`);\r\n  };\r\n\r\n  insertComment = (cmtObj) => {\r\n    return this.post(\"Comment/insertComment\", cmtObj);\r\n  };\r\n\r\n  deleteComment = (idComment) => {\r\n    return this.delete(`Comment/deleteComment?idComment=${idComment}`);\r\n  };\r\n\r\n  editComment = (idComment, contentComment) => {\r\n    return this.put(\r\n      `Comment/updateComment?id=${idComment}&contentComment=${contentComment}`\r\n    );\r\n  };\r\n}\r\n\r\nexport const commentService = new CommentService();\r\n","import { call, takeLatest, put} from \"redux-saga/effects\";\r\nimport { commentService } from \"../../../services/CommentService\";\r\nimport {\r\n  ADD_COMMENT_SAGA,\r\n  DELETE_COMMENT_SAGA,\r\n  EDIT_COMMENT_SAGA,\r\n  GET_ALL_COMMENT,\r\n  GET_ALL_COMMENT_SAGA,\r\n  GET_TASK_DETAIL_SAGA,\r\n} from \"../../constants/CreateProjectCons\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n// =================== GET ALL COMMENT ===================\r\n\r\nfunction* getCommentApi(action) {\r\n  try {\r\n    yield call(() => commentService.getAllComment(action.taskId));\r\n  } catch (err) {\r\n    Swal.fire(err.response.data.message);\r\n  }\r\n}\r\n\r\nexport function* theoDoigetCommentApi() {\r\n  yield takeLatest(GET_ALL_COMMENT_SAGA, getCommentApi);\r\n}\r\n\r\n// =================== INSERT COMMENT ===================\r\n\r\nfunction* insertCommentApi(action) {\r\n  try {\r\n    yield call(() => commentService.insertComment(action.cmtObj));\r\n\r\n    yield put({\r\n      type: GET_TASK_DETAIL_SAGA,\r\n      taskId: action.cmtObj.taskId,\r\n    });\r\n  } catch (err) {\r\n    Swal.fire(err.response.data.message);\r\n  }\r\n}\r\n\r\nexport function* theoDoiInsertCommentApi() {\r\n  yield takeLatest(ADD_COMMENT_SAGA, insertCommentApi);\r\n}\r\n\r\n// =================== DELETE COMMENT ===================\r\n\r\nfunction* deleteCommentApi(action) {\r\n  try {\r\n    yield call(() => commentService.deleteComment(action.idComment));\r\n\r\n    yield put({\r\n      type: GET_TASK_DETAIL_SAGA,\r\n      taskId: action.taskId,\r\n    });\r\n  } catch (err) {\r\n    Swal.fire(err.response.data.message);\r\n  }\r\n}\r\n\r\nexport function* theoDoiDeleteCommentApi() {\r\n  yield takeLatest(DELETE_COMMENT_SAGA, deleteCommentApi);\r\n}\r\n\r\n// =================== EDIT COMMENT ===================\r\n\r\nfunction* editCommentApi(action) {\r\n  try {\r\n    yield call(() =>\r\n      commentService.editComment(action.idComment, action.contentCommentEdit)\r\n    );\r\n\r\n    yield put({\r\n      type: GET_ALL_COMMENT,\r\n      visibleEditor: false,\r\n    });\r\n\r\n    yield put({\r\n      type: GET_TASK_DETAIL_SAGA,\r\n      taskId: action.taskId,\r\n    });\r\n  } catch (err) {\r\n    Swal.fire(err.response.data.message);\r\n  }\r\n}\r\n\r\nexport function* theoDoiEditCommentApi() {\r\n  yield takeLatest(EDIT_COMMENT_SAGA, editCommentApi);\r\n}\r\n","import { all } from \"redux-saga/effects\";\nimport * as Cyberbugs from \"./Cyberbugs/UserCyberbugsSaga\";\nimport * as CategorySaga from \"./Cyberbugs/CategorySaga\";\nimport * as ProjectSaga from \"./Cyberbugs/PropjectSaga\";\nimport * as CreateTaskSaga from \"./Cyberbugs/CreateTaskSaga\";\nimport * as CommentSaga from \"./Cyberbugs/CommentSaga\";\n\nexport function* rootSaga() {\n  yield all([\n    Cyberbugs.theoDoiSignin(),\n    Cyberbugs.theoDoiSignup(),\n    Cyberbugs.theoDoiGetUser(),\n    Cyberbugs.theoDoiAddUser(),\n    Cyberbugs.theoDoiRemoveUser(),\n    Cyberbugs.theoDoiGetUserByProjectIdSaga(),\n    Cyberbugs.theoDoiGetListUser(),\n    Cyberbugs.theoDoiEditUser(),\n    Cyberbugs.theoDoideleteUser(),\n\n    CategorySaga.theoDoiLayCategory(),\n\n    ProjectSaga.theoDoiLayCreateProject(),\n    ProjectSaga.theoDoiLayDanhSach(),\n    ProjectSaga.theoEditProject(),\n    ProjectSaga.theoDoiDeleteProject(),\n    ProjectSaga.theoDoiGetProjectDetail(),\n\n    CreateTaskSaga.theoDoiGetAllTaskType(),\n    CreateTaskSaga.theoDoiGetAllPriority(),\n    CreateTaskSaga.theoDoiGetAllStatus(),\n    CreateTaskSaga.theoDoiCreateTaskSaga(),\n    CreateTaskSaga.theoDoiGetTaskDetailSaga(),\n    CreateTaskSaga.theoDoiHandleChangePostApi(),\n\n    CommentSaga.theoDoigetCommentApi(),\n    CommentSaga.theoDoiInsertCommentApi(),\n    CommentSaga.theoDoiDeleteCommentApi(),\n    CommentSaga.theoDoiEditCommentApi(),\n  ]);\n}\n","\n\n\nconst historyState = {\n    history:{}\n};\n\n\n\nexport const HistoryReducer = (state = historyState,action) => {\n    switch(action.type) {\n        case 'ADD_HISTORY':{\n            state.history = action.history;\n            return {...state}\n        }\n        default: return {...state}\n    }\n}","import {\n  EDIT_USER,\n  GET_LIST_USER,\n  USLOGIN,\n} from \"../constants/Cyberbugs/Cyberbugs\";\nimport { GET_USER_SEARCH } from \"../constants/Cyberbugs/UserCons\";\n\nconst { USER_LOGIN } = require(\"../../util/constants/settingSystem\");\n\nlet usLogin = {};\n\nif (localStorage.getItem(USER_LOGIN)) {\n  usLogin = JSON.parse(localStorage.getItem(USER_LOGIN));\n}\n\nconst stateDefault = {\n  userLogin: usLogin,\n  userSearch: [],\n  arrUser: [],\n  userEdit: {\n    userId: 0,\n    email: \"default\",\n    name: \"default\",\n    phoneNumber: \"default\",\n  },\n};\n\nexport const UserLoginCyberBugsReducer = (state = stateDefault, action) => {\n  switch (action.type) {\n    case USLOGIN: {\n      state.userLogin = action.userLogin;\n      return { ...state };\n    }\n\n    case EDIT_USER:\n      state.userEdit = action.userEdit;\n      return { ...state };\n\n    case GET_USER_SEARCH: {\n      state.userSearch = action.lstUserSearch;\n      return { ...state };\n    }\n\n    case GET_LIST_USER: {\n      state.arrUser = action.arrUser;\n      return { ...state };\n    }\n\n    default:\n      return { ...state };\n  }\n};\n","const initialState = {\r\n  arrCategory: [],\r\n};\r\n\r\nexport const CategoryReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_CATEGORY\":\r\n      state.arrCategory = action.data;\r\n      return { ...state };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { GET_LIST_TASK } from \"../constants/Cyberbugs/Cyberbugs\";\r\n\r\nconst initialState = {\r\n  arrTaskList: [],\r\n};\r\n\r\nexport const ProjectManagementReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LIST_TASK:\r\n      state.arrTaskList = action.projectList;\r\n      return { ...state };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  CLOSE_DRAWER,\r\n  OPEN_DRAWER,\r\n  OPEN_FORM,\r\n  SET_SUBMIT_CREATE_TASK,\r\n  SET_SUBMIT_EDIT_PROJECT,\r\n  SET_SUBMIT_EDIT_USER,\r\n} from \"../constants/DrawerCons\";\r\nconst initialState = {\r\n  visible: false,\r\n  title: \"\",\r\n  ComponentContentDrawer: <div>Default</div>,\r\n  callBackSubmit: (propsValue) => {},\r\n};\r\n\r\nexport const DrawerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case OPEN_DRAWER:\r\n      return { ...state, visible: true };\r\n    case CLOSE_DRAWER:\r\n      return { ...state, visible: false };\r\n    case OPEN_FORM: {\r\n      return {\r\n        ...state,\r\n        visible: true,\r\n        ComponentContentDrawer: action.ComponentContentDrawer,\r\n        title: action.title,\r\n      };\r\n    }\r\n    case SET_SUBMIT_EDIT_PROJECT: {\r\n      state.callBackSubmit = action.submitFunction;\r\n      return { ...state };\r\n    }\r\n\r\n    case SET_SUBMIT_EDIT_USER: {\r\n      state.callBackSubmit = action.submitFunction;\r\n      return { ...state };\r\n    }\r\n\r\n    case SET_SUBMIT_CREATE_TASK: {\r\n      state.callBackSubmit = action.submitFunction;\r\n      return { ...state };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  EDIT_PROJECT,\r\n  GET_PROJECT_DETAIL,\r\n} from \"../constants/Cyberbugs/Cyberbugs\";\r\n\r\nconst initialState = {\r\n  projectEdit: {\r\n    id: 0,\r\n    projectName: \"default\",\r\n    description: \"default\",\r\n    categoryId: \"\",\r\n  },\r\n  projectDetail: {},\r\n};\r\n\r\nexport const ProjectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case EDIT_PROJECT:\r\n      state.projectEdit = action.projectEdit;\r\n      return { ...state };\r\n\r\n    case GET_PROJECT_DETAIL:\r\n      state.projectDetail = action.projectDetail;\r\n      return { ...state };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_ALL_PRIORITY,\r\n  GET_ALL_STATUS,\r\n  GET_ALL_TASK_TYPE,\r\n} from \"../constants/CreateProjectCons\";\r\nimport { GET_LIST_TASK } from \"../constants/Cyberbugs/Cyberbugs\";\r\nimport { GET_USER_BY_PROJECT_ID } from \"../constants/DrawerCons\";\r\n\r\nconst initialState = {\r\n  arrTaskList: [],\r\n  arrTaskType: [],\r\n  arrPriority: [],\r\n  arrStatus: [],\r\n  arrAssignees: [],\r\n};\r\n\r\nexport const CreateTaskReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LIST_TASK:\r\n      return { ...state, arrTaskList: action.projectList };\r\n\r\n    case GET_ALL_TASK_TYPE:\r\n      return { ...state, arrTaskType: action.arrTaskType };\r\n\r\n    case GET_ALL_PRIORITY:\r\n      return { ...state, arrPriority: action.arrPriority };\r\n\r\n    case GET_ALL_STATUS:\r\n      return { ...state, arrStatus: action.arrStatus };\r\n\r\n    case GET_USER_BY_PROJECT_ID:\r\n      return { ...state, arrAssignees: action.arrAssignees };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CHANGE_ASSIGNESS,\r\n  CHANGE_TASK_MODAL,\r\n  GET_TASK_DETAIL,\r\n  REMOVE_USER_ASSIGN,\r\n} from \"../constants/CreateProjectCons\";\r\n\r\nconst initialState = {\r\n  taskDetailModal: {\r\n    priorityTask: {\r\n      priorityId: 1,\r\n      priority: \"High\",\r\n    },\r\n    taskTypeDetail: {\r\n      id: 1,\r\n      taskType: \"bug\",\r\n    },\r\n    assigness: [\r\n      {\r\n        id: 68,\r\n        avatar: \"https://ui-avatars.com/api/?name=khải\",\r\n        name: \"khải\",\r\n        alias: \"khai\",\r\n      },\r\n      {\r\n        id: 69,\r\n        avatar: \"https://ui-avatars.com/api/?name=thoa\",\r\n        name: \"thoa\",\r\n        alias: \"thoa\",\r\n      },\r\n    ],\r\n    lstComment: [\r\n      {\r\n        idUser: 495,\r\n        avatar: \"https://ui-avatars.com/api/?name=khải\",\r\n        name: \"khải\",\r\n        commentContent: \"This is a new comment\",\r\n        visibleEditor: true,\r\n      },\r\n    ],\r\n    taskId: 54,\r\n    taskName: \"task 1\",\r\n    alias: \"task-1\",\r\n    description:\r\n      \"<p>Before you start work on an issue, you can set a time or other type of estimate to calculate how much work you believe it'll take to resolve it. Once you've started to work on a specific issue, log time to keep a record of it.</p>\\n<p>&nbsp;</p>\\n<ul>\\n<li>Open the issue and select&nbsp;&bull;&bull;&bull; &gt;&nbsp;Time tracking</li>\\n<li>Fill in the<strong>&nbsp;Time Spent</strong>&nbsp;field</li>\\n<li>Fill in the <strong>Time Remaining</strong> field and click Save</li>\\n</ul>\\n<p>&nbsp;</p>\\n<h3><u>That's it!</u></h3>\\n<h1>💯💯</h1>\\n<p>&nbsp;</p>\",\r\n    statusId: \"2\",\r\n    originalEstimate: 30,\r\n    timeTrackingSpent: 10,\r\n    timeTrackingRemaining: 10,\r\n    typeId: 1,\r\n    priorityId: 1,\r\n    projectId: 109,\r\n  },\r\n};\r\n\r\nexport const TaskDetailReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TASK_DETAIL: {\r\n      return { ...state, taskDetailModal: action.taskDetailModal };\r\n    }\r\n    case CHANGE_TASK_MODAL: {\r\n      const { name, value } = action;\r\n      return {\r\n        ...state,\r\n        taskDetailModal: { ...state.taskDetailModal, [name]: value },\r\n      };\r\n    }\r\n\r\n    case CHANGE_ASSIGNESS: {\r\n      state.taskDetailModal.assigness = [\r\n        ...state.taskDetailModal.assigness,\r\n        action.userSelected,\r\n      ];\r\n      console.log(state.taskDetailModal.lstComment);\r\n      return { ...state };\r\n    }\r\n\r\n    case REMOVE_USER_ASSIGN: {\r\n      state.taskDetailModal.assigness = [\r\n        ...state.taskDetailModal.assigness.filter(\r\n          (us) => us.id !== action.userId\r\n        ),\r\n      ];\r\n      return { ...state };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport LoadingReducer from \"./reducers/LoadingReducer\";\nimport { ModalReducer } from \"./reducers/ModalReducer\";\nimport reduxThunk from \"redux-thunk\";\n\n//middleware saga\nimport createMiddleWareSaga from \"redux-saga\";\nimport { rootSaga } from \"./sagas/rootSaga\";\nimport { HistoryReducer } from \"./reducers/HistoryReducer\";\nimport { UserLoginCyberBugsReducer } from \"./reducers/UserCyberBugsReducer\";\nimport { CategoryReducer } from \"./reducers/CategoryReducer\";\nimport { ProjectManagementReducer } from \"./reducers/ProjectManagementReducer\";\nimport { DrawerReducer } from \"./reducers/DrawerReducer\";\nimport { ProjectReducer } from \"./reducers/ProjectReducer\";\nimport { CreateTaskReducer } from \"./reducers/CreateTaskReducer\";\nimport { TaskDetailReducer } from \"./reducers/TaskDetailReducer\";\n\nconst middleWareSaga = createMiddleWareSaga();\nconst rootReducer = combineReducers({\n  LoadingReducer,\n  ModalReducer,\n  HistoryReducer,\n  UserLoginCyberBugsReducer,\n  CategoryReducer,\n  ProjectManagementReducer,\n  DrawerReducer,\n  ProjectReducer,\n  CreateTaskReducer,\n  TaskDetailReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(reduxThunk, middleWareSaga)\n);\n\nmiddleWareSaga.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nimport store from \"./redux/configStore\";\nimport { Provider } from \"react-redux\";\nimport \"antd/dist/antd.css\";\nimport { Router } from \"react-router-dom\";\nimport { history } from \"./util/history\";\n\nReactDOM.render(\n  <Router history={history}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n","export const DOMAIN = \"http://svcy.myclass.vn/api\";\n\nexport const DOMAIN_CYBERBUG = \"http://casestudy.cyberlearn.vn/api\";\n\nexport const TOKEN = \"access_token\";\nexport const USER_LOGIN = \"USER_LOGIN\";\n\nexport const STATUS_CODE = {\n  SUCCESS: 200,\n  NOT_FOUND: 404,\n  SERVER_ERROR: 500,\n};\n"],"sourceRoot":""}